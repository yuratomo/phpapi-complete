call phpapi#function('abs(', 'mixed $number)', 'number')
call phpapi#function('acos(', 'float $arg)', 'float')
call phpapi#function('acosh(', 'float $arg)', 'float')
call phpapi#function('add_root(', 'string $name)', 'domelement')
call phpapi#function('addcslashes(', 'string $str , string $charlist)', 'string')
call phpapi#function('addslashes(', 'string $str)', 'string')
call phpapi#function('aggregate(', 'object $object , string $class_name)', 'void')
call phpapi#function('aggregate_info(', 'object $object)', 'array')
call phpapi#function('aggregate_methods(', 'object $object , string $class_name)', 'void')
call phpapi#function('aggregate_methods_by_list(', 'object $object , string $class_name , array $methods_list [, bool $exclude = false ])', 'void')
call phpapi#function('aggregate_methods_by_regexp(', 'object $object , string $class_name , string $regexp [, bool $exclude = false ])', 'void')
call phpapi#function('aggregate_properties(', 'object $object , string $class_name)', 'void')
call phpapi#function('aggregate_properties_by_list(', 'object $object , string $class_name , array $properties_list [, bool $exclude = false ])', 'void')
call phpapi#function('aggregate_properties_by_regexp(', 'object $object , string $class_name , string $regexp [, bool $exclude = false ])', 'void')
call phpapi#function('apache_child_terminate(', 'void)', 'bool')
call phpapi#function('apache_get_modules(', 'void)', 'array')
call phpapi#function('apache_get_version(', 'void)', 'string')
call phpapi#function('apache_getenv(', 'string $variable [, bool $walk_to_top ])', 'string')
call phpapi#function('apache_lookup_uri(', 'string $filename)', 'object')
call phpapi#function('apache_note(', 'string $note_name [, string $note_value ])', 'string')
call phpapi#function('apache_request_headers(', 'void)', 'array')
call phpapi#function('apache_reset_timeout(', 'void)', 'bool')
call phpapi#function('apache_response_headers(', 'void)', 'array')
call phpapi#function('apache_setenv(', 'string $variable , string $value [, bool $walk_to_top = false ])', 'bool')
call phpapi#function('apc_add(', 'string $key [, mixed $var [, int $ttl = 0 ]])', 'bool')
call phpapi#function('apc_bin_dump(', '[ array $files [, array $user_vars ]])', 'string')
call phpapi#function('apc_bin_load(', 'string $data [, int $flags = 0 ])', 'bool')
call phpapi#function('apc_bin_loadfile(', 'string $filename [, resource $context [, int $flags ]])', 'bool')
call phpapi#function('apc_cache_info(', '[ string $cache_type [, bool $limited = false ]])', 'array')
call phpapi#function('apc_cas(', 'string $key , int $old , int $new)', 'bool')
call phpapi#function('apc_clear_cache(', '[ string $cache_type ])', 'bool')
call phpapi#function('apc_compile_file(', 'string $filename [, bool $atomic = true ])', 'mixed')
call phpapi#function('apc_dec(', 'string $key [, int $step = 1 [, bool &$success ]])', 'int')
call phpapi#function('apc_define_constants(', 'string $key , array $constants [, bool $case_sensitive = true ])', 'bool')
call phpapi#function('apc_delete(', 'string $key)', 'mixed')
call phpapi#function('apc_delete_file(', 'mixed $keys)', 'mixed')
call phpapi#function('apc_exists(', 'mixed $keys)', 'mixed')
call phpapi#function('apc_fetch(', 'mixed $key [, bool &$success ])', 'mixed')
call phpapi#function('apc_inc(', 'string $key [, int $step = 1 [, bool &$success ]])', 'int')
call phpapi#function('apc_load_constants(', 'string $key [, bool $case_sensitive = true ])', 'bool')
call phpapi#function('apc_sma_info(', '[ bool $limited = false ])', 'array')
call phpapi#function('apc_store(', 'string $key , mixed $var [, int $ttl = 0 ])', 'bool')
call phpapi#function('apd_breakpoint(', 'int $debug_level)', 'bool')
call phpapi#function('apd_callstack(', 'void)', 'array')
call phpapi#function('apd_clunk(', 'string $warning [, string $delimiter ])', 'void')
call phpapi#function('apd_continue(', 'int $debug_level)', 'bool')
call phpapi#function('apd_croak(', 'string $warning [, string $delimiter ])', 'void')
call phpapi#function('apd_dump_function_table(', 'void)', 'void')
call phpapi#function('apd_dump_persistent_resources(', 'void)', 'array')
call phpapi#function('apd_dump_regular_resources(', 'void)', 'array')
call phpapi#function('apd_echo(', 'string $output)', 'bool')
call phpapi#function('apd_get_active_symbols(', 'void)', 'array')
call phpapi#function('apd_set_pprof_trace(', '[ string $dump_directory [, string $fragment = "pprof" ]])', 'string')
call phpapi#function('apd_set_session(', 'int $debug_level)', 'void')
call phpapi#function('apd_set_session_trace(', 'int $debug_level [, string $dump_directory ])', 'void')
call phpapi#function('apd_set_session_trace_socket(', 'string $tcp_server , int $socket_type , int $port , int $debug_level)', 'bool')
call phpapi#function('append_sibling(', 'domelement $newnode)', 'domelement')
call phpapi#function('array(', '[ mixed $... ])', 'array')
call phpapi#function('array_change_key_case(', 'array $input [, int $case = CASE_LOWER ])', 'array')
call phpapi#function('array_chunk(', 'array $input , int $size [, bool $preserve_keys = false ])', 'array')
call phpapi#function('array_combine(', 'array $keys , array $values)', 'array')
call phpapi#function('array_count_values(', 'array $input)', 'array')
call phpapi#function('array_diff(', 'array $array1 , array $array2 [, array $... ])', 'array')
call phpapi#function('array_diff_assoc(', 'array $array1 , array $array2 [, array $... ])', 'array')
call phpapi#function('array_diff_key(', 'array $array1 , array $array2 [, array $... ])', 'array')
call phpapi#function('array_diff_uassoc(', 'array $array1 , array $array2 [, array $... ], callback $key_compare_func)', 'array')
call phpapi#function('array_diff_ukey(', 'array $array1 , array $array2 [, array $ ... ], callback $key_compare_func)', 'array')
call phpapi#function('array_fill(', 'int $start_index , int $num , mixed $value)', 'array')
call phpapi#function('array_fill_keys(', 'array $keys , mixed $value)', 'array')
call phpapi#function('array_filter(', 'array $input [, callback $callback ])', 'array')
call phpapi#function('array_flip(', 'array $trans)', 'array')
call phpapi#function('array_intersect(', 'array $array1 , array $array2 [, array $ ... ])', 'array')
call phpapi#function('array_intersect_assoc(', 'array $array1 , array $array2 [, array $ ... ])', 'array')
call phpapi#function('array_intersect_key(', 'array $array1 , array $array2 [, array $ ... ])', 'array')
call phpapi#function('array_intersect_uassoc(', 'array $array1 , array $array2 [, array $ ... ], callback $key_compare_func)', 'array')
call phpapi#function('array_intersect_ukey(', 'array $array1 , array $array2 [, array $... ], callback $key_compare_func)', 'array')
call phpapi#function('array_key_exists(', 'mixed $key , array $search)', 'bool')
call phpapi#function('array_keys(', 'array $input [, mixed $search_value [, bool $strict = false ]])', 'array')
call phpapi#function('array_map(', 'callback $callback , array $arr1 [, array $... ])', 'array')
call phpapi#function('array_merge(', 'array $array1 [, array $... ])', 'array')
call phpapi#function('array_merge_recursive(', 'array $array1 [, array $... ])', 'array')
call phpapi#function('array_multisort(', 'array &$arr [, mixed $arg = SORT_ASC [, mixed $arg = SORT_REGULAR [, mixed $... ]]])', 'bool')
call phpapi#function('array_pad(', 'array $input , int $pad_size , mixed $pad_value)', 'array')
call phpapi#function('array_pop(', 'array &$array)', 'mixed')
call phpapi#function('array_product(', 'array $array)', 'number')
call phpapi#function('array_push(', 'array &$array , mixed $var [, mixed $... ])', 'int')
call phpapi#function('array_rand(', 'array $input [, int $num_req = 1 ])', 'mixed')
call phpapi#function('array_reduce(', 'array $input , callback $function [, mixed $initial = NULL ])', 'mixed')
call phpapi#function('array_replace(', 'array &$array , array &$array1 [, array &$... ])', 'array')
call phpapi#function('array_replace_recursive(', 'array &$array , array &$array1 [, array &$... ])', 'array')
call phpapi#function('array_reverse(', 'array $array [, bool $preserve_keys = false ])', 'array')
call phpapi#function('array_search(', 'mixed $needle , array $haystack [, bool $strict = false ])', 'mixed')
call phpapi#function('array_shift(', 'array &$array)', 'mixed')
call phpapi#function('array_slice(', 'array $array , int $offset [, int $length [, bool $preserve_keys = false ]])', 'array')
call phpapi#function('array_splice(', 'array &$input , int $offset [, int $length = 0 [, mixed $replacement ]])', 'array')
call phpapi#function('array_sum(', 'array $array)', 'number')
call phpapi#function('array_udiff(', 'array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)', 'array')
call phpapi#function('array_udiff_assoc(', 'array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)', 'array')
call phpapi#function('array_udiff_uassoc(', 'array $array1 , array $array2 [, array $ ... ], callback $data_compare_func , callback $key_compare_func)', 'array')
call phpapi#function('array_uintersect(', 'array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)', 'array')
call phpapi#function('array_uintersect_assoc(', 'array $array1 , array $array2 [, array $ ... ], callback $data_compare_func)', 'array')
call phpapi#function('array_uintersect_uassoc(', 'array $array1 , array $array2 [, array $ ... ], callback $data_compare_func , callback $key_compare_func)', 'array')
call phpapi#function('array_unique(', 'array $array [, int $sort_flags = SORT_STRING ])', 'array')
call phpapi#function('array_unshift(', 'array &$array , mixed $var [, mixed $... ])', 'int')
call phpapi#function('array_values(', 'array $input)', 'array')
call phpapi#function('array_walk(', 'array &$array , callback $funcname [, mixed $userdata ])', 'bool')
call phpapi#function('array_walk_recursive(', 'array &$input , callback $funcname [, mixed $userdata ])', 'bool')
call phpapi#function('arsort(', 'array &$array [, int $sort_flags = SORT_REGULAR ])', 'bool')
call phpapi#function('asin(', 'float $arg)', 'float')
call phpapi#function('asinh(', 'float $arg)', 'float')
call phpapi#function('asort(', 'array &$array [, int $sort_flags = SORT_REGULAR ])', 'bool')
call phpapi#function('assert(', 'mixed $assertion)', 'bool')
call phpapi#function('assert_options(', 'int $what [, mixed $value ])', 'mixed')
call phpapi#function('atan(', 'float $arg)', 'float')
call phpapi#function('atan2(', 'float $y , float $x)', 'float')
call phpapi#function('atanh(', 'float $arg)', 'float')
call phpapi#function('attributes(', 'void)', 'array')
call phpapi#function('base_convert(', 'string $number , int $frombase , int $tobase)', 'string')
call phpapi#function('base64_decode(', 'string $data [, bool $strict = false ])', 'string')
call phpapi#function('base64_encode(', 'string $data)', 'string')
call phpapi#function('basename(', 'string $path [, string $suffix ])', 'string')
call phpapi#function('bbcode_add_element(', 'resource $bbcode_container , string $tag_name , array $tag_rules)', 'bool')
call phpapi#function('bbcode_add_smiley(', 'resource $bbcode_container , string $smiley , string $replace_by)', 'bool')
call phpapi#function('bbcode_create(', '[ array $bbcode_initial_tags ])', 'resource')
call phpapi#function('bbcode_destroy(', 'resource $bbcode_container)', 'bool')
call phpapi#function('bbcode_parse(', 'resource $bbcode_container , string $to_parse)', 'string')
call phpapi#function('bbcode_set_arg_parser(', 'resource $bbcode_container , resource $bbcode_arg_parser)', 'bool')
call phpapi#function('bbcode_set_flags(', 'resource $bbcode_container , int $flags [, int $mode = BBCODE_SET_FLAGS_SET ])', 'bool')
call phpapi#function('bcadd(', 'string $left_operand , string $right_operand [, int $scale ])', 'string')
call phpapi#function('bccomp(', 'string $left_operand , string $right_operand [, int $scale ])', 'int')
call phpapi#function('bcdiv(', 'string $left_operand , string $right_operand [, int $scale ])', 'string')
call phpapi#function('bcmod(', 'string $left_operand , string $modulus)', 'string')
call phpapi#function('bcmul(', 'string $left_operand , string $right_operand [, int $scale ])', 'string')
call phpapi#function('bcompiler_load(', 'string $filename)', 'bool')
call phpapi#function('bcompiler_load_exe(', 'string $filename)', 'bool')
call phpapi#function('bcompiler_parse_class(', 'string $class , string $callback)', 'bool')
call phpapi#function('bcompiler_read(', 'resource $filehandle)', 'bool')
call phpapi#function('bcompiler_write_class(', 'resource $filehandle , string $className [, string $extends ])', 'bool')
call phpapi#function('bcompiler_write_constant(', 'resource $filehandle , string $constantName)', 'bool')
call phpapi#function('bcompiler_write_exe_footer(', 'resource $filehandle , int $startpos)', 'bool')
call phpapi#function('bcompiler_write_file(', 'resource $filehandle , string $filename)', 'bool')
call phpapi#function('bcompiler_write_footer(', 'resource $filehandle)', 'bool')
call phpapi#function('bcompiler_write_function(', 'resource $filehandle , string $functionName)', 'bool')
call phpapi#function('bcompiler_write_functions_from_file(', 'resource $filehandle , string $fileName)', 'bool')
call phpapi#function('bcompiler_write_header(', 'resource $filehandle [, string $write_ver ])', 'bool')
call phpapi#function('bcompiler_write_included_filename(', 'resource $filehandle , string $filename)', 'bool')
call phpapi#function('bcpow(', 'string $left_operand , string $right_operand [, int $scale ])', 'string')
call phpapi#function('bcpowmod(', 'string $left_operand , string $right_operand , string $modulus [, int $scale ])', 'string')
call phpapi#function('bcscale(', 'int $scale)', 'bool')
call phpapi#function('bcsqrt(', 'string $operand [, int $scale ])', 'string')
call phpapi#function('bcsub(', 'string $left_operand , string $right_operand [, int $scale ])', 'string')
call phpapi#function('bin2hex(', 'string $str)', 'string')
call phpapi#function('bind_textdomain_codeset(', 'string $domain , string $codeset)', 'string')
call phpapi#function('bindec(', 'string $binary_string)', 'number')
call phpapi#function('bindtextdomain(', 'string $domain , string $directory)', 'string')
call phpapi#function('bson_decode(', 'string $bson)', 'array')
call phpapi#function('bson_encode(', 'mixed $anything)', 'string')
call phpapi#function('bzclose(', 'resource $bz)', 'int')
call phpapi#function('bzcompress(', 'string $source [, int $blocksize = 4 [, int $workfactor = 0 ]])', 'mixed')
call phpapi#function('bzdecompress(', 'string $source [, int $small = 0 ])', 'mixed')
call phpapi#function('bzerrno(', 'resource $bz)', 'int')
call phpapi#function('bzerror(', 'resource $bz)', 'array')
call phpapi#function('bzerrstr(', 'resource $bz)', 'string')
call phpapi#function('bzflush(', 'resource $bz)', 'int')
call phpapi#function('bzopen(', 'string $filename , string $mode)', 'resource')
call phpapi#function('bzread(', 'resource $bz [, int $length = 1024 ])', 'string')
call phpapi#function('bzwrite(', 'resource $bz , string $data [, int $length ])', 'int')
call phpapi#function('cairo_create(', 'CairoSurface $surface)', 'CairoContext')
call phpapi#function('cairo_font_face_get_type(', 'CairoFontFace $fontface)', 'int')
call phpapi#function('cairo_font_options_create(', 'void)', 'CairoFontOptions')
call phpapi#function('cairo_font_options_equal(', 'CairoFontOptions $options , CairoFontOptions $other)', 'bool')
call phpapi#function('cairo_font_options_get_antialias(', 'CairoFontOptions $options)', 'int')
call phpapi#function('cairo_font_options_get_hint_metrics(', 'CairoFontOptions $options)', 'int')
call phpapi#function('cairo_font_options_get_hint_style(', 'CairoFontOptions $options)', 'int')
call phpapi#function('cairo_font_options_get_subpixel_order(', 'CairoFontOptions $options)', 'int')
call phpapi#function('cairo_font_options_hash(', 'CairoFontOptions $options)', 'int')
call phpapi#function('cairo_font_options_merge(', 'CairoFontOptions $options , CairoFontOptions $other)', 'void')
call phpapi#function('cairo_font_options_set_antialias(', 'CairoFontOptions $options , int $antialias)', 'void')
call phpapi#function('cairo_font_options_set_hint_metrics(', 'CairoFontOptions $options , int $hint_metrics)', 'void')
call phpapi#function('cairo_font_options_set_hint_style(', 'CairoFontOptions $options , int $hint_style)', 'void')
call phpapi#function('cairo_font_options_set_subpixel_order(', 'CairoFontOptions $options , int $subpixel_order)', 'void')
call phpapi#function('cairo_font_options_status(', 'CairoFontOptions $options)', 'int')
call phpapi#function('cairo_format_stride_for_width(', 'int $format , int $width)', 'int')
call phpapi#function('cairo_image_surface_create(', 'int $format , int $width , int $height)', 'CairoImageSurface')
call phpapi#function('cairo_image_surface_create_for_data(', 'string $data , int $format , int $width , int $height [, int $stride = -1 ])', 'CairoImageSurface')
call phpapi#function('cairo_image_surface_create_from_png(', 'string $file)', 'CairoImageSurface')
call phpapi#function('cairo_image_surface_get_data(', 'CairoImageSurface $surface)', 'string')
call phpapi#function('cairo_image_surface_get_format(', 'CairoImageSurface $surface)', 'int')
call phpapi#function('cairo_image_surface_get_height(', 'CairoImageSurface $surface)', 'int')
call phpapi#function('cairo_image_surface_get_stride(', 'CairoImageSurface $surface)', 'int')
call phpapi#function('cairo_image_surface_get_width(', 'CairoImageSurface $surface)', 'int')
call phpapi#function('cairo_matrix_invert(', 'CairoMatrix $matrix)', 'void')
call phpapi#function('cairo_matrix_multiply(', 'CairoMatrix $matrix1 , CairoMatrix $matrix2)', 'CairoMatrix')
call phpapi#function('cairo_matrix_rotate(', 'CairoMatrix $matrix , float $radians)', 'void')
call phpapi#function('cairo_matrix_transform_distance(', 'CairoMatrix $matrix , float $dx , float $dy)', 'array')
call phpapi#function('cairo_matrix_transform_point(', 'CairoMatrix $matrix , float $dx , float $dy)', 'array')
call phpapi#function('cairo_matrix_translate(', 'CairoMatrix $matrix , float $tx , float $ty)', 'void')
call phpapi#function('cairo_pattern_add_color_stop_rgb(', 'CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue)', 'void')
call phpapi#function('cairo_pattern_add_color_stop_rgba(', 'CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue , float $alpha)', 'void')
call phpapi#function('cairo_pattern_create_for_surface(', 'CairoSurface $surface)', 'CairoPattern')
call phpapi#function('cairo_pattern_create_linear(', 'float $x0 , float $y0 , float $x1 , float $y1)', 'CairoPattern')
call phpapi#function('cairo_pattern_create_radial(', 'float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1)', 'CairoPattern')
call phpapi#function('cairo_pattern_create_rgb(', 'float $red , float $green , float $blue)', 'CairoPattern')
call phpapi#function('cairo_pattern_create_rgba(', 'float $red , float $green , float $blue , float $alpha)', 'CairoPattern')
call phpapi#function('cairo_pattern_get_color_stop_count(', 'CairoGradientPattern $pattern)', 'int')
call phpapi#function('cairo_pattern_get_color_stop_rgba(', 'CairoGradientPattern $pattern , int $index)', 'array')
call phpapi#function('cairo_pattern_get_extend(', 'string $pattern)', 'int')
call phpapi#function('cairo_pattern_get_filter(', 'CairoSurfacePattern $pattern)', 'int')
call phpapi#function('cairo_pattern_get_linear_points(', 'CairoLinearGradient $pattern)', 'array')
call phpapi#function('cairo_pattern_get_matrix(', 'CairoPattern $pattern)', 'CairoMatrix')
call phpapi#function('cairo_pattern_get_radial_circles(', 'CairoRadialGradient $pattern)', 'array')
call phpapi#function('cairo_pattern_get_rgba(', 'CairoSolidPattern $pattern)', 'array')
call phpapi#function('cairo_pattern_get_surface(', 'CairoSurfacePattern $pattern)', 'CairoSurface')
call phpapi#function('cairo_pattern_get_type(', 'CairoPattern $pattern)', 'int')
call phpapi#function('cairo_pattern_set_extend(', 'string $pattern , string $extend)', 'void')
call phpapi#function('cairo_pattern_set_filter(', 'CairoSurfacePattern $pattern , int $filter)', 'void')
call phpapi#function('cairo_pattern_set_matrix(', 'CairoPattern $pattern , CairoMatrix $matrix)', 'void')
call phpapi#function('cairo_pattern_status(', 'CairoPattern $pattern)', 'int')
call phpapi#function('cairo_pdf_surface_create(', 'string $file , float $width , float $height)', 'CairoPdfSurface')
call phpapi#function('cairo_pdf_surface_set_size(', 'CairoPdfSurface $surface , float $width , float $height)', 'void')
call phpapi#function('cairo_ps_get_levels(', 'void)', 'array')
call phpapi#function('cairo_ps_level_to_string(', 'int $level)', 'string')
call phpapi#function('cairo_ps_surface_create(', 'string $file , float $width , float $height)', 'CairoPsSurface')
call phpapi#function('cairo_ps_surface_dsc_begin_page_setup(', 'CairoPsSurface $surface)', 'void')
call phpapi#function('cairo_ps_surface_dsc_begin_setup(', 'CairoPsSurface $surface)', 'void')
call phpapi#function('cairo_ps_surface_dsc_comment(', 'CairoPsSurface $surface , string $comment)', 'void')
call phpapi#function('cairo_ps_surface_get_eps(', 'CairoPsSurface $surface)', 'bool')
call phpapi#function('cairo_ps_surface_restrict_to_level(', 'CairoPsSurface $surface , int $level)', 'void')
call phpapi#function('cairo_ps_surface_set_eps(', 'CairoPsSurface $surface , bool $level)', 'void')
call phpapi#function('cairo_ps_surface_set_size(', 'CairoPsSurface $surface , float $width , float $height)', 'void')
call phpapi#function('cairo_scaled_font_create(', 'CairoFontFace $fontface , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $fontoptions)', 'CairoScaledFont')
call phpapi#function('cairo_scaled_font_extents(', 'CairoScaledFont $scaledfont)', 'array')
call phpapi#function('cairo_scaled_font_get_ctm(', 'CairoScaledFont $scaledfont)', 'CairoMatrix')
call phpapi#function('cairo_scaled_font_get_font_face(', 'CairoScaledFont $scaledfont)', 'CairoFontFace')
call phpapi#function('cairo_scaled_font_get_font_matrix(', 'CairoScaledFont $scaledfont)', 'CairoFontOptions')
call phpapi#function('cairo_scaled_font_get_font_options(', 'CairoScaledFont $scaledfont)', 'CairoFontOptions')
call phpapi#function('cairo_scaled_font_get_scale_matrix(', 'CairoScaledFont $scaledfont)', 'CairoMatrix')
call phpapi#function('cairo_scaled_font_get_type(', 'CairoScaledFont $scaledfont)', 'int')
call phpapi#function('cairo_scaled_font_glyph_extents(', 'CairoScaledFont $scaledfont , array $glyphs)', 'array')
call phpapi#function('cairo_scaled_font_status(', 'CairoScaledFont $scaledfont)', 'int')
call phpapi#function('cairo_scaled_font_text_extents(', 'CairoScaledFont $scaledfont , string $text)', 'array')
call phpapi#function('cairo_surface_copy_page(', 'CairoSurface $surface)', 'void')
call phpapi#function('cairo_surface_create_similar(', 'CairoSurface $surface , int $content , float $width , float $height)', 'CairoSurface')
call phpapi#function('cairo_surface_finish(', 'CairoSurface $surface)', 'void')
call phpapi#function('cairo_surface_flush(', 'CairoSurface $surface)', 'void')
call phpapi#function('cairo_surface_get_content(', 'CairoSurface $surface)', 'int')
call phpapi#function('cairo_surface_get_device_offset(', 'CairoSurface $surface)', 'array')
call phpapi#function('cairo_surface_get_font_options(', 'CairoSurface $surface)', 'CairoFontOptions')
call phpapi#function('cairo_surface_get_type(', 'CairoSurface $surface)', 'int')
call phpapi#function('cairo_surface_mark_dirty(', 'CairoSurface $surface)', 'void')
call phpapi#function('cairo_surface_mark_dirty_rectangle(', 'CairoSurface $surface , float $x , float $y , float $width , float $height)', 'void')
call phpapi#function('cairo_surface_set_device_offset(', 'CairoSurface $surface , float $x , float $y)', 'void')
call phpapi#function('cairo_surface_set_fallback_resolution(', 'CairoSurface $surface , float $x , float $y)', 'void')
call phpapi#function('cairo_surface_show_page(', 'CairoSurface $surface)', 'void')
call phpapi#function('cairo_surface_status(', 'CairoSurface $surface)', 'int')
call phpapi#function('cairo_surface_write_to_png(', 'CairoSurface $surface , resource $stream)', 'void')
call phpapi#function('cairo_svg_surface_create(', 'string $file , float $width , float $height)', 'CairoSvgSurface')
call phpapi#function('cairo_svg_surface_restrict_to_version(', 'CairoSvgSurface $surface , int $version)', 'void')
call phpapi#function('cairo_svg_version_to_string(', 'int $version)', 'string')
call phpapi#function('cal_days_in_month(', 'int $calendar , int $month , int $year)', 'int')
call phpapi#function('cal_from_jd(', 'int $jd , int $calendar)', 'array')
call phpapi#function('cal_info(', '[ int $calendar = -1 ])', 'array')
call phpapi#function('cal_to_jd(', 'int $calendar , int $month , int $day , int $year)', 'int')
call phpapi#function('calcul_hmac(', 'string $clent , string $siretcode , string $price , string $reference , string $validity , string $taxation , string $devise , string $language)', 'string')
call phpapi#function('calculhmac(', 'string $clent , string $data)', 'string')
call phpapi#function('call_user_func(', 'callback $function [, mixed $parameter [, mixed $... ]])', 'mixed')
call phpapi#function('call_user_func_array(', 'callback $function , array $param_arr)', 'mixed')
call phpapi#function('call_user_method(', 'string $method_name , object &$obj [, mixed $parameter [, mixed $... ]])', 'mixed')
call phpapi#function('call_user_method_array(', 'string $method_name , object &$obj , array $params)', 'mixed')
call phpapi#function('ceil(', 'float $value)', 'float')
call phpapi#function('chdb_create(', 'string $pathname , array $data)', 'bool')
call phpapi#function('chdir(', 'string $directory)', 'bool')
call phpapi#function('checkdate(', 'int $month , int $day , int $year)', 'bool')
call phpapi#function('checkdnsrr(', 'string $host [, string $type = "MX" ])', 'bool')
call phpapi#function('chgrp(', 'string $filename , mixed $group)', 'bool')
call phpapi#function('child_nodes(', 'void)', 'array')
call phpapi#function('chmod(', 'string $filename , int $mode)', 'bool')
call phpapi#function('chown(', 'string $filename , mixed $user)', 'bool')
call phpapi#function('chr(', 'int $ascii)', 'string')
call phpapi#function('chroot(', 'string $directory)', 'bool')
call phpapi#function('chunk_split(', 'string $body [, int $chunklen = 76 [, string $end = "\r\n" ]])', 'string')
call phpapi#function('class_alias(', '[ string $original [, string $alias ]])', 'bool')
call phpapi#function('class_exists(', 'string $class_name [, bool $autoload = true ])', 'bool')
call phpapi#function('class_implements(', 'mixed $class [, bool $autoload = true ])', 'array')
call phpapi#function('class_parents(', 'mixed $class [, bool $autoload = true ])', 'array')
call phpapi#function('classkit_import(', 'string $filename)', 'array')
call phpapi#function('classkit_method_add(', 'string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ])', 'bool')
call phpapi#function('classkit_method_copy(', 'string $dClass , string $dMethod , string $sClass [, string $sMethod ])', 'bool')
call phpapi#function('classkit_method_redefine(', 'string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ])', 'bool')
call phpapi#function('classkit_method_remove(', 'string $classname , string $methodname)', 'bool')
call phpapi#function('classkit_method_rename(', 'string $classname , string $methodname , string $newname)', 'bool')
call phpapi#function('clearstatcache(', '[ bool $clear_realpath_cache = false [, string $filename ]])', 'void')
call phpapi#function('clone_node(', 'void)', 'domelement')
call phpapi#function('closedir(', '[ resource $dir_handle ])', 'void')
call phpapi#function('closelog(', 'void)', 'bool')
call phpapi#function('com_addref(', 'void)', 'void')
call phpapi#function('com_create_guid(', 'void)', 'string')
call phpapi#function('com_event_sink(', 'variant $comobject , object $sinkobject [, mixed $sinkinterface ])', 'bool')
call phpapi#function('com_get_active_object(', 'string $progid [, int $code_page ])', 'variant')
call phpapi#function('com_invoke(', 'resource $com_object , string $function_name [, mixed $function_parameters ])', 'mixed')
call phpapi#function('com_isenum(', 'variant $com_module)', 'bool')
call phpapi#function('com_load_typelib(', 'string $typelib_name [, bool $case_insensitive = true ])', 'bool')
call phpapi#function('com_message_pump(', '[ int $timeoutms = 0 ])', 'bool')
call phpapi#function('com_print_typeinfo(', 'object $comobject [, string $dispinterface [, bool $wantsink = false ]])', 'bool')
call phpapi#function('com_release(', 'void)', 'void')
call phpapi#function('compact(', 'mixed $varname [, mixed $... ])', 'array')
call phpapi#function('connection_aborted(', 'void)', 'int')
call phpapi#function('connection_status(', 'void)', 'int')
call phpapi#function('connection_timeout(', 'void)', 'int')
call phpapi#function('constant(', 'string $name)', 'mixed')
call phpapi#function('convert_cyr_string(', 'string $str , string $from , string $to)', 'string')
call phpapi#function('convert_uudecode(', 'string $data)', 'string')
call phpapi#function('convert_uuencode(', 'string $data)', 'string')
call phpapi#function('copy(', 'string $source , string $dest [, resource $context ])', 'bool')
call phpapi#function('cos(', 'float $arg)', 'float')
call phpapi#function('cosh(', 'float $arg)', 'float')
call phpapi#function('count(', 'mixed $var [, int $mode = COUNT_NORMAL ])', 'int')
call phpapi#function('count_chars(', 'string $string [, int $mode = 0 ])', 'mixed')
call phpapi#function('crack_getlastmessage(', 'void)', 'string')
call phpapi#function('crack_opendict(', 'string $dictionary)', 'resource')
call phpapi#function('crc32(', 'string $str)', 'int')
call phpapi#function('create_attribute(', 'string $name , string $value)', 'domattribute')
call phpapi#function('create_cdata_section(', 'string $content)', 'domcdata')
call phpapi#function('create_comment(', 'string $content)', 'domcomment')
call phpapi#function('create_element(', 'string $name)', 'domelement')
call phpapi#function('create_element_ns(', 'string $uri , string $name [, string $prefix ])', 'domelement')
call phpapi#function('create_entity_reference(', 'string $content)', 'domentityreference')
call phpapi#function('create_function(', 'string $args , string $code)', 'string')
call phpapi#function('create_processing_instruction(', 'string $content)', 'domprocessinginstruction')
call phpapi#function('create_text_node(', 'string $content)', 'domtext')
call phpapi#function('crypt(', 'string $str [, string $salt ])', 'string')
call phpapi#function('ctype_alnum(', 'string $text)', 'bool')
call phpapi#function('ctype_alpha(', 'string $text)', 'bool')
call phpapi#function('ctype_cntrl(', 'string $text)', 'bool')
call phpapi#function('ctype_digit(', 'string $text)', 'bool')
call phpapi#function('ctype_graph(', 'string $text)', 'bool')
call phpapi#function('ctype_lower(', 'string $text)', 'bool')
call phpapi#function('ctype_print(', 'string $text)', 'bool')
call phpapi#function('ctype_punct(', 'string $text)', 'bool')
call phpapi#function('ctype_space(', 'string $text)', 'bool')
call phpapi#function('ctype_upper(', 'string $text)', 'bool')
call phpapi#function('ctype_xdigit(', 'string $text)', 'bool')
call phpapi#function('cubrid_affected_rows(', '[ resource $result ])', 'int')
call phpapi#function('cubrid_bind(', 'resource $req_identifier , mixed $bind_param , mixed $bind_value [, string $bind_value_type ])', 'bool')
call phpapi#function('cubrid_client_encoding(', '[ resource $conn_identifier ])', 'string')
call phpapi#function('cubrid_close(', '[ resource $conn_identifier ])', 'bool')
call phpapi#function('cubrid_close_prepare(', 'resource $req_identifier)', 'int')
call phpapi#function('cubrid_close_request(', 'resource $req_identifier)', 'bool')
call phpapi#function('cubrid_col_get(', 'resource $conn_identifier , string $oid , string $attr_name)', 'array')
call phpapi#function('cubrid_col_size(', 'resource $conn_identifier , string $oid , string $attr_name)', 'int')
call phpapi#function('cubrid_column_names(', 'resource $req_identifier)', 'array')
call phpapi#function('cubrid_column_types(', 'resource $req_identifier)', 'array')
call phpapi#function('cubrid_commit(', 'resource $conn_identifier)', 'bool')
call phpapi#function('cubrid_connect(', 'string $host , int $port , string $dbname [, string $userid [, string $passwd ]])', 'resource')
call phpapi#function('cubrid_connect_with_url(', 'string $conn_url [, string $userid [, string $passwd ]])', 'resource')
call phpapi#function('cubrid_current_oid(', 'resource $req_identifier)', 'string')
call phpapi#function('cubrid_data_seek(', 'resource $result , int $row_number)', 'int')
call phpapi#function('cubrid_db_name(', 'array $result , int $index)', 'string')
call phpapi#function('cubrid_disconnect(', 'resource $conn_identifier)', 'bool')
call phpapi#function('cubrid_drop(', 'resource $conn_identifier , string $oid)', 'bool')
call phpapi#function('cubrid_errno(', '[ resource $conn_identifier ])', 'int')
call phpapi#function('cubrid_error(', '[ resource $connection ])', 'string')
call phpapi#function('cubrid_error_code(', 'void)', 'int')
call phpapi#function('cubrid_error_code_facility(', 'void)', 'int')
call phpapi#function('cubrid_error_msg(', 'void)', 'string')
call phpapi#function('cubrid_execute(', 'resource $conn_identifier , string $sql [, int $option ])', 'resource')
call phpapi#function('cubrid_fetch(', 'resource $result [, int $type = CUBRID_BOTH ])', 'mixed')
call phpapi#function('cubrid_fetch_array(', 'resource $result [, int $type = CUBRID_BOTH ])', 'array')
call phpapi#function('cubrid_fetch_assoc(', 'resource $result)', 'array')
call phpapi#function('cubrid_fetch_field(', 'resource $result [, int $field_offset = 0 ])', 'object')
call phpapi#function('cubrid_fetch_lengths(', 'resource $result)', 'array')
call phpapi#function('cubrid_fetch_object(', 'resource $result [, string $class_name [, array $params ]])', 'object')
call phpapi#function('cubrid_fetch_row(', 'resource $result)', 'array')
call phpapi#function('cubrid_field_flags(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('cubrid_field_len(', 'resource $result , int $field_offset)', 'int')
call phpapi#function('cubrid_field_name(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('cubrid_field_seek(', 'resource $result [, int $field_offset = 0 ])', 'bool')
call phpapi#function('cubrid_field_table(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('cubrid_field_type(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('cubrid_free_result(', 'resource $req_identifier)', 'bool')
call phpapi#function('cubrid_get(', 'resource $conn_identifier , string $oid [, mixed $attr ])', 'mixed')
call phpapi#function('cubrid_get_autocommit(', 'resource $conn_identifier)', 'bool')
call phpapi#function('cubrid_get_charset(', 'resource $conn_identifier)', 'string')
call phpapi#function('cubrid_get_class_name(', 'resource $conn_identifier , string $oid)', 'string')
call phpapi#function('cubrid_get_client_info(', 'void)', 'string')
call phpapi#function('cubrid_get_db_parameter(', 'resource $conn_identifier)', 'array')
call phpapi#function('cubrid_get_server_info(', 'resource $conn_identifier)', 'string')
call phpapi#function('cubrid_insert_id(', '[ resource $conn_identifier ])', 'string')
call phpapi#function('cubrid_is_instance(', 'resource $conn_identifier , string $oid)', 'int')
call phpapi#function('cubrid_list_dbs(', 'resource $conn_identifier)', 'array')
call phpapi#function('cubrid_load_from_glo(', 'resource $conn_identifier , string $oid , string $file_name)', 'int')
call phpapi#function('cubrid_lob_close(', 'array $lob_identifier_array)', 'bool')
call phpapi#function('cubrid_lob_export(', 'resource $conn_identifier , resource $lob_identifier , string $path_name)', 'bool')
call phpapi#function('cubrid_lob_get(', 'resource $conn_identifier , string $sql)', 'array')
call phpapi#function('cubrid_lob_send(', 'resource $conn_identifier , resource $lob_identifier)', 'bool')
call phpapi#function('cubrid_lob_size(', 'resource $lob_identifier)', 'string')
call phpapi#function('cubrid_lock_read(', 'resource $conn_identifier , string $oid)', 'bool')
call phpapi#function('cubrid_lock_write(', 'resource $conn_identifier , string $oid)', 'bool')
call phpapi#function('cubrid_move_cursor(', 'resource $req_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ])', 'int')
call phpapi#function('cubrid_new_glo(', 'resource $conn_identifier , string $class_name , string $file_name)', 'string')
call phpapi#function('cubrid_next_result(', 'resource $result)', 'bool')
call phpapi#function('cubrid_num_cols(', 'resource $result)', 'int')
call phpapi#function('cubrid_num_fields(', 'resource $result)', 'int')
call phpapi#function('cubrid_num_rows(', 'resource $result)', 'int')
call phpapi#function('cubrid_ping(', '[ resource $conn_identifier ])', 'bool')
call phpapi#function('cubrid_prepare(', 'resource $conn_identifier , string $prepare_stmt [, int $option = 0 ])', 'resource')
call phpapi#function('cubrid_put(', 'resource $conn_identifier , string $oid [, string $attr ], mixed $value)', 'int')
call phpapi#function('cubrid_query(', 'string $query [, resource $conn_identifier ])', 'resource')
call phpapi#function('cubrid_real_escape_string(', 'string $unescaped_string [, resource $conn_identifier ])', 'string')
call phpapi#function('cubrid_result(', 'resource $result , int $row [, mixed $field = 0 ])', 'string')
call phpapi#function('cubrid_rollback(', 'resource $conn_identifier)', 'bool')
call phpapi#function('cubrid_save_to_glo(', 'resource $conn_identifier , string $oid , string $file_name)', 'int')
call phpapi#function('cubrid_schema(', 'resource $conn_identifier , int $schema_type [, string $class_name [, string $attr_name ]])', 'array')
call phpapi#function('cubrid_send_glo(', 'resource $conn_identifier , string $oid)', 'int')
call phpapi#function('cubrid_seq_drop(', 'resource $conn_identifier , string $oid , string $attr_name , int $index)', 'bool')
call phpapi#function('cubrid_seq_insert(', 'resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element)', 'bool')
call phpapi#function('cubrid_seq_put(', 'resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element)', 'bool')
call phpapi#function('cubrid_set_add(', 'resource $conn_identifier , string $oid , string $attr_name , string $set_element)', 'bool')
call phpapi#function('cubrid_set_autocommit(', 'resource $conn_identifier , bool $mode)', 'bool')
call phpapi#function('cubrid_set_db_parameter(', 'resource $conn_identifier , int $param_type , int $param_value)', 'bool')
call phpapi#function('cubrid_set_drop(', 'resource $conn_identifier , string $oid , string $attr_name , string $set_element)', 'bool')
call phpapi#function('cubrid_unbuffered_query(', 'string $query [, resource $conn_identifier ])', 'resource')
call phpapi#function('cubrid_version(', 'void)', 'string')
call phpapi#function('curl_close(', 'resource $ch)', 'void')
call phpapi#function('curl_copy_handle(', 'resource $ch)', 'resource')
call phpapi#function('curl_errno(', 'resource $ch)', 'int')
call phpapi#function('curl_error(', 'resource $ch)', 'string')
call phpapi#function('curl_exec(', 'resource $ch)', 'mixed')
call phpapi#function('curl_getinfo(', 'resource $ch [, int $opt = 0 ])', 'mixed')
call phpapi#function('curl_init(', '[ string $url = NULL ])', 'resource')
call phpapi#function('curl_multi_add_handle(', 'resource $mh , resource $ch)', 'int')
call phpapi#function('curl_multi_close(', 'resource $mh)', 'void')
call phpapi#function('curl_multi_exec(', 'resource $mh , int &$still_running)', 'int')
call phpapi#function('curl_multi_getcontent(', 'resource $ch)', 'string')
call phpapi#function('curl_multi_info_read(', 'resource $mh [, int &$msgs_in_queue = NULL ])', 'array')
call phpapi#function('curl_multi_init(', 'void)', 'resource')
call phpapi#function('curl_multi_remove_handle(', 'resource $mh , resource $ch)', 'int')
call phpapi#function('curl_multi_select(', 'resource $mh [, float $timeout = 1.0 ])', 'int')
call phpapi#function('curl_setopt(', 'resource $ch , int $option , mixed $value)', 'bool')
call phpapi#function('curl_setopt_array(', 'resource $ch , array $options)', 'bool')
call phpapi#function('curl_version(', '[ int $age = CURLVERSION_NOW ])', 'array')
call phpapi#function('current(', 'array &$array)', 'mixed')
call phpapi#function('cyrus_authenticate(', 'resource $connection [, string $mechlist [, string $service [, string $user [, int $minssf [, int $maxssf [, string $authname [, string $password ]]]]]]])', 'void')
call phpapi#function('cyrus_bind(', 'resource $connection , array $callbacks)', 'bool')
call phpapi#function('cyrus_close(', 'resource $connection)', 'bool')
call phpapi#function('cyrus_connect(', '[ string $host [, string $port [, int $flags ]]])', 'resource')
call phpapi#function('cyrus_query(', 'resource $connection , string $query)', 'array')
call phpapi#function('cyrus_unbind(', 'resource $connection , string $trigger_name)', 'bool')
call phpapi#function('date(', 'string $format [, int $timestamp = time() ])', 'string')
call phpapi#function('date_default_timezone_get(', 'void)', 'string')
call phpapi#function('date_default_timezone_set(', 'string $timezone_identifier)', 'bool')
call phpapi#function('date_parse(', 'string $date)', 'array')
call phpapi#function('date_parse_from_format(', 'string $format , string $date)', 'array')
call phpapi#function('date_sun_info(', 'int $time , float $latitude , float $longitude)', 'array')
call phpapi#function('date_sunrise(', 'int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get ("date.sunrise_zenith") [, float $gmt_offset = 0 ]]]]])', 'mixed')
call phpapi#function('date_sunset(', 'int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get ("date.sunset_zenith") [, float $gmt_offset = 0 ]]]]])', 'mixed')
call phpapi#function('db2_autocommit(', 'resource $connection [, bool $value ])', 'mixed')
call phpapi#function('db2_bind_param(', 'resource $stmt , int $parameter-number , string $variable-name [, int $parameter-type [, int $data-type = 0 [, int $precision = -1 [, int $scale = 0 ]]]])', 'bool')
call phpapi#function('db2_client_info(', 'resource $connection)', 'object')
call phpapi#function('db2_close(', 'resource $connection)', 'bool')
call phpapi#function('db2_column_privileges(', 'resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]])', 'resource')
call phpapi#function('db2_columns(', 'resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]])', 'resource')
call phpapi#function('db2_commit(', 'resource $connection)', 'bool')
call phpapi#function('db2_conn_error(', '[ resource $connection ])', 'string')
call phpapi#function('db2_conn_errormsg(', '[ resource $connection ])', 'string')
call phpapi#function('db2_connect(', 'string $database , string $username , string $password [, array $options ])', 'resource')
call phpapi#function('db2_cursor_type(', 'resource $stmt)', 'int')
call phpapi#function('db2_escape_string(', 'string $string_literal)', 'string')
call phpapi#function('db2_exec(', 'resource $connection , string $statement [, array $options ])', 'resource')
call phpapi#function('db2_execute(', 'resource $stmt [, array $parameters ])', 'bool')
call phpapi#function('db2_fetch_array(', 'resource $stmt [, int $row_number = -1 ])', 'array')
call phpapi#function('db2_fetch_assoc(', 'resource $stmt [, int $row_number = -1 ])', 'array')
call phpapi#function('db2_fetch_both(', 'resource $stmt [, int $row_number = -1 ])', 'array')
call phpapi#function('db2_fetch_object(', 'resource $stmt [, int $row_number = -1 ])', 'object')
call phpapi#function('db2_fetch_row(', 'resource $stmt [, int $row_number ])', 'bool')
call phpapi#function('db2_field_display_size(', 'resource $stmt , mixed $column)', 'int')
call phpapi#function('db2_field_name(', 'resource $stmt , mixed $column)', 'string')
call phpapi#function('db2_field_num(', 'resource $stmt , mixed $column)', 'int')
call phpapi#function('db2_field_precision(', 'resource $stmt , mixed $column)', 'int')
call phpapi#function('db2_field_scale(', 'resource $stmt , mixed $column)', 'int')
call phpapi#function('db2_field_type(', 'resource $stmt , mixed $column)', 'string')
call phpapi#function('db2_field_width(', 'resource $stmt , mixed $column)', 'int')
call phpapi#function('db2_foreign_keys(', 'resource $connection , string $qualifier , string $schema , string $table-name)', 'resource')
call phpapi#function('db2_free_result(', 'resource $stmt)', 'bool')
call phpapi#function('db2_free_stmt(', 'resource $stmt)', 'bool')
call phpapi#function('db2_get_option(', 'resource $resource , string $option)', 'string')
call phpapi#function('db2_last_insert_id(', 'resource $resource)', 'string')
call phpapi#function('db2_lob_read(', 'resource $stmt , int $colnum , int $length)', 'string')
call phpapi#function('db2_next_result(', 'resource $stmt)', 'resource')
call phpapi#function('db2_num_fields(', 'resource $stmt)', 'int')
call phpapi#function('db2_num_rows(', 'resource $stmt)', 'int')
call phpapi#function('db2_pclose(', 'resource $resource)', 'bool')
call phpapi#function('db2_pconnect(', 'string $database , string $username , string $password [, array $options ])', 'resource')
call phpapi#function('db2_prepare(', 'resource $connection , string $statement [, array $options ])', 'resource')
call phpapi#function('db2_primary_keys(', 'resource $connection , string $qualifier , string $schema , string $table-name)', 'resource')
call phpapi#function('db2_procedure_columns(', 'resource $connection , string $qualifier , string $schema , string $procedure , string $parameter)', 'resource')
call phpapi#function('db2_procedures(', 'resource $connection , string $qualifier , string $schema , string $procedure)', 'resource')
call phpapi#function('db2_result(', 'resource $stmt , mixed $column)', 'mixed')
call phpapi#function('db2_rollback(', 'resource $connection)', 'bool')
call phpapi#function('db2_server_info(', 'resource $connection)', 'object')
call phpapi#function('db2_set_option(', 'resource $resource , array $options , int $type)', 'bool')
call phpapi#function('db2_special_columns(', 'resource $connection , string $qualifier , string $schema , string $table_name , int $scope)', 'resource')
call phpapi#function('db2_statistics(', 'resource $connection , string $qualifier , string $schema , string $table-name , bool $unique)', 'resource')
call phpapi#function('db2_stmt_error(', '[ resource $stmt ])', 'string')
call phpapi#function('db2_stmt_errormsg(', '[ resource $stmt ])', 'string')
call phpapi#function('db2_table_privileges(', 'resource $connection [, string $qualifier [, string $schema [, string $table_name ]]])', 'resource')
call phpapi#function('db2_tables(', 'resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $table-type ]]]])', 'resource')
call phpapi#function('dba_close(', 'resource $handle)', 'void')
call phpapi#function('dba_delete(', 'string $key , resource $handle)', 'bool')
call phpapi#function('dba_exists(', 'string $key , resource $handle)', 'bool')
call phpapi#function('dba_fetch(', 'string $key , resource $handle)', 'string')
call phpapi#function('dba_firstkey(', 'resource $handle)', 'string')
call phpapi#function('dba_handlers(', '[ bool $full_info = false ])', 'array')
call phpapi#function('dba_insert(', 'string $key , string $value , resource $handle)', 'bool')
call phpapi#function('dba_key_split(', 'mixed $key)', 'mixed')
call phpapi#function('dba_list(', 'void)', 'array')
call phpapi#function('dba_nextkey(', 'resource $handle)', 'string')
call phpapi#function('dba_open(', 'string $path , string $mode [, string $handler [, mixed $... ]])', 'resource')
call phpapi#function('dba_optimize(', 'resource $handle)', 'bool')
call phpapi#function('dba_popen(', 'string $path , string $mode [, string $handler [, mixed $... ]])', 'resource')
call phpapi#function('dba_replace(', 'string $key , string $value , resource $handle)', 'bool')
call phpapi#function('dba_sync(', 'resource $handle)', 'bool')
call phpapi#function('dbase_add_record(', 'int $dbase_identifier , array $record)', 'bool')
call phpapi#function('dbase_close(', 'int $dbase_identifier)', 'bool')
call phpapi#function('dbase_create(', 'string $filename , array $fields)', 'int')
call phpapi#function('dbase_delete_record(', 'int $dbase_identifier , int $record_number)', 'bool')
call phpapi#function('dbase_get_header_info(', 'int $dbase_identifier)', 'array')
call phpapi#function('dbase_get_record(', 'int $dbase_identifier , int $record_number)', 'array')
call phpapi#function('dbase_get_record_with_names(', 'int $dbase_identifier , int $record_number)', 'array')
call phpapi#function('dbase_numfields(', 'int $dbase_identifier)', 'int')
call phpapi#function('dbase_numrecords(', 'int $dbase_identifier)', 'int')
call phpapi#function('dbase_open(', 'string $filename , int $mode)', 'int')
call phpapi#function('dbase_pack(', 'int $dbase_identifier)', 'bool')
call phpapi#function('dbase_replace_record(', 'int $dbase_identifier , array $record , int $record_number)', 'bool')
call phpapi#function('dbplus_add(', 'resource $relation , array $tuple)', 'int')
call phpapi#function('dbplus_aql(', 'string $query [, string $server [, string $dbpath ]])', 'resource')
call phpapi#function('dbplus_chdir(', '[ string $newdir ])', 'string')
call phpapi#function('dbplus_close(', 'resource $relation)', 'mixed')
call phpapi#function('dbplus_curr(', 'resource $relation , array &$tuple)', 'int')
call phpapi#function('dbplus_errcode(', '[ int $errno ])', 'string')
call phpapi#function('dbplus_errno(', 'void)', 'int')
call phpapi#function('dbplus_find(', 'resource $relation , array $constraints , mixed $tuple)', 'int')
call phpapi#function('dbplus_first(', 'resource $relation , array &$tuple)', 'int')
call phpapi#function('dbplus_flush(', 'resource $relation)', 'int')
call phpapi#function('dbplus_freealllocks(', 'void)', 'int')
call phpapi#function('dbplus_freelock(', 'resource $relation , string $tuple)', 'int')
call phpapi#function('dbplus_freerlocks(', 'resource $relation)', 'int')
call phpapi#function('dbplus_getlock(', 'resource $relation , string $tuple)', 'int')
call phpapi#function('dbplus_getunique(', 'resource $relation , int $uniqueid)', 'int')
call phpapi#function('dbplus_info(', 'resource $relation , string $key , array &$result)', 'int')
call phpapi#function('dbplus_last(', 'resource $relation , array &$tuple)', 'int')
call phpapi#function('dbplus_lockrel(', 'resource $relation)', 'int')
call phpapi#function('dbplus_next(', 'resource $relation , array &$tuple)', 'int')
call phpapi#function('dbplus_open(', 'string $name)', 'resource')
call phpapi#function('dbplus_prev(', 'resource $relation , array &$tuple)', 'int')
call phpapi#function('dbplus_rchperm(', 'resource $relation , int $mask , string $user , string $group)', 'int')
call phpapi#function('dbplus_rcreate(', 'string $name , mixed $domlist [, bool $overwrite ])', 'resource')
call phpapi#function('dbplus_rcrtexact(', 'string $name , resource $relation [, bool $overwrite ])', 'mixed')
call phpapi#function('dbplus_rcrtlike(', 'string $name , resource $relation [, int $overwrite ])', 'mixed')
call phpapi#function('dbplus_resolve(', 'string $relation_name)', 'array')
call phpapi#function('dbplus_restorepos(', 'resource $relation , array $tuple)', 'int')
call phpapi#function('dbplus_rkeys(', 'resource $relation , mixed $domlist)', 'mixed')
call phpapi#function('dbplus_ropen(', 'string $name)', 'resource')
call phpapi#function('dbplus_rquery(', 'string $query [, string $dbpath ])', 'resource')
call phpapi#function('dbplus_rrename(', 'resource $relation , string $name)', 'int')
call phpapi#function('dbplus_rsecindex(', 'resource $relation , mixed $domlist , int $type)', 'mixed')
call phpapi#function('dbplus_runlink(', 'resource $relation)', 'int')
call phpapi#function('dbplus_rzap(', 'resource $relation)', 'int')
call phpapi#function('dbplus_savepos(', 'resource $relation)', 'int')
call phpapi#function('dbplus_setindex(', 'resource $relation , string $idx_name)', 'int')
call phpapi#function('dbplus_setindexbynumber(', 'resource $relation , int $idx_number)', 'int')
call phpapi#function('dbplus_sql(', 'string $query [, string $server [, string $dbpath ]])', 'resource')
call phpapi#function('dbplus_tcl(', 'int $sid , string $script)', 'string')
call phpapi#function('dbplus_tremove(', 'resource $relation , array $tuple [, array &$current ])', 'int')
call phpapi#function('dbplus_undo(', 'resource $relation)', 'int')
call phpapi#function('dbplus_undoprepare(', 'resource $relation)', 'int')
call phpapi#function('dbplus_unlockrel(', 'resource $relation)', 'int')
call phpapi#function('dbplus_unselect(', 'resource $relation)', 'int')
call phpapi#function('dbplus_update(', 'resource $relation , array $old , array $new)', 'int')
call phpapi#function('dbplus_xlockrel(', 'resource $relation)', 'int')
call phpapi#function('dbplus_xunlockrel(', 'resource $relation)', 'int')
call phpapi#function('dbx_close(', 'object $link_identifier)', 'int')
call phpapi#function('dbx_compare(', 'array $row_a , array $row_b , string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE ])', 'int')
call phpapi#function('dbx_connect(', 'mixed $module , string $host , string $database , string $username , string $password [, int $persistent ])', 'object')
call phpapi#function('dbx_error(', 'object $link_identifier)', 'string')
call phpapi#function('dbx_escape_string(', 'object $link_identifier , string $text)', 'string')
call phpapi#function('dbx_fetch_row(', 'object $result_identifier)', 'mixed')
call phpapi#function('dbx_query(', 'object $link_identifier , string $sql_statement [, int $flags ])', 'mixed')
call phpapi#function('dbx_sort(', 'object $result , string $user_compare_function)', 'bool')
call phpapi#function('dcgettext(', 'string $domain , string $message , int $category)', 'string')
call phpapi#function('dcngettext(', 'string $domain , string $msgid1 , string $msgid2 , int $n , int $category)', 'string')
call phpapi#function('deaggregate(', 'object $object [, string $class_name ])', 'void')
call phpapi#function('debug_backtrace(', '[ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = 0 ]])', 'array')
call phpapi#function('debug_print_backtrace(', '[ int $options = 0 [, int $limit = 0 ]])', 'void')
call phpapi#function('debug_zval_dump(', 'mixed $variable)', 'void')
call phpapi#function('decbin(', 'int $number)', 'string')
call phpapi#function('dechex(', 'int $number)', 'string')
call phpapi#function('decoct(', 'int $number)', 'string')
call phpapi#function('define(', 'string $name , mixed $value [, bool $case_insensitive = false ])', 'bool')
call phpapi#function('define_syslog_variables(', 'void)', 'void')
call phpapi#function('defined(', 'string $name)', 'bool')
call phpapi#function('deg2rad(', 'float $number)', 'float')
call phpapi#function('delete(', 'void)', 'void')
call phpapi#function('dgettext(', 'string $domain , string $message)', 'string')
call phpapi#function('dio_close(', 'resource $fd)', 'void')
call phpapi#function('dio_fcntl(', 'resource $fd , int $cmd [, mixed $args ])', 'mixed')
call phpapi#function('dio_open(', 'string $filename , int $flags [, int $mode = 0 ])', 'resource')
call phpapi#function('dio_read(', 'resource $fd [, int $len = 1024 ])', 'string')
call phpapi#function('dio_seek(', 'resource $fd , int $pos [, int $whence = SEEK_SET ])', 'int')
call phpapi#function('dio_stat(', 'resource $fd)', 'array')
call phpapi#function('dio_tcsetattr(', 'resource $fd , array $options)', 'bool')
call phpapi#function('dio_truncate(', 'resource $fd , int $offset)', 'bool')
call phpapi#function('dio_write(', 'resource $fd , string $data [, int $len = 0 ])', 'int')
call phpapi#function('dirname(', 'string $path)', 'string')
call phpapi#function('disk_free_space(', 'string $directory)', 'float')
call phpapi#function('disk_total_space(', 'string $directory)', 'float')
call phpapi#function('dl(', 'string $library)', 'bool')
call phpapi#function('dngettext(', 'string $domain , string $msgid1 , string $msgid2 , int $n)', 'string')
call phpapi#function('dns_get_record(', 'string $hostname [, int $type = DNS_ANY [, array & $authns [, array &$addtl ]]])', 'array')
call phpapi#function('doctype(', 'void)', 'domdocumenttype')
call phpapi#function('document_element(', 'void)', 'domelement')
call phpapi#function('dom_import_simplexml(', 'SimpleXMLElement $node)', 'DOMElement')
call phpapi#function('domxml_new_doc(', 'string $version)', 'DomDocument')
call phpapi#function('domxml_open_file(', 'string $filename [, int $mode = DOMXML_LOAD_PARSING [, array &$error ]])', 'DomDocument')
call phpapi#function('domxml_open_mem(', 'string $str [, int $mode [, array &$error ]])', 'DomDocument')
call phpapi#function('domxml_version(', 'void)', 'string')
call phpapi#function('domxml_xmltree(', 'string $str)', 'DomDocument')
call phpapi#function('domxml_xslt_stylesheet(', 'string $xsl_buf)', 'DomXsltStylesheet')
call phpapi#function('domxml_xslt_stylesheet_doc(', 'DomDocument $xsl_doc)', 'DomXsltStylesheet')
call phpapi#function('domxml_xslt_stylesheet_file(', 'string $xsl_file)', 'DomXsltStylesheet')
call phpapi#function('domxml_xslt_version(', 'void)', 'int')
call phpapi#function('dotnet_load(', 'string $assembly_name [, string $datatype_name [, int $codepage ]])', 'int')
call phpapi#function('dump_file(', 'string $filename [, bool $compressionmode [, bool $format ]])', 'string')
call phpapi#function('dump_mem(', '[ bool $format [, string $encoding ]])', 'string')
call phpapi#function('dump_node(', 'void)', 'string')
call phpapi#function('each(', 'array &$array)', 'array')
call phpapi#function('easter_date(', '[ int $year ])', 'int')
call phpapi#function('easter_days(', '[ int $year [, int $method = CAL_EASTER_DEFAULT ]])', 'int')
call phpapi#function('echo(', 'string $arg1 [, string $... ])', 'void')
call phpapi#function('empty(', 'mixed $var)', 'bool')
call phpapi#function('enchant_broker_describe(', 'resource $broker)', 'array')
call phpapi#function('enchant_broker_dict_exists(', 'resource $broker , string $tag)', 'bool')
call phpapi#function('enchant_broker_free(', 'resource $broker)', 'bool')
call phpapi#function('enchant_broker_free_dict(', 'resource $dict)', 'bool')
call phpapi#function('enchant_broker_get_error(', 'resource $broker)', 'string')
call phpapi#function('enchant_broker_init(', 'void)', 'resource')
call phpapi#function('enchant_broker_list_dicts(', 'resource $broker)', 'mixed')
call phpapi#function('enchant_broker_request_dict(', 'resource $broker , string $tag)', 'resource')
call phpapi#function('enchant_broker_request_pwl_dict(', 'resource $broker , string $filename)', 'resource')
call phpapi#function('enchant_broker_set_ordering(', 'resource $broker , string $tag , string $ordering)', 'bool')
call phpapi#function('enchant_dict_add_to_personal(', 'resource $dict , string $word)', 'void')
call phpapi#function('enchant_dict_add_to_session(', 'resource $dict , string $word)', 'void')
call phpapi#function('enchant_dict_check(', 'resource $dict , string $word)', 'bool')
call phpapi#function('enchant_dict_describe(', 'resource $dict)', 'mixed')
call phpapi#function('enchant_dict_get_error(', 'resource $dict)', 'string')
call phpapi#function('enchant_dict_is_in_session(', 'resource $dict , string $word)', 'bool')
call phpapi#function('enchant_dict_quick_check(', 'resource $dict , string $word [, array & $suggestions ])', 'bool')
call phpapi#function('enchant_dict_store_replacement(', 'resource $dict , string $mis , string $cor)', 'void')
call phpapi#function('enchant_dict_suggest(', 'resource $dict , string $word)', 'array')
call phpapi#function('end(', 'array &$array)', 'mixed')
call phpapi#function('ereg(', 'string $pattern , string $string [, array &$regs ])', 'int')
call phpapi#function('ereg_replace(', 'string $pattern , string $replacement , string $string)', 'string')
call phpapi#function('eregi(', 'string $pattern , string $string [, array &$regs ])', 'int')
call phpapi#function('eregi_replace(', 'string $pattern , string $replacement , string $string)', 'string')
call phpapi#function('error_get_last(', 'void)', 'array')
call phpapi#function('error_log(', 'string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]])', 'bool')
call phpapi#function('error_reporting(', '[ int $level ])', 'int')
call phpapi#function('escapeshellarg(', 'string $arg)', 'string')
call phpapi#function('escapeshellcmd(', 'string $command)', 'string')
call phpapi#function('eval(', 'string $code_str)', 'mixed')
call phpapi#function('event_add(', 'resource $event [, int $timeout = -1 ])', 'bool')
call phpapi#function('event_base_free(', 'resource $event_base)', 'void')
call phpapi#function('event_base_loop(', 'resource $event_base [, int $flags = 0 ])', 'int')
call phpapi#function('event_base_loopbreak(', 'resource $event_base)', 'bool')
call phpapi#function('event_base_loopexit(', 'resource $event_base [, int $timeout = -1 ])', 'bool')
call phpapi#function('event_base_new(', 'void)', 'resource')
call phpapi#function('event_base_priority_init(', 'resource $event_base , int $npriorities)', 'bool')
call phpapi#function('event_base_set(', 'resource $event , resource $event_base)', 'bool')
call phpapi#function('event_buffer_base_set(', 'resource $bevent , resource $event_base)', 'bool')
call phpapi#function('event_buffer_disable(', 'resource $bevent , int $events)', 'bool')
call phpapi#function('event_buffer_enable(', 'resource $bevent , int $events)', 'bool')
call phpapi#function('event_buffer_fd_set(', 'resource $bevent , resource $fd)', 'void')
call phpapi#function('event_buffer_free(', 'resource $bevent)', 'void')
call phpapi#function('event_buffer_new(', 'resource $stream , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ])', 'resource')
call phpapi#function('event_buffer_priority_set(', 'resource $bevent , int $priority)', 'bool')
call phpapi#function('event_buffer_read(', 'resource $bevent , int $data_size)', 'string')
call phpapi#function('event_buffer_set_callback(', 'resource $event , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ])', 'bool')
call phpapi#function('event_buffer_timeout_set(', 'resource $bevent , int $read_timeout , int $write_timeout)', 'void')
call phpapi#function('event_buffer_watermark_set(', 'resource $bevent , int $events , int $lowmark , int $highmark)', 'void')
call phpapi#function('event_buffer_write(', 'resource $bevent , string $data [, int $data_size = -1 ])', 'bool')
call phpapi#function('event_del(', 'resource $event)', 'bool')
call phpapi#function('event_free(', 'resource $event)', 'void')
call phpapi#function('event_new(', 'void)', 'resource')
call phpapi#function('event_set(', 'resource $event , mixed $fd , int $events , mixed $callback [, mixed $arg ])', 'bool')
call phpapi#function('exec(', 'string $command [, array &$output [, int &$return_var ]])', 'string')
call phpapi#function('execute(', '[ string $query ])', 'object')
call phpapi#function('exif_imagetype(', 'string $filename)', 'int')
call phpapi#function('exif_read_data(', 'string $filename [, string $sections = NULL [, bool $arrays = false [, bool $thumbnail = false ]]])', 'array')
call phpapi#function('exif_tagname(', 'int $index)', 'string')
call phpapi#function('exif_thumbnail(', 'string $filename [, int &$width [, int &$height [, int &$imagetype ]]])', 'string')
call phpapi#function('exit(', '[ string $status ])', 'void')
call phpapi#function('exp(', 'float $arg)', 'float')
call phpapi#function('expect_expectl(', 'resource $expect , array $cases [, array &$match ])', 'int')
call phpapi#function('expect_popen(', 'string $command)', 'resource')
call phpapi#function('explode(', 'string $delimiter , string $string [, int $limit ])', 'array')
call phpapi#function('expm1(', 'float $arg)', 'float')
call phpapi#function('extension_loaded(', 'string $name)', 'bool')
call phpapi#function('extract(', 'array &$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix ]])', 'int')
call phpapi#function('ezmlm_hash(', 'string $addr)', 'int')
call phpapi#function('fam_cancel_monitor(', 'resource $fam , resource $fam_monitor)', 'bool')
call phpapi#function('fam_close(', 'resource $fam)', 'void')
call phpapi#function('fam_monitor_collection(', 'resource $fam , string $dirname , int $depth , string $mask)', 'resource')
call phpapi#function('fam_monitor_directory(', 'resource $fam , string $dirname)', 'resource')
call phpapi#function('fam_monitor_file(', 'resource $fam , string $filename)', 'resource')
call phpapi#function('fam_next_event(', 'resource $fam)', 'array')
call phpapi#function('fam_open(', '[ string $appname ])', 'resource')
call phpapi#function('fam_pending(', 'resource $fam)', 'int')
call phpapi#function('fam_resume_monitor(', 'resource $fam , resource $fam_monitor)', 'bool')
call phpapi#function('fam_suspend_monitor(', 'resource $fam , resource $fam_monitor)', 'bool')
call phpapi#function('fbsql_affected_rows(', '[ resource $link_identifier ])', 'int')
call phpapi#function('fbsql_autocommit(', 'resource $link_identifier [, bool $OnOff ])', 'bool')
call phpapi#function('fbsql_blob_size(', 'string $blob_handle [, resource $link_identifier ])', 'int')
call phpapi#function('fbsql_change_user(', 'string $user , string $password [, string $database [, resource $link_identifier ]])', 'bool')
call phpapi#function('fbsql_clob_size(', 'string $clob_handle [, resource $link_identifier ])', 'int')
call phpapi#function('fbsql_close(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('fbsql_commit(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('fbsql_connect(', '[ string $hostname = ini_get("fbsql.default_host") [, string $username = ini_get("fbsql.default_user") [, string $password = ini_get ("fbsql.default_password") ]]])', 'resource')
call phpapi#function('fbsql_create_blob(', 'string $blob_data [, resource $link_identifier ])', 'string')
call phpapi#function('fbsql_create_clob(', 'string $clob_data [, resource $link_identifier ])', 'string')
call phpapi#function('fbsql_create_db(', 'string $database_name [, resource $link_identifier [, string $database_options ]])', 'bool')
call phpapi#function('fbsql_data_seek(', 'resource $result , int $row_number)', 'bool')
call phpapi#function('fbsql_database(', 'resource $link_identifier [, string $database ])', 'string')
call phpapi#function('fbsql_database_password(', 'resource $link_identifier [, string $database_password ])', 'string')
call phpapi#function('fbsql_db_query(', 'string $database , string $query [, resource $link_identifier ])', 'resource')
call phpapi#function('fbsql_db_status(', 'string $database_name [, resource $link_identifier ])', 'int')
call phpapi#function('fbsql_drop_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('fbsql_errno(', '[ resource $link_identifier ])', 'int')
call phpapi#function('fbsql_error(', '[ resource $link_identifier ])', 'string')
call phpapi#function('fbsql_fetch_array(', 'resource $result [, int $result_type ])', 'array')
call phpapi#function('fbsql_fetch_assoc(', 'resource $result)', 'array')
call phpapi#function('fbsql_fetch_field(', 'resource $result [, int $field_offset ])', 'object')
call phpapi#function('fbsql_fetch_lengths(', 'resource $result)', 'array')
call phpapi#function('fbsql_fetch_object(', 'resource $result)', 'object')
call phpapi#function('fbsql_fetch_row(', 'resource $result)', 'array')
call phpapi#function('fbsql_field_flags(', 'resource $result [, int $field_offset ])', 'string')
call phpapi#function('fbsql_field_name(', 'resource $result [, int $field_index ])', 'string')
call phpapi#function('fbsql_field_seek(', 'resource $result [, int $field_offset ])', 'bool')
call phpapi#function('fbsql_field_table(', 'resource $result [, int $field_offset ])', 'string')
call phpapi#function('fbsql_field_type(', 'resource $result [, int $field_offset ])', 'string')
call phpapi#function('fbsql_free_result(', 'resource $result)', 'bool')
call phpapi#function('fbsql_get_autostart_info(', '[ resource $link_identifier ])', 'array')
call phpapi#function('fbsql_hostname(', 'resource $link_identifier [, string $host_name ])', 'string')
call phpapi#function('fbsql_insert_id(', '[ resource $link_identifier ])', 'int')
call phpapi#function('fbsql_list_dbs(', '[ resource $link_identifier ])', 'resource')
call phpapi#function('fbsql_list_fields(', 'string $database_name , string $table_name [, resource $link_identifier ])', 'resource')
call phpapi#function('fbsql_list_tables(', 'string $database [, resource $link_identifier ])', 'resource')
call phpapi#function('fbsql_next_result(', 'resource $result)', 'bool')
call phpapi#function('fbsql_num_fields(', 'resource $result)', 'int')
call phpapi#function('fbsql_num_rows(', 'resource $result)', 'int')
call phpapi#function('fbsql_password(', 'resource $link_identifier [, string $password ])', 'string')
call phpapi#function('fbsql_pconnect(', '[ string $hostname = ini_get("fbsql.default_host") [, string $username = ini_get("fbsql.default_user") [, string $password = ini_get ("fbsql.default_password") ]]])', 'resource')
call phpapi#function('fbsql_query(', 'string $query [, resource $link_identifier [, int $batch_size ]])', 'resource')
call phpapi#function('fbsql_read_blob(', 'string $blob_handle [, resource $link_identifier ])', 'string')
call phpapi#function('fbsql_read_clob(', 'string $clob_handle [, resource $link_identifier ])', 'string')
call phpapi#function('fbsql_result(', 'resource $result [, int $row [, mixed $field ]])', 'mixed')
call phpapi#function('fbsql_rollback(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('fbsql_rows_fetched(', 'resource $result)', 'int')
call phpapi#function('fbsql_select_db(', '[ string $database_name [, resource $link_identifier ]])', 'bool')
call phpapi#function('fbsql_set_characterset(', 'resource $link_identifier , int $characterset [, int $in_out_both ])', 'void')
call phpapi#function('fbsql_set_lob_mode(', 'resource $result , int $lob_mode)', 'bool')
call phpapi#function('fbsql_set_password(', 'resource $link_identifier , string $user , string $password , string $old_password)', 'bool')
call phpapi#function('fbsql_set_transaction(', 'resource $link_identifier , int $locking , int $isolation)', 'void')
call phpapi#function('fbsql_start_db(', 'string $database_name [, resource $link_identifier [, string $database_options ]])', 'bool')
call phpapi#function('fbsql_stop_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('fbsql_table_name(', 'resource $result , int $index)', 'string')
call phpapi#function('fbsql_username(', 'resource $link_identifier [, string $username ])', 'string')
call phpapi#function('fbsql_warnings(', '[ bool $OnOff ])', 'bool')
call phpapi#function('fclose(', 'resource $handle)', 'bool')
call phpapi#function('fdf_add_doc_javascript(', 'resource $fdf_document , string $script_name , string $script_code)', 'bool')
call phpapi#function('fdf_add_template(', 'resource $fdf_document , int $newpage , string $filename , string $template , int $rename)', 'bool')
call phpapi#function('fdf_close(', 'resource $fdf_document)', 'void')
call phpapi#function('fdf_create(', 'void)', 'resource')
call phpapi#function('fdf_enum_values(', 'resource $fdf_document , callback $function [, mixed $userdata ])', 'bool')
call phpapi#function('fdf_errno(', 'void)', 'int')
call phpapi#function('fdf_error(', '[ int $error_code = -1 ])', 'string')
call phpapi#function('fdf_get_ap(', 'resource $fdf_document , string $field , int $face , string $filename)', 'bool')
call phpapi#function('fdf_get_attachment(', 'resource $fdf_document , string $fieldname , string $savepath)', 'array')
call phpapi#function('fdf_get_encoding(', 'resource $fdf_document)', 'string')
call phpapi#function('fdf_get_file(', 'resource $fdf_document)', 'string')
call phpapi#function('fdf_get_flags(', 'resource $fdf_document , string $fieldname , int $whichflags)', 'int')
call phpapi#function('fdf_get_opt(', 'resource $fdf_document , string $fieldname [, int $element = -1 ])', 'mixed')
call phpapi#function('fdf_get_status(', 'resource $fdf_document)', 'string')
call phpapi#function('fdf_get_value(', 'resource $fdf_document , string $fieldname [, int $which = -1 ])', 'mixed')
call phpapi#function('fdf_get_version(', '[ resource $fdf_document ])', 'string')
call phpapi#function('fdf_header(', 'void)', 'void')
call phpapi#function('fdf_next_field_name(', 'resource $fdf_document [, string $fieldname ])', 'string')
call phpapi#function('fdf_open(', 'string $filename)', 'resource')
call phpapi#function('fdf_open_string(', 'string $fdf_data)', 'resource')
call phpapi#function('fdf_remove_item(', 'resource $fdf_document , string $fieldname , int $item)', 'bool')
call phpapi#function('fdf_save(', 'resource $fdf_document [, string $filename ])', 'bool')
call phpapi#function('fdf_save_string(', 'resource $fdf_document)', 'string')
call phpapi#function('fdf_set_ap(', 'resource $fdf_document , string $field_name , int $face , string $filename , int $page_number)', 'bool')
call phpapi#function('fdf_set_encoding(', 'resource $fdf_document , string $encoding)', 'bool')
call phpapi#function('fdf_set_file(', 'resource $fdf_document , string $url [, string $target_frame ])', 'bool')
call phpapi#function('fdf_set_flags(', 'resource $fdf_document , string $fieldname , int $whichFlags , int $newFlags)', 'bool')
call phpapi#function('fdf_set_javascript_action(', 'resource $fdf_document , string $fieldname , int $trigger , string $script)', 'bool')
call phpapi#function('fdf_set_on_import_javascript(', 'resource $fdf_document , string $script , bool $before_data_import)', 'bool')
call phpapi#function('fdf_set_opt(', 'resource $fdf_document , string $fieldname , int $element , string $str1 , string $str2)', 'bool')
call phpapi#function('fdf_set_status(', 'resource $fdf_document , string $status)', 'bool')
call phpapi#function('fdf_set_submit_form_action(', 'resource $fdf_document , string $fieldname , int $trigger , string $script , int $flags)', 'bool')
call phpapi#function('fdf_set_target_frame(', 'resource $fdf_document , string $frame_name)', 'bool')
call phpapi#function('fdf_set_value(', 'resource $fdf_document , string $fieldname , mixed $value [, int $isName ])', 'bool')
call phpapi#function('fdf_set_version(', 'resource $fdf_document , string $version)', 'bool')
call phpapi#function('feof(', 'resource $handle)', 'bool')
call phpapi#function('fflush(', 'resource $handle)', 'bool')
call phpapi#function('fgetc(', 'resource $handle)', 'string')
call phpapi#function('fgetcsv(', 'resource $handle [, int $length = 0 [, string $delimiter = ","  [, string $enclosure = " [, string $escape = "\\" ]]]])', 'array')
call phpapi#function('fgets(', 'resource $handle [, int $length ])', 'string')
call phpapi#function('fgetss(', 'resource $handle [, int $length [, string $allowable_tags ]])', 'string')
call phpapi#function('file(', 'string $filename [, int $flags = 0 [, resource $context ]])', 'array')
call phpapi#function('file_exists(', 'string $filename)', 'bool')
call phpapi#function('file_get_contents(', 'string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]])', 'string')
call phpapi#function('file_put_contents(', 'string $filename , mixed $data [, int $flags = 0 [, resource $context ]])', 'int')
call phpapi#function('fileatime(', 'string $filename)', 'int')
call phpapi#function('filectime(', 'string $filename)', 'int')
call phpapi#function('filegroup(', 'string $filename)', 'int')
call phpapi#function('fileinode(', 'string $filename)', 'int')
call phpapi#function('filemtime(', 'string $filename)', 'int')
call phpapi#function('fileperms(', 'string $filename)', 'int')
call phpapi#function('filepro(', 'string $directory)', 'bool')
call phpapi#function('filepro_fieldcount(', 'void)', 'int')
call phpapi#function('filepro_fieldname(', 'int $field_number)', 'string')
call phpapi#function('filepro_fieldtype(', 'int $field_number)', 'string')
call phpapi#function('filepro_fieldwidth(', 'int $field_number)', 'int')
call phpapi#function('filepro_retrieve(', 'int $row_number , int $field_number)', 'string')
call phpapi#function('filepro_rowcount(', 'void)', 'int')
call phpapi#function('filesize(', 'string $filename)', 'int')
call phpapi#function('filetype(', 'string $filename)', 'string')
call phpapi#function('filter_has_var(', 'int $type , string $variable_name)', 'bool')
call phpapi#function('filter_id(', 'string $filtername)', 'int')
call phpapi#function('filter_input(', 'int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]])', 'mixed')
call phpapi#function('filter_input_array(', 'int $type [, mixed $definition ])', 'mixed')
call phpapi#function('filter_list(', 'void)', 'array')
call phpapi#function('filter_var(', 'mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]])', 'mixed')
call phpapi#function('filter_var_array(', 'array $data [, mixed $definition ])', 'mixed')
call phpapi#function('first_child(', 'void)', 'domelement')
call phpapi#function('floatval(', 'mixed $var)', 'float')
call phpapi#function('flock(', 'resource $handle , int $operation [, int &$wouldblock ])', 'bool')
call phpapi#function('floor(', 'float $value)', 'float')
call phpapi#function('flush(', 'void)', 'void')
call phpapi#function('fmod(', 'float $x , float $y)', 'float')
call phpapi#function('fnmatch(', 'string $pattern , string $string [, int $flags = 0 ])', 'bool')
call phpapi#function('fopen(', 'string $filename , string $mode [, bool $use_include_path = false [, resource $context ]])', 'resource')
call phpapi#function('forward_static_call(', 'callback $function [, mixed $parameter [, mixed $... ]])', 'mixed')
call phpapi#function('forward_static_call_array(', 'callback $function , array $parameters)', 'mixed')
call phpapi#function('fpassthru(', 'resource $handle)', 'int')
call phpapi#function('fprintf(', 'resource $handle , string $format [, mixed $args [, mixed $... ]])', 'int')
call phpapi#function('fputcsv(', 'resource $handle , array $fields [, string $delimiter = ","  [, string $enclosure = " ]])', 'int')
call phpapi#function('fread(', 'resource $handle , int $length)', 'string')
call phpapi#function('frenchtojd(', 'int $month , int $day , int $year)', 'int')
call phpapi#function('fribidi_log2vis(', 'string $str , string $direction , int $charset)', 'string')
call phpapi#function('fscanf(', 'resource $handle , string $format [, mixed &$... ])', 'mixed')
call phpapi#function('fseek(', 'resource $handle , int $offset [, int $whence = SEEK_SET ])', 'int')
call phpapi#function('fsockopen(', 'string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]])', 'resource')
call phpapi#function('fstat(', 'resource $handle)', 'array')
call phpapi#function('ftell(', 'resource $handle)', 'int')
call phpapi#function('ftok(', 'string $pathname , string $proj)', 'int')
call phpapi#function('ftp_alloc(', 'resource $ftp_stream , int $filesize [, string &$result ])', 'bool')
call phpapi#function('ftp_cdup(', 'resource $ftp_stream)', 'bool')
call phpapi#function('ftp_chdir(', 'resource $ftp_stream , string $directory)', 'bool')
call phpapi#function('ftp_chmod(', 'resource $ftp_stream , int $mode , string $filename)', 'int')
call phpapi#function('ftp_close(', 'resource $ftp_stream)', 'bool')
call phpapi#function('ftp_connect(', 'string $host [, int $port = 21 [, int $timeout = 90 ]])', 'resource')
call phpapi#function('ftp_delete(', 'resource $ftp_stream , string $path)', 'bool')
call phpapi#function('ftp_exec(', 'resource $ftp_stream , string $command)', 'bool')
call phpapi#function('ftp_fget(', 'resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ])', 'bool')
call phpapi#function('ftp_fput(', 'resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ])', 'bool')
call phpapi#function('ftp_get(', 'resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ])', 'bool')
call phpapi#function('ftp_get_option(', 'resource $ftp_stream , int $option)', 'mixed')
call phpapi#function('ftp_login(', 'resource $ftp_stream , string $username , string $password)', 'bool')
call phpapi#function('ftp_mdtm(', 'resource $ftp_stream , string $remote_file)', 'int')
call phpapi#function('ftp_mkdir(', 'resource $ftp_stream , string $directory)', 'string')
call phpapi#function('ftp_nb_continue(', 'resource $ftp_stream)', 'int')
call phpapi#function('ftp_nb_fget(', 'resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ])', 'int')
call phpapi#function('ftp_nb_fput(', 'resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ])', 'int')
call phpapi#function('ftp_nb_get(', 'resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ])', 'int')
call phpapi#function('ftp_nb_put(', 'resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ])', 'int')
call phpapi#function('ftp_nlist(', 'resource $ftp_stream , string $directory)', 'array')
call phpapi#function('ftp_pasv(', 'resource $ftp_stream , bool $pasv)', 'bool')
call phpapi#function('ftp_put(', 'resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ])', 'bool')
call phpapi#function('ftp_pwd(', 'resource $ftp_stream)', 'string')
call phpapi#function('ftp_raw(', 'resource $ftp_stream , string $command)', 'array')
call phpapi#function('ftp_rawlist(', 'resource $ftp_stream , string $directory [, bool $recursive = false ])', 'array')
call phpapi#function('ftp_rename(', 'resource $ftp_stream , string $oldname , string $newname)', 'bool')
call phpapi#function('ftp_rmdir(', 'resource $ftp_stream , string $directory)', 'bool')
call phpapi#function('ftp_set_option(', 'resource $ftp_stream , int $option , mixed $value)', 'bool')
call phpapi#function('ftp_site(', 'resource $ftp_stream , string $command)', 'bool')
call phpapi#function('ftp_size(', 'resource $ftp_stream , string $remote_file)', 'int')
call phpapi#function('ftp_ssl_connect(', 'string $host [, int $port = 21 [, int $timeout = 90 ]])', 'resource')
call phpapi#function('ftp_systype(', 'resource $ftp_stream)', 'string')
call phpapi#function('ftruncate(', 'resource $handle , int $size)', 'bool')
call phpapi#function('func_get_arg(', 'int $arg_num)', 'mixed')
call phpapi#function('func_get_args(', 'void)', 'array')
call phpapi#function('func_num_args(', 'void)', 'int')
call phpapi#function('function_exists(', 'string $function_name)', 'bool')
call phpapi#function('fwrite(', 'resource $handle , string $string [, int $length ])', 'int')
call phpapi#function('gc_collect_cycles(', 'void)', 'int')
call phpapi#function('gc_disable(', 'void)', 'void')
call phpapi#function('gc_enable(', 'void)', 'void')
call phpapi#function('gc_enabled(', 'void)', 'bool')
call phpapi#function('gd_info(', 'void)', 'array')
call phpapi#function('geoip_continent_code_by_name(', 'string $hostname)', 'string')
call phpapi#function('geoip_country_code_by_name(', 'string $hostname)', 'string')
call phpapi#function('geoip_country_code3_by_name(', 'string $hostname)', 'string')
call phpapi#function('geoip_country_name_by_name(', 'string $hostname)', 'string')
call phpapi#function('geoip_database_info(', '[ int $database = GEOIP_COUNTRY_EDITION ])', 'string')
call phpapi#function('geoip_db_avail(', 'int $database)', 'bool')
call phpapi#function('geoip_db_filename(', 'int $database)', 'string')
call phpapi#function('geoip_db_get_all_info(', 'void)', 'array')
call phpapi#function('geoip_id_by_name(', 'string $hostname)', 'int')
call phpapi#function('geoip_isp_by_name(', 'string $hostname)', 'string')
call phpapi#function('geoip_org_by_name(', 'string $hostname)', 'string')
call phpapi#function('geoip_record_by_name(', 'string $hostname)', 'array')
call phpapi#function('geoip_region_by_name(', 'string $hostname)', 'array')
call phpapi#function('geoip_region_name_by_code(', 'string $country_code , string $region_code)', 'string')
call phpapi#function('geoip_time_zone_by_country_and_region(', 'string $country_code [, string $region_code ])', 'string')
call phpapi#function('get_browser(', '[ string $user_agent [, bool $return_array = false ]])', 'mixed')
call phpapi#function('get_called_class(', 'void)', 'string')
call phpapi#function('get_cfg_var(', 'string $option)', 'string')
call phpapi#function('get_class(', '[ object $object = NULL ])', 'string')
call phpapi#function('get_class_methods(', 'mixed $class_name)', 'array')
call phpapi#function('get_class_vars(', 'string $class_name)', 'array')
call phpapi#function('get_content(', 'void)', 'string')
call phpapi#function('get_current_user(', 'void)', 'string')
call phpapi#function('get_declared_classes(', 'void)', 'array')
call phpapi#function('get_declared_interfaces(', 'void)', 'array')
call phpapi#function('get_defined_constants(', '[ bool $categorize = false ])', 'array')
call phpapi#function('get_defined_functions(', 'void)', 'array')
call phpapi#function('get_defined_vars(', 'void)', 'array')
call phpapi#function('get_element_by_id(', 'string $id)', 'domelement')
call phpapi#function('get_elements_by_tagname(', 'string $name)', 'array')
call phpapi#function('get_extension_funcs(', 'string $module_name)', 'array')
call phpapi#function('get_headers(', 'string $url [, int $format = 0 ])', 'array')
call phpapi#function('get_html_translation_table(', '[ int $table = HTML_SPECIALCHARS [, int $quote_style = ENT_COMPAT [, string $charset_hint ]]])', 'array')
call phpapi#function('get_include_path(', 'void)', 'string')
call phpapi#function('get_included_files(', 'void)', 'array')
call phpapi#function('get_loaded_extensions(', '[ bool $zend_extensions = false ])', 'array')
call phpapi#function('get_magic_quotes_gpc(', 'void)', 'int')
call phpapi#function('get_magic_quotes_runtime(', 'void)', 'int')
call phpapi#function('get_meta_tags(', 'string $filename [, bool $use_include_path = false ])', 'array')
call phpapi#function('get_object_vars(', 'object $object)', 'array')
call phpapi#function('get_parent_class(', '[ mixed $object ])', 'string')
call phpapi#function('get_resource_type(', 'resource $handle)', 'string')
call phpapi#function('getallheaders(', 'void)', 'array')
call phpapi#function('getcwd(', 'void)', 'string')
call phpapi#function('getdate(', '[ int $timestamp = time() ])', 'array')
call phpapi#function('getenv(', 'string $varname)', 'string')
call phpapi#function('gethostbyaddr(', 'string $ip_address)', 'string')
call phpapi#function('gethostbyname(', 'string $hostname)', 'string')
call phpapi#function('gethostbynamel(', 'string $hostname)', 'array')
call phpapi#function('gethostname(', 'void)', 'string')
call phpapi#function('getimagesize(', 'string $filename [, array &$imageinfo ])', 'array')
call phpapi#function('getlastmod(', 'void)', 'int')
call phpapi#function('getMetaList(', 'string $index_name)', 'array')
call phpapi#function('getMetaList(', 'void)', 'array')
call phpapi#function('getmxrr(', 'string $hostname , array &$mxhosts [, array &$weight ])', 'bool')
call phpapi#function('getmygid(', 'void)', 'int')
call phpapi#function('getmyinode(', 'void)', 'int')
call phpapi#function('getmypid(', 'void)', 'int')
call phpapi#function('getmyuid(', 'void)', 'int')
call phpapi#function('getopt(', 'string $options [, array $longopts ])', 'array')
call phpapi#function('getParsedWords(', 'string $index_name)', 'array')
call phpapi#function('getPropertyList(', 'string $index_name)', 'array')
call phpapi#function('getprotobyname(', 'string $name)', 'int')
call phpapi#function('getprotobynumber(', 'int $number)', 'string')
call phpapi#function('getrandmax(', 'void)', 'int')
call phpapi#function('getRemovedStopwords(', 'string $index_name)', 'array')
call phpapi#function('getrusage(', '[ int $who = 0 ])', 'array')
call phpapi#function('getservbyname(', 'string $service , string $protocol)', 'int')
call phpapi#function('getservbyport(', 'int $port , string $protocol)', 'string')
call phpapi#function('gettext(', 'string $message)', 'string')
call phpapi#function('gettimeofday(', '[ bool $return_float = false ])', 'mixed')
call phpapi#function('gettype(', 'mixed $var)', 'string')
call phpapi#function('glob(', 'string $pattern [, int $flags = 0 ])', 'array')
call phpapi#function('gmdate(', 'string $format [, int $timestamp = time() ])', 'string')
call phpapi#function('gmmktime(', '[ int $hour = gmdate("H") [, int $minute = gmdate("i") [, int $second = gmdate("s") [, int $month = gmdate("n") [, int $day = gmdate("j") [, int $year = gmdate("Y") [, int $is_dst = -1 ]]]]]]])', 'int')
call phpapi#function('gmp_abs(', 'resource $a)', 'resource')
call phpapi#function('gmp_add(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmp_and(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmp_clrbit(', 'resource $a , int $index)', 'void')
call phpapi#function('gmp_cmp(', 'resource $a , resource $b)', 'int')
call phpapi#function('gmp_com(', 'resource $a)', 'resource')
call phpapi#function('gmp_div_q(', 'resource $a , resource $b [, int $round = GMP_ROUND_ZERO ])', 'resource')
call phpapi#function('gmp_div_qr(', 'resource $n , resource $d [, int $round = GMP_ROUND_ZERO ])', 'array')
call phpapi#function('gmp_div_r(', 'resource $n , resource $d [, int $round = GMP_ROUND_ZERO ])', 'resource')
call phpapi#function('gmp_divexact(', 'resource $n , resource $d)', 'resource')
call phpapi#function('gmp_fact(', 'mixed $a)', 'resource')
call phpapi#function('gmp_gcd(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmp_gcdext(', 'resource $a , resource $b)', 'array')
call phpapi#function('gmp_hamdist(', 'resource $a , resource $b)', 'int')
call phpapi#function('gmp_init(', 'mixed $number [, int $base = 0 ])', 'resource')
call phpapi#function('gmp_intval(', 'resource $gmpnumber)', 'int')
call phpapi#function('gmp_invert(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmp_jacobi(', 'resource $a , resource $p)', 'int')
call phpapi#function('gmp_legendre(', 'resource $a , resource $p)', 'int')
call phpapi#function('gmp_mod(', 'resource $n , resource $d)', 'resource')
call phpapi#function('gmp_mul(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmp_neg(', 'resource $a)', 'resource')
call phpapi#function('gmp_nextprime(', 'int $a)', 'resource')
call phpapi#function('gmp_or(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmp_perfect_square(', 'resource $a)', 'bool')
call phpapi#function('gmp_popcount(', 'resource $a)', 'int')
call phpapi#function('gmp_pow(', 'resource $base , int $exp)', 'resource')
call phpapi#function('gmp_powm(', 'resource $base , resource $exp , resource $mod)', 'resource')
call phpapi#function('gmp_prob_prime(', 'resource $a [, int $reps = 10 ])', 'int')
call phpapi#function('gmp_random(', '[ int $limiter = 20 ])', 'resource')
call phpapi#function('gmp_scan0(', 'resource $a , int $start)', 'int')
call phpapi#function('gmp_scan1(', 'resource $a , int $start)', 'int')
call phpapi#function('gmp_setbit(', 'resource $a , int $index [, bool $set_clear = true ])', 'void')
call phpapi#function('gmp_sign(', 'resource $a)', 'int')
call phpapi#function('gmp_sqrt(', 'resource $a)', 'resource')
call phpapi#function('gmp_sqrtrem(', 'resource $a)', 'array')
call phpapi#function('gmp_strval(', 'resource $gmpnumber [, int $base = 10 ])', 'string')
call phpapi#function('gmp_sub(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmp_testbit(', 'resource $a , int $index)', 'bool')
call phpapi#function('gmp_xor(', 'resource $a , resource $b)', 'resource')
call phpapi#function('gmstrftime(', 'string $format [, int $timestamp = time() ])', 'string')
call phpapi#function('gnupg_adddecryptkey(', 'resource $identifier , string $fingerprint , string $passphrase)', 'bool')
call phpapi#function('gnupg_addencryptkey(', 'resource $identifier , string $fingerprint)', 'bool')
call phpapi#function('gnupg_addsignkey(', 'resource $identifier , string $fingerprint [, string $passphrase ])', 'bool')
call phpapi#function('gnupg_cleardecryptkeys(', 'resource $identifier)', 'bool')
call phpapi#function('gnupg_clearencryptkeys(', 'resource $identifier)', 'bool')
call phpapi#function('gnupg_clearsignkeys(', 'resource $identifier)', 'bool')
call phpapi#function('gnupg_decrypt(', 'resource $identifier , string $text)', 'string')
call phpapi#function('gnupg_decryptverify(', 'resource $identifier , string $text , string & $plaintext)', 'array')
call phpapi#function('gnupg_encrypt(', 'resource $identifier , string $plaintext)', 'string')
call phpapi#function('gnupg_encryptsign(', 'resource $identifier , string $plaintext)', 'string')
call phpapi#function('gnupg_export(', 'resource $identifier , string $fingerprint)', 'string')
call phpapi#function('gnupg_geterror(', 'resource $identifier)', 'string')
call phpapi#function('gnupg_getprotocol(', 'resource $identifier)', 'int')
call phpapi#function('gnupg_import(', 'resource $identifier , string $keydata)', 'array')
call phpapi#function('gnupg_init(', 'void)', 'resource')
call phpapi#function('gnupg_keyinfo(', 'resource $identifier , string $pattern)', 'array')
call phpapi#function('gnupg_setarmor(', 'resource $identifier , int $armor)', 'bool')
call phpapi#function('gnupg_seterrormode(', 'resource $identifier , int $errormode)', 'void')
call phpapi#function('gnupg_setsignmode(', 'resource $identifier , int $signmode)', 'bool')
call phpapi#function('gnupg_sign(', 'resource $identifier , string $plaintext)', 'string')
call phpapi#function('gnupg_verify(', 'resource $identifier , string $signed_text , string $signature [, string &$plaintext ])', 'array')
call phpapi#function('gopher_parsedir(', 'string $dirent)', 'array')
call phpapi#function('gregoriantojd(', 'int $month , int $day , int $year)', 'int')
call phpapi#function('gupnp_context_get_host_ip(', 'resource $context)', 'string')
call phpapi#function('gupnp_context_get_port(', 'resource $context)', 'int')
call phpapi#function('gupnp_context_get_subscription_timeout(', 'resource $context)', 'int')
call phpapi#function('gupnp_context_host_path(', 'resource $context , string $local_path , string $server_path)', 'bool')
call phpapi#function('gupnp_context_new(', '[ string $host_ip [, int $port = 0 ]])', 'resource')
call phpapi#function('gupnp_context_set_subscription_timeout(', 'resource $context , int $timeout)', 'void')
call phpapi#function('gupnp_context_timeout_add(', 'resource $context , int $timeout , mixed $callback [, mixed $arg ])', 'bool')
call phpapi#function('gupnp_context_unhost_path(', 'resource $context , string $server_path)', 'bool')
call phpapi#function('gupnp_control_point_browse_start(', 'resource $cpoint)', 'bool')
call phpapi#function('gupnp_control_point_browse_stop(', 'resource $cpoint)', 'bool')
call phpapi#function('gupnp_control_point_callback_set(', 'resource $cpoint , int $signal , mixed $callback [, mixed $arg ])', 'bool')
call phpapi#function('gupnp_control_point_new(', 'resource $context , string $target)', 'resource')
call phpapi#function('gupnp_device_action_callback_set(', 'resource $root_device , int $signal , string $action_name , mixed $callback [, mixed $arg ])', 'bool')
call phpapi#function('gupnp_device_info_get(', 'resource $root_device)', 'array')
call phpapi#function('gupnp_device_info_get_service(', 'resource $root_device , string $type)', 'resource')
call phpapi#function('gupnp_root_device_get_available(', 'resource $root_device)', 'bool')
call phpapi#function('gupnp_root_device_get_relative_location(', 'resource $root_device)', 'string')
call phpapi#function('gupnp_root_device_new(', 'resource $context , string $location , string $description_dir)', 'resource')
call phpapi#function('gupnp_root_device_set_available(', 'resource $root_device , bool $available)', 'bool')
call phpapi#function('gupnp_root_device_start(', 'resource $root_device)', 'bool')
call phpapi#function('gupnp_root_device_stop(', 'resource $root_device)', 'bool')
call phpapi#function('gupnp_service_action_get(', 'resource $action , string $name , int $type)', 'mixed')
call phpapi#function('gupnp_service_action_return(', 'resource $action)', 'bool')
call phpapi#function('gupnp_service_action_return_error(', 'resource $action , int $error_code [, string $error_description ])', 'bool')
call phpapi#function('gupnp_service_action_set(', 'resource $action , string $name , int $type , mixed $value)', 'bool')
call phpapi#function('gupnp_service_freeze_notify(', 'resource $service)', 'bool')
call phpapi#function('gupnp_service_info_get(', 'resource $proxy)', 'array')
call phpapi#function('gupnp_service_info_get_introspection(', 'resource $proxy [, mixed $callback [, mixed $arg ]])', 'mixed')
call phpapi#function('gupnp_service_introspection_get_state_variable(', 'resource $introspection , string $variable_name)', 'array')
call phpapi#function('gupnp_service_notify(', 'resource $service , string $name , int $type , mixed $value)', 'bool')
call phpapi#function('gupnp_service_proxy_action_get(', 'resource $proxy , string $action , string $name , int $type)', 'mixed')
call phpapi#function('gupnp_service_proxy_action_set(', 'resource $proxy , string $action , string $name , mixed $value , int $type)', 'bool')
call phpapi#function('gupnp_service_proxy_add_notify(', 'resource $proxy , string $value , int $type , mixed $callback [, mixed $arg ])', 'bool')
call phpapi#function('gupnp_service_proxy_callback_set(', 'resource $proxy , int $signal , mixed $callback [, mixed $arg ])', 'bool')
call phpapi#function('gupnp_service_proxy_get_subscribed(', 'resource $proxy)', 'bool')
call phpapi#function('gupnp_service_proxy_remove_notify(', 'resource $proxy , string $value)', 'bool')
call phpapi#function('gupnp_service_proxy_set_subscribed(', 'resource $proxy , bool $subscribed)', 'bool')
call phpapi#function('gupnp_service_thaw_notify(', 'resource $service)', 'bool')
call phpapi#function('gzclose(', 'resource $zp)', 'bool')
call phpapi#function('gzcompress(', 'string $data [, int $level = -1 ])', 'string')
call phpapi#function('gzdecode(', 'string $data [, int $length ])', 'string')
call phpapi#function('gzdeflate(', 'string $data [, int $level = -1 ])', 'string')
call phpapi#function('gzencode(', 'string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]])', 'string')
call phpapi#function('gzeof(', 'resource $zp)', 'int')
call phpapi#function('gzfile(', 'string $filename [, int $use_include_path = 0 ])', 'array')
call phpapi#function('gzgetc(', 'resource $zp)', 'string')
call phpapi#function('gzgets(', 'resource $zp , int $length)', 'string')
call phpapi#function('gzgetss(', 'resource $zp , int $length [, string $allowable_tags ])', 'string')
call phpapi#function('gzinflate(', 'string $data [, int $length = 0 ])', 'string')
call phpapi#function('gzopen(', 'string $filename , string $mode [, int $use_include_path = 0 ])', 'resource')
call phpapi#function('gzpassthru(', 'resource $zp)', 'int')
call phpapi#function('gzread(', 'resource $zp , int $length)', 'string')
call phpapi#function('gzrewind(', 'resource $zp)', 'bool')
call phpapi#function('gzseek(', 'resource $zp , int $offset [, int $whence = SEEK_SET ])', 'int')
call phpapi#function('gztell(', 'resource $zp)', 'int')
call phpapi#function('gzuncompress(', 'string $data [, int $length = 0 ])', 'string')
call phpapi#function('gzwrite(', 'resource $zp , string $string [, int $length ])', 'int')
call phpapi#function('has_attributes(', 'void)', 'bool')
call phpapi#function('has_child_nodes(', 'void)', 'bool')
call phpapi#function('hash(', 'string $algo , string $data [, bool $raw_output = false ])', 'string')
call phpapi#function('hash_algos(', 'void)', 'array')
call phpapi#function('hash_copy(', 'resource $context)', 'resource')
call phpapi#function('hash_file(', 'string $algo , string $filename [, bool $raw_output = false ])', 'string')
call phpapi#function('hash_final(', 'resource $context [, bool $raw_output = false ])', 'string')
call phpapi#function('hash_hmac(', 'string $algo , string $data , string $key [, bool $raw_output = false ])', 'string')
call phpapi#function('hash_hmac_file(', 'string $algo , string $filename , string $key [, bool $raw_output = false ])', 'string')
call phpapi#function('hash_init(', 'string $algo [, int $options = 0 [, string $key = NULL ]])', 'resource')
call phpapi#function('hash_update(', 'resource $context , string $data)', 'bool')
call phpapi#function('hash_update_file(', 'resource $context , string $filename [, resource $context = NULL ])', 'bool')
call phpapi#function('hash_update_stream(', 'resource $context , resource $handle [, int $length = -1 ])', 'int')
call phpapi#function('header(', 'string $string [, bool $replace = true [, int $http_response_code ]])', 'void')
call phpapi#function('header_remove(', '[ string $name ])', 'void')
call phpapi#function('headers_list(', 'void)', 'array')
call phpapi#function('headers_sent(', '[ string &$file [, int &$line ]])', 'bool')
call phpapi#function('hebrev(', 'string $hebrew_text [, int $max_chars_per_line = 0 ])', 'string')
call phpapi#function('hebrevc(', 'string $hebrew_text [, int $max_chars_per_line = 0 ])', 'string')
call phpapi#function('hexdec(', 'string $hex_string)', 'number')
call phpapi#function('highlight_file(', 'string $filename [, bool $return = false ])', 'mixed')
call phpapi#function('highlight_string(', 'string $str [, bool $return = false ])', 'mixed')
call phpapi#function('html_dump_mem(', 'void)', 'string')
call phpapi#function('html_entity_decode(', 'string $string [, int $quote_style = ENT_COMPAT [, string $charset = "UTF-8" ]])', 'string')
call phpapi#function('htmlentities(', 'string $string [, int $flags = ENT_COMPAT [, string $charset [, bool $double_encode = true ]]])', 'string')
call phpapi#function('htmlspecialchars(', 'string $string [, int $flags = ENT_COMPAT [, string $charset [, bool $double_encode = true ]]])', 'string')
call phpapi#function('htmlspecialchars_decode(', 'string $string [, int $quote_style = ENT_COMPAT ])', 'string')
call phpapi#function('http_build_cookie(', 'array $cookie)', 'string')
call phpapi#function('http_build_query(', 'mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]])', 'string')
call phpapi#function('http_build_str(', 'array $query [, string $prefix [, string $arg_separator = ini_get("arg_separator.output") ]])', 'string')
call phpapi#function('http_build_url(', '[ mixed $url [, mixed $parts [, int $flags = HTTP_URL_REPLACE [, array &$new_url ]]]])', 'string')
call phpapi#function('http_cache_etag(', '[ string $etag ])', 'bool')
call phpapi#function('http_cache_last_modified(', '[ int $timestamp_or_expires ])', 'bool')
call phpapi#function('http_chunked_decode(', 'string $encoded)', 'string')
call phpapi#function('http_date(', '[ int $timestamp ])', 'string')
call phpapi#function('http_deflate(', 'string $data [, int $flags = 0 ])', 'string')
call phpapi#function('http_get(', 'string $url [, array $options [, array &$info ]])', 'string')
call phpapi#function('http_get_request_body(', 'void)', 'string')
call phpapi#function('http_get_request_body_stream(', 'void)', 'resource')
call phpapi#function('http_get_request_headers(', 'void)', 'array')
call phpapi#function('http_head(', 'string $url [, array $options [, array &$info ]])', 'string')
call phpapi#function('http_inflate(', 'string $data)', 'string')
call phpapi#function('http_match_etag(', 'string $etag [, bool $for_range = false ])', 'bool')
call phpapi#function('http_match_modified(', '[ int $timestamp = -1 [, bool $for_range = false ]])', 'bool')
call phpapi#function('http_match_request_header(', 'string $header , string $value [, bool $match_case = false ])', 'bool')
call phpapi#function('http_negotiate_charset(', 'array $supported [, array &$result ])', 'string')
call phpapi#function('http_negotiate_content_type(', 'array $supported [, array &$result ])', 'string')
call phpapi#function('http_negotiate_language(', 'array $supported [, array &$result ])', 'string')
call phpapi#function('http_parse_cookie(', 'string $cookie [, int $flags [, array $allowed_extras ]])', 'object')
call phpapi#function('http_parse_headers(', 'string $header)', 'array')
call phpapi#function('http_parse_message(', 'string $message)', 'object')
call phpapi#function('http_parse_params(', 'string $param [, int $flags = HTTP_PARAMS_DEFAULT ])', 'object')
call phpapi#function('http_persistent_handles_clean(', '[ string $ident ])', 'string')
call phpapi#function('http_persistent_handles_count(', 'void)', 'object')
call phpapi#function('http_persistent_handles_ident(', '[ string $ident ])', 'string')
call phpapi#function('http_post_data(', 'string $url , string $data [, array $options [, array & $info ]])', 'string')
call phpapi#function('http_post_fields(', 'string $url , array $data [, array $files [, array $options [, array &$info ]]])', 'string')
call phpapi#function('http_put_data(', 'string $url , string $data [, array $options [, array & $info ]])', 'string')
call phpapi#function('http_put_file(', 'string $url , string $file [, array $options [, array & $info ]])', 'string')
call phpapi#function('http_put_stream(', 'string $url , resource $stream [, array $options [, array &$info ]])', 'string')
call phpapi#function('http_redirect(', '[ string $url [, array $params [, bool $session = false [, int $status = 0 ]]]])', 'bool')
call phpapi#function('http_request(', 'int $method , string $url [, string $body [, array $options [, array &$info ]]])', 'string')
call phpapi#function('http_request_body_encode(', 'array $fields , array $files)', 'string')
call phpapi#function('http_request_method_exists(', 'mixed $method)', 'int')
call phpapi#function('http_request_method_name(', 'int $method)', 'string')
call phpapi#function('http_request_method_register(', 'string $method)', 'int')
call phpapi#function('http_request_method_unregister(', 'mixed $method)', 'bool')
call phpapi#function('http_send_content_disposition(', 'string $filename [, bool $inline = false ])', 'bool')
call phpapi#function('http_send_content_type(', '[ string $content_type = "application/ x-octetstream" ])', 'bool')
call phpapi#function('http_send_data(', 'string $data)', 'bool')
call phpapi#function('http_send_file(', 'string $file)', 'bool')
call phpapi#function('http_send_last_modified(', '[ int $timestamp = time() ])', 'bool')
call phpapi#function('http_send_status(', 'int $status)', 'bool')
call phpapi#function('http_send_stream(', 'resource $stream)', 'bool')
call phpapi#function('http_support(', '[ int $feature = 0 ])', 'int')
call phpapi#function('http_throttle(', 'float $sec [, int $bytes = 40960 ])', 'void')
call phpapi#function('hw_api_attribute(', '[ string $name [, string $value ]])', 'HW_API_Attribute')
call phpapi#function('hw_api_content(', 'string $content , string $mimetype)', 'HW_API_Content')
call phpapi#function('hw_array2objrec(', 'array $object_array)', 'string')
call phpapi#function('hw_changeobject(', 'int $link , int $objid , array $attributes)', 'bool')
call phpapi#function('hw_children(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_childrenobj(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_close(', 'int $connection)', 'bool')
call phpapi#function('hw_connect(', 'string $host , int $port [, string $username ], string $password)', 'int')
call phpapi#function('hw_connection_info(', 'int $link)', 'void')
call phpapi#function('hw_cp(', 'int $connection , array $object_id_array , int $destination_id)', 'int')
call phpapi#function('hw_deleteobject(', 'int $connection , int $object_to_delete)', 'bool')
call phpapi#function('hw_docbyanchor(', 'int $connection , int $anchorID)', 'int')
call phpapi#function('hw_docbyanchorobj(', 'int $connection , int $anchorID)', 'string')
call phpapi#function('hw_document_attributes(', 'int $hw_document)', 'string')
call phpapi#function('hw_document_bodytag(', 'int $hw_document [, string $prefix ])', 'string')
call phpapi#function('hw_document_content(', 'int $hw_document)', 'string')
call phpapi#function('hw_document_setcontent(', 'int $hw_document , string $content)', 'bool')
call phpapi#function('hw_document_size(', 'int $hw_document)', 'int')
call phpapi#function('hw_dummy(', 'int $link , int $id , int $msgid)', 'string')
call phpapi#function('hw_edittext(', 'int $connection , int $hw_document)', 'bool')
call phpapi#function('hw_error(', 'int $connection)', 'int')
call phpapi#function('hw_errormsg(', 'int $connection)', 'string')
call phpapi#function('hw_free_document(', 'int $hw_document)', 'bool')
call phpapi#function('hw_getanchors(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getanchorsobj(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getandlock(', 'int $connection , int $objectID)', 'string')
call phpapi#function('hw_getchildcoll(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getchildcollobj(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getchilddoccoll(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getchilddoccollobj(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getobject(', 'int $connection , mixed $objectID [, string $query ])', 'mixed')
call phpapi#function('hw_getobjectbyquery(', 'int $connection , string $query , int $max_hits)', 'array')
call phpapi#function('hw_getobjectbyquerycoll(', 'int $connection , int $objectID , string $query , int $max_hits)', 'array')
call phpapi#function('hw_getobjectbyquerycollobj(', 'int $connection , int $objectID , string $query , int $max_hits)', 'array')
call phpapi#function('hw_getobjectbyqueryobj(', 'int $connection , string $query , int $max_hits)', 'array')
call phpapi#function('hw_getparents(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getparentsobj(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_getrellink(', 'int $link , int $rootid , int $sourceid , int $destid)', 'string')
call phpapi#function('hw_getremote(', 'int $connection , int $objectID)', 'int')
call phpapi#function('hw_getremotechildren(', 'int $connection , string $object_record)', 'mixed')
call phpapi#function('hw_getsrcbydestobj(', 'int $connection , int $objectID)', 'array')
call phpapi#function('hw_gettext(', 'int $connection , int $objectID [, mixed $rootID/prefix ])', 'int')
call phpapi#function('hw_getusername(', 'int $connection)', 'string')
call phpapi#function('hw_identify(', 'int $link , string $username , string $password)', 'string')
call phpapi#function('hw_incollections(', 'int $connection , array $object_id_array , array $collection_id_array , int $return_collections)', 'array')
call phpapi#function('hw_info(', 'int $connection)', 'string')
call phpapi#function('hw_inscoll(', 'int $connection , int $objectID , array $object_array)', 'int')
call phpapi#function('hw_insdoc(', 'resource $connection , int $parentID , string $object_record [, string $text ])', 'int')
call phpapi#function('hw_insertanchors(', 'int $hwdoc , array $anchorecs , array $dest [, array $urlprefixes ])', 'bool')
call phpapi#function('hw_insertdocument(', 'int $connection , int $parent_id , int $hw_document)', 'int')
call phpapi#function('hw_insertobject(', 'int $connection , string $object_rec , string $parameter)', 'int')
call phpapi#function('hw_mapid(', 'int $connection , int $server_id , int $object_id)', 'int')
call phpapi#function('hw_modifyobject(', 'int $connection , int $object_to_change , array $remove , array $add [, int $mode ])', 'bool')
call phpapi#function('hw_mv(', 'int $connection , array $object_id_array , int $source_id , int $destination_id)', 'int')
call phpapi#function('hw_new_document(', 'string $object_record , string $document_data , int $document_size)', 'int')
call phpapi#function('hw_objrec2array(', 'string $object_record [, array $format ])', 'array')
call phpapi#function('hw_output_document(', 'int $hw_document)', 'bool')
call phpapi#function('hw_pconnect(', 'string $host , int $port [, string $username ], string $password)', 'int')
call phpapi#function('hw_pipedocument(', 'int $connection , int $objectID [, array $url_prefixes ])', 'int')
call phpapi#function('hw_root(', 'void)', 'int')
call phpapi#function('hw_setlinkroot(', 'int $link , int $rootid)', 'int')
call phpapi#function('hw_stat(', 'int $link)', 'string')
call phpapi#function('hw_unlock(', 'int $connection , int $objectID)', 'bool')
call phpapi#function('hw_who(', 'int $connection)', 'array')
call phpapi#function('hwapi_hgcsp(', 'string $hostname [, int $port ])', 'HW_API')
call phpapi#function('hypot(', 'float $x , float $y)', 'float')
call phpapi#function('ibase_add_user(', 'resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]])', 'bool')
call phpapi#function('ibase_affected_rows(', '[ resource $link_identifier ])', 'int')
call phpapi#function('ibase_backup(', 'resource $service_handle , string $source_db , string $dest_file [, int $options = 0 [, bool $verbose = false ]])', 'mixed')
call phpapi#function('ibase_blob_add(', 'resource $blob_handle , string $data)', 'void')
call phpapi#function('ibase_blob_cancel(', 'resource $blob_handle)', 'bool')
call phpapi#function('ibase_blob_close(', 'resource $blob_handle)', 'mixed')
call phpapi#function('ibase_blob_create(', '[ resource $link_identifier = NULL ])', 'resource')
call phpapi#function('ibase_blob_echo(', 'string $blob_id)', 'bool')
call phpapi#function('ibase_blob_get(', 'resource $blob_handle , int $len)', 'string')
call phpapi#function('ibase_blob_import(', 'resource $link_identifier , resource $file_handle)', 'string')
call phpapi#function('ibase_blob_info(', 'resource $link_identifier , string $blob_id)', 'array')
call phpapi#function('ibase_blob_open(', 'resource $link_identifier , string $blob_id)', 'resource')
call phpapi#function('ibase_close(', '[ resource $connection_id = NULL ])', 'bool')
call phpapi#function('ibase_commit(', '[ resource $link_or_trans_identifier = NULL ])', 'bool')
call phpapi#function('ibase_commit_ret(', '[ resource $link_or_trans_identifier = NULL ])', 'bool')
call phpapi#function('ibase_connect(', '[ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]])', 'resource')
call phpapi#function('ibase_db_info(', 'resource $service_handle , string $db , int $action [, int $argument = 0 ])', 'string')
call phpapi#function('ibase_delete_user(', 'resource $service_handle , string $user_name)', 'bool')
call phpapi#function('ibase_drop_db(', '[ resource $connection = NULL ])', 'bool')
call phpapi#function('ibase_errcode(', 'void)', 'int')
call phpapi#function('ibase_errmsg(', 'void)', 'string')
call phpapi#function('ibase_execute(', 'resource $query [, mixed $bind_arg [, mixed $... ]])', 'resource')
call phpapi#function('ibase_fetch_assoc(', 'resource $result [, int $fetch_flag = 0 ])', 'array')
call phpapi#function('ibase_fetch_object(', 'resource $result_id [, int $fetch_flag = 0 ])', 'object')
call phpapi#function('ibase_fetch_row(', 'resource $result_identifier [, int $fetch_flag = 0 ])', 'array')
call phpapi#function('ibase_field_info(', 'resource $result , int $field_number)', 'array')
call phpapi#function('ibase_free_event_handler(', 'resource $event)', 'bool')
call phpapi#function('ibase_free_query(', 'resource $query)', 'bool')
call phpapi#function('ibase_free_result(', 'resource $result_identifier)', 'bool')
call phpapi#function('ibase_gen_id(', 'string $generator [, int $increment = 1 [, resource $link_identifier = NULL ]])', 'mixed')
call phpapi#function('ibase_maintain_db(', 'resource $service_handle , string $db , int $action [, int $argument = 0 ])', 'bool')
call phpapi#function('ibase_modify_user(', 'resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]])', 'bool')
call phpapi#function('ibase_name_result(', 'resource $result , string $name)', 'bool')
call phpapi#function('ibase_num_fields(', 'resource $result_id)', 'int')
call phpapi#function('ibase_num_params(', 'resource $query)', 'int')
call phpapi#function('ibase_param_info(', 'resource $query , int $param_number)', 'array')
call phpapi#function('ibase_pconnect(', '[ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]])', 'resource')
call phpapi#function('ibase_prepare(', 'string $query)', 'resource')
call phpapi#function('ibase_query(', '[ resource $link_identifier ], string $query [, int $bind_args ])', 'resource')
call phpapi#function('ibase_restore(', 'resource $service_handle , string $source_file , string $dest_db [, int $options = 0 [, bool $verbose = false ]])', 'mixed')
call phpapi#function('ibase_rollback(', '[ resource $link_or_trans_identifier = NULL ])', 'bool')
call phpapi#function('ibase_rollback_ret(', '[ resource $link_or_trans_identifier = NULL ])', 'bool')
call phpapi#function('ibase_server_info(', 'resource $service_handle , int $action)', 'string')
call phpapi#function('ibase_service_attach(', 'string $host , string $dba_username , string $dba_password)', 'resource')
call phpapi#function('ibase_service_detach(', 'resource $service_handle)', 'bool')
call phpapi#function('ibase_set_event_handler(', 'callback $event_handler , string $event_name1 [, string $event_name2 [, string $... ]])', 'resource')
call phpapi#function('ibase_timefmt(', 'string $format [, int $columntype = IBASE_TIMESTAMP ])', 'bool')
call phpapi#function('ibase_trans(', '[ int $trans_args [, resource $link_identifier ]])', 'resource')
call phpapi#function('ibase_wait_event(', 'string $event_name1 [, string $event_name2 [, string $... ]])', 'string')
call phpapi#function('iconv(', 'string $in_charset , string $out_charset , string $str)', 'string')
call phpapi#function('iconv_get_encoding(', '[ string $type = "all" ])', 'mixed')
call phpapi#function('iconv_mime_decode(', 'string $encoded_header [, int $mode = 0 [, string $charset = ini_get("iconv.internal_encoding") ]])', 'string')
call phpapi#function('iconv_mime_decode_headers(', 'string $encoded_headers [, int $mode = 0 [, string $charset = ini_get("iconv.internal_encoding") ]])', 'array')
call phpapi#function('iconv_mime_encode(', 'string $field_name , string $field_value [, array $preferences = NULL ])', 'string')
call phpapi#function('iconv_set_encoding(', 'string $type , string $charset)', 'bool')
call phpapi#function('iconv_strlen(', 'string $str [, string $charset = ini_get ("iconv.internal_encoding") ])', 'int')
call phpapi#function('iconv_strpos(', 'string $haystack , string $needle [, int $offset = 0 [, string $charset = ini_get("iconv.internal_encoding") ]])', 'int')
call phpapi#function('iconv_strrpos(', 'string $haystack , string $needle [, string $charset = ini_get("iconv.internal_encoding") ])', 'int')
call phpapi#function('iconv_substr(', 'string $str , int $offset [, int $length = iconv_strlen ($str, $charset) [, string $charset = ini_get("iconv.internal_encoding") ]])', 'string')
call phpapi#function('id3_get_frame_long_name(', 'string $frameId)', 'string')
call phpapi#function('id3_get_frame_short_name(', 'string $frameId)', 'string')
call phpapi#function('id3_get_genre_id(', 'string $genre)', 'int')
call phpapi#function('id3_get_genre_list(', 'void)', 'array')
call phpapi#function('id3_get_genre_name(', 'int $genre_id)', 'string')
call phpapi#function('id3_get_tag(', 'string $filename [, int $version = ID3_BEST ])', 'array')
call phpapi#function('id3_get_version(', 'string $filename)', 'int')
call phpapi#function('id3_remove_tag(', 'string $filename [, int $version = ID3_V1_0 ])', 'bool')
call phpapi#function('id3_set_tag(', 'string $filename , array $tag [, int $version = ID3_V1_0 ])', 'bool')
call phpapi#function('idate(', 'string $format [, int $timestamp = time() ])', 'int')
call phpapi#function('ifx_affected_rows(', 'resource $result_id)', 'int')
call phpapi#function('ifx_blobinfile_mode(', 'int $mode)', 'bool')
call phpapi#function('ifx_byteasvarchar(', 'int $mode)', 'bool')
call phpapi#function('ifx_close(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('ifx_connect(', '[ string $database [, string $userid [, string $password ]]])', 'resource')
call phpapi#function('ifx_copy_blob(', 'int $bid)', 'int')
call phpapi#function('ifx_create_blob(', 'int $type , int $mode , string $param)', 'int')
call phpapi#function('ifx_create_char(', 'string $param)', 'int')
call phpapi#function('ifx_do(', 'resource $result_id)', 'bool')
call phpapi#function('ifx_error(', '[ resource $link_identifier ])', 'string')
call phpapi#function('ifx_errormsg(', '[ int $errorcode ])', 'string')
call phpapi#function('ifx_fetch_row(', 'resource $result_id [, mixed $position ])', 'array')
call phpapi#function('ifx_fieldproperties(', 'resource $result_id)', 'array')
call phpapi#function('ifx_fieldtypes(', 'resource $result_id)', 'array')
call phpapi#function('ifx_free_blob(', 'int $bid)', 'bool')
call phpapi#function('ifx_free_char(', 'int $bid)', 'bool')
call phpapi#function('ifx_free_result(', 'resource $result_id)', 'bool')
call phpapi#function('ifx_get_blob(', 'int $bid)', 'string')
call phpapi#function('ifx_get_char(', 'int $bid)', 'string')
call phpapi#function('ifx_getsqlca(', 'resource $result_id)', 'array')
call phpapi#function('ifx_htmltbl_result(', 'resource $result_id [, string $html_table_options ])', 'int')
call phpapi#function('ifx_nullformat(', 'int $mode)', 'bool')
call phpapi#function('ifx_num_fields(', 'resource $result_id)', 'int')
call phpapi#function('ifx_num_rows(', 'resource $result_id)', 'int')
call phpapi#function('ifx_pconnect(', '[ string $database [, string $userid [, string $password ]]])', 'resource')
call phpapi#function('ifx_prepare(', 'string $query , resource $link_identifier [, int $cursor_def ], mixed $blobidarray)', 'resource')
call phpapi#function('ifx_query(', 'string $query , resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]])', 'resource')
call phpapi#function('ifx_textasvarchar(', 'int $mode)', 'bool')
call phpapi#function('ifx_update_blob(', 'int $bid , string $content)', 'bool')
call phpapi#function('ifx_update_char(', 'int $bid , string $content)', 'bool')
call phpapi#function('ifxus_close_slob(', 'int $bid)', 'bool')
call phpapi#function('ifxus_create_slob(', 'int $mode)', 'int')
call phpapi#function('ifxus_free_slob(', 'int $bid)', 'bool')
call phpapi#function('ifxus_open_slob(', 'int $bid , int $mode)', 'int')
call phpapi#function('ifxus_read_slob(', 'int $bid , int $nbytes)', 'string')
call phpapi#function('ifxus_seek_slob(', 'int $bid , int $mode , int $offset)', 'int')
call phpapi#function('ifxus_tell_slob(', 'int $bid)', 'int')
call phpapi#function('ifxus_write_slob(', 'int $bid , string $content)', 'int')
call phpapi#function('ignore_user_abort(', '[ string $value ])', 'int')
call phpapi#function('iis_add_server(', 'string $path , string $comment , string $server_ip , int $port , string $host_name , int $rights , int $start_server)', 'int')
call phpapi#function('iis_get_dir_security(', 'int $server_instance , string $virtual_path)', 'int')
call phpapi#function('iis_get_script_map(', 'int $server_instance , string $virtual_path , string $script_extension)', 'string')
call phpapi#function('iis_get_server_by_comment(', 'string $comment)', 'int')
call phpapi#function('iis_get_server_by_path(', 'string $path)', 'int')
call phpapi#function('iis_get_server_rights(', 'int $server_instance , string $virtual_path)', 'int')
call phpapi#function('iis_get_service_state(', 'string $service_id)', 'int')
call phpapi#function('iis_remove_server(', 'int $server_instance)', 'int')
call phpapi#function('iis_set_app_settings(', 'int $server_instance , string $virtual_path , string $application_scope)', 'int')
call phpapi#function('iis_set_dir_security(', 'int $server_instance , string $virtual_path , int $directory_flags)', 'int')
call phpapi#function('iis_set_script_map(', 'int $server_instance , string $virtual_path , string $script_extension , string $engine_path , int $allow_scripting)', 'int')
call phpapi#function('iis_set_server_rights(', 'int $server_instance , string $virtual_path , int $directory_flags)', 'int')
call phpapi#function('iis_start_server(', 'int $server_instance)', 'int')
call phpapi#function('iis_start_service(', 'string $service_id)', 'int')
call phpapi#function('iis_stop_server(', 'int $server_instance)', 'int')
call phpapi#function('iis_stop_service(', 'string $service_id)', 'int')
call phpapi#function('image_type_to_extension(', 'int $imagetype [, bool $include_dot = TRUE ])', 'string')
call phpapi#function('image_type_to_mime_type(', 'int $imagetype)', 'string')
call phpapi#function('image2wbmp(', 'resource $image [, string $filename [, int $threshold ]])', 'bool')
call phpapi#function('imagealphablending(', 'resource $image , bool $blendmode)', 'bool')
call phpapi#function('imageantialias(', 'resource $image , bool $enabled)', 'bool')
call phpapi#function('imagearc(', 'resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color)', 'bool')
call phpapi#function('imagechar(', 'resource $image , int $font , int $x , int $y , string $c , int $color)', 'bool')
call phpapi#function('imagecharup(', 'resource $image , int $font , int $x , int $y , string $c , int $color)', 'bool')
call phpapi#function('imagecolorallocate(', 'resource $image , int $red , int $green , int $blue)', 'int')
call phpapi#function('imagecolorallocatealpha(', 'resource $image , int $red , int $green , int $blue , int $alpha)', 'int')
call phpapi#function('imagecolorat(', 'resource $image , int $x , int $y)', 'int')
call phpapi#function('imagecolorclosest(', 'resource $image , int $red , int $green , int $blue)', 'int')
call phpapi#function('imagecolorclosestalpha(', 'resource $image , int $red , int $green , int $blue , int $alpha)', 'int')
call phpapi#function('imagecolorclosesthwb(', 'resource $image , int $red , int $green , int $blue)', 'int')
call phpapi#function('imagecolordeallocate(', 'resource $image , int $color)', 'bool')
call phpapi#function('imagecolorexact(', 'resource $image , int $red , int $green , int $blue)', 'int')
call phpapi#function('imagecolorexactalpha(', 'resource $image , int $red , int $green , int $blue , int $alpha)', 'int')
call phpapi#function('imagecolormatch(', 'resource $image1 , resource $image2)', 'bool')
call phpapi#function('imagecolorresolve(', 'resource $image , int $red , int $green , int $blue)', 'int')
call phpapi#function('imagecolorresolvealpha(', 'resource $image , int $red , int $green , int $blue , int $alpha)', 'int')
call phpapi#function('imagecolorset(', 'resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ])', 'void')
call phpapi#function('imagecolorsforindex(', 'resource $image , int $index)', 'array')
call phpapi#function('imagecolorstotal(', 'resource $image)', 'int')
call phpapi#function('imagecolortransparent(', 'resource $image [, int $color ])', 'int')
call phpapi#function('imageconvolution(', 'resource $image , array $matrix , float $div , float $offset)', 'bool')
call phpapi#function('imagecopy(', 'resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h)', 'bool')
call phpapi#function('imagecopymerge(', 'resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct)', 'bool')
call phpapi#function('imagecopymergegray(', 'resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct)', 'bool')
call phpapi#function('imagecopyresampled(', 'resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h)', 'bool')
call phpapi#function('imagecopyresized(', 'resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h)', 'bool')
call phpapi#function('imagecreate(', 'int $width , int $height)', 'resource')
call phpapi#function('imagecreatefromgd(', 'string $filename)', 'resource')
call phpapi#function('imagecreatefromgd2(', 'string $filename)', 'resource')
call phpapi#function('imagecreatefromgd2part(', 'string $filename , int $srcX , int $srcY , int $width , int $height)', 'resource')
call phpapi#function('imagecreatefromgif(', 'string $filename)', 'resource')
call phpapi#function('imagecreatefromjpeg(', 'string $filename)', 'resource')
call phpapi#function('imagecreatefrompng(', 'string $filename)', 'resource')
call phpapi#function('imagecreatefromstring(', 'string $data)', 'resource')
call phpapi#function('imagecreatefromwbmp(', 'string $filename)', 'resource')
call phpapi#function('imagecreatefromxbm(', 'string $filename)', 'resource')
call phpapi#function('imagecreatefromxpm(', 'string $filename)', 'resource')
call phpapi#function('imagecreatetruecolor(', 'int $width , int $height)', 'resource')
call phpapi#function('imagedashedline(', 'resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)', 'bool')
call phpapi#function('imagedestroy(', 'resource $image)', 'bool')
call phpapi#function('imageellipse(', 'resource $image , int $cx , int $cy , int $width , int $height , int $color)', 'bool')
call phpapi#function('imagefill(', 'resource $image , int $x , int $y , int $color)', 'bool')
call phpapi#function('imagefilledarc(', 'resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style)', 'bool')
call phpapi#function('imagefilledellipse(', 'resource $image , int $cx , int $cy , int $width , int $height , int $color)', 'bool')
call phpapi#function('imagefilledpolygon(', 'resource $image , array $points , int $num_points , int $color)', 'bool')
call phpapi#function('imagefilledrectangle(', 'resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)', 'bool')
call phpapi#function('imagefilltoborder(', 'resource $image , int $x , int $y , int $border , int $color)', 'bool')
call phpapi#function('imagefilter(', 'resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]])', 'bool')
call phpapi#function('imagefontheight(', 'int $font)', 'int')
call phpapi#function('imagefontwidth(', 'int $font)', 'int')
call phpapi#function('imageftbbox(', 'float $size , float $angle , string $fontfile , string $text [, array $extrainfo ])', 'array')
call phpapi#function('imagefttext(', 'resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ])', 'array')
call phpapi#function('imagegammacorrect(', 'resource $image , float $inputgamma , float $outputgamma)', 'bool')
call phpapi#function('imagegd(', 'resource $image [, string $filename ])', 'bool')
call phpapi#function('imagegd2(', 'resource $image [, string $filename [, int $chunk_size [, int $type = IMG_GD2_RAW ]]])', 'bool')
call phpapi#function('imagegif(', 'resource $image [, string $filename ])', 'bool')
call phpapi#function('imagegrabscreen(', 'void)', 'resource')
call phpapi#function('imagegrabwindow(', 'int $window_handle [, int $client_area = 0 ])', 'resource')
call phpapi#function('imageinterlace(', 'resource $image [, int $interlace = 0 ])', 'int')
call phpapi#function('imageistruecolor(', 'resource $image)', 'bool')
call phpapi#function('imagejpeg(', 'resource $image [, string $filename [, int $quality ]])', 'bool')
call phpapi#function('imagelayereffect(', 'resource $image , int $effect)', 'bool')
call phpapi#function('imageline(', 'resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)', 'bool')
call phpapi#function('imageloadfont(', 'string $file)', 'int')
call phpapi#function('imagepalettecopy(', 'resource $destination , resource $source)', 'void')
call phpapi#function('imagepng(', 'resource $image [, string $filename [, int $quality [, int $filters ]]])', 'bool')
call phpapi#function('imagepolygon(', 'resource $image , array $points , int $num_points , int $color)', 'bool')
call phpapi#function('imagepsbbox(', 'string $text , resource $font , int $size)', 'array')
call phpapi#function('imagepsencodefont(', 'resource $font_index , string $encodingfile)', 'bool')
call phpapi#function('imagepsextendfont(', 'resource $font_index , float $extend)', 'bool')
call phpapi#function('imagepsfreefont(', 'resource $font_index)', 'bool')
call phpapi#function('imagepsloadfont(', 'string $filename)', 'resource')
call phpapi#function('imagepsslantfont(', 'resource $font_index , float $slant)', 'bool')
call phpapi#function('imagepstext(', 'resource $image , string $text , resource $font_index , int $size , int $foreground , int $background , int $x , int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4 ]]]])', 'array')
call phpapi#function('imagerectangle(', 'resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color)', 'bool')
call phpapi#function('imagerotate(', 'resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ])', 'resource')
call phpapi#function('imagesavealpha(', 'resource $image , bool $saveflag)', 'bool')
call phpapi#function('imagesetbrush(', 'resource $image , resource $brush)', 'bool')
call phpapi#function('imagesetpixel(', 'resource $image , int $x , int $y , int $color)', 'bool')
call phpapi#function('imagesetstyle(', 'resource $image , array $style)', 'bool')
call phpapi#function('imagesetthickness(', 'resource $image , int $thickness)', 'bool')
call phpapi#function('imagesettile(', 'resource $image , resource $tile)', 'bool')
call phpapi#function('imagestring(', 'resource $image , int $font , int $x , int $y , string $string , int $color)', 'bool')
call phpapi#function('imagestringup(', 'resource $image , int $font , int $x , int $y , string $string , int $color)', 'bool')
call phpapi#function('imagesx(', 'resource $image)', 'int')
call phpapi#function('imagesy(', 'resource $image)', 'int')
call phpapi#function('imagetruecolortopalette(', 'resource $image , bool $dither , int $ncolors)', 'bool')
call phpapi#function('imagettfbbox(', 'float $size , float $angle , string $fontfile , string $text)', 'array')
call phpapi#function('imagettftext(', 'resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text)', 'array')
call phpapi#function('imagetypes(', 'void)', 'int')
call phpapi#function('imagewbmp(', 'resource $image [, string $filename [, int $foreground ]])', 'bool')
call phpapi#function('imagexbm(', 'resource $image , string $filename [, int $foreground ])', 'bool')
call phpapi#function('imap_8bit(', 'string $string)', 'string')
call phpapi#function('imap_alerts(', 'void)', 'array')
call phpapi#function('imap_append(', 'resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]])', 'bool')
call phpapi#function('imap_base64(', 'string $text)', 'string')
call phpapi#function('imap_binary(', 'string $string)', 'string')
call phpapi#function('imap_body(', 'resource $imap_stream , int $msg_number [, int $options = 0 ])', 'string')
call phpapi#function('imap_bodystruct(', 'resource $imap_stream , int $msg_number , string $section)', 'object')
call phpapi#function('imap_check(', 'resource $imap_stream)', 'object')
call phpapi#function('imap_clearflag_full(', 'resource $imap_stream , string $sequence , string $flag [, int $options = 0 ])', 'bool')
call phpapi#function('imap_close(', 'resource $imap_stream [, int $flag = 0 ])', 'bool')
call phpapi#function('imap_createmailbox(', 'resource $imap_stream , string $mailbox)', 'bool')
call phpapi#function('imap_delete(', 'resource $imap_stream , int $msg_number [, int $options = 0 ])', 'bool')
call phpapi#function('imap_deletemailbox(', 'resource $imap_stream , string $mailbox)', 'bool')
call phpapi#function('imap_errors(', 'void)', 'array')
call phpapi#function('imap_expunge(', 'resource $imap_stream)', 'bool')
call phpapi#function('imap_fetch_overview(', 'resource $imap_stream , string $sequence [, int $options = 0 ])', 'array')
call phpapi#function('imap_fetchbody(', 'resource $imap_stream , int $msg_number , string $section [, int $options = 0 ])', 'string')
call phpapi#function('imap_fetchheader(', 'resource $imap_stream , int $msg_number [, int $options = 0 ])', 'string')
call phpapi#function('imap_fetchmime(', 'resource $imap_stream , int $msg_number , string $section [, int $options = 0 ])', 'string')
call phpapi#function('imap_fetchstructure(', 'resource $imap_stream , int $msg_number [, int $options = 0 ])', 'object')
call phpapi#function('imap_gc(', 'resource $imap_stream , int $caches)', 'bool')
call phpapi#function('imap_get_quota(', 'resource $imap_stream , string $quota_root)', 'array')
call phpapi#function('imap_get_quotaroot(', 'resource $imap_stream , string $quota_root)', 'array')
call phpapi#function('imap_getacl(', 'resource $imap_stream , string $mailbox)', 'array')
call phpapi#function('imap_getmailboxes(', 'resource $imap_stream , string $ref , string $pattern)', 'array')
call phpapi#function('imap_getsubscribed(', 'resource $imap_stream , string $ref , string $pattern)', 'array')
call phpapi#function('imap_headerinfo(', 'resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]])', 'object')
call phpapi#function('imap_headers(', 'resource $imap_stream)', 'array')
call phpapi#function('imap_last_error(', 'void)', 'string')
call phpapi#function('imap_list(', 'resource $imap_stream , string $ref , string $pattern)', 'array')
call phpapi#function('imap_listscan(', 'resource $imap_stream , string $ref , string $pattern , string $content)', 'array')
call phpapi#function('imap_lsub(', 'resource $imap_stream , string $ref , string $pattern)', 'array')
call phpapi#function('imap_mail(', 'string $to , string $subject , string $message [, string $additional_headers = NULL [, string $cc = NULL [, string $bcc = NULL [, string $rpath = NULL ]]]])', 'bool')
call phpapi#function('imap_mail_compose(', 'array $envelope , array $body)', 'string')
call phpapi#function('imap_mail_copy(', 'resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ])', 'bool')
call phpapi#function('imap_mail_move(', 'resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ])', 'bool')
call phpapi#function('imap_mailboxmsginfo(', 'resource $imap_stream)', 'object')
call phpapi#function('imap_mime_header_decode(', 'string $text)', 'array')
call phpapi#function('imap_msgno(', 'resource $imap_stream , int $uid)', 'int')
call phpapi#function('imap_num_msg(', 'resource $imap_stream)', 'int')
call phpapi#function('imap_num_recent(', 'resource $imap_stream)', 'int')
call phpapi#function('imap_open(', 'string $mailbox , string $username , string $password [, int $options = NIL [, int $n_retries = 0 [, array $params = NULL ]]])', 'resource')
call phpapi#function('imap_ping(', 'resource $imap_stream)', 'bool')
call phpapi#function('imap_qprint(', 'string $string)', 'string')
call phpapi#function('imap_renamemailbox(', 'resource $imap_stream , string $old_mbox , string $new_mbox)', 'bool')
call phpapi#function('imap_reopen(', 'resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]])', 'bool')
call phpapi#function('imap_rfc822_parse_adrlist(', 'string $address , string $default_host)', 'array')
call phpapi#function('imap_rfc822_parse_headers(', 'string $headers [, string $defaulthost = "UNKNOWN" ])', 'object')
call phpapi#function('imap_rfc822_write_address(', 'string $mailbox , string $host , string $personal)', 'string')
call phpapi#function('imap_savebody(', 'resource $imap_stream , mixed $file , int $msg_number [, string $part_number = "" [, int $options = 0 ]])', 'bool')
call phpapi#function('imap_search(', 'resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NIL ]])', 'array')
call phpapi#function('imap_set_quota(', 'resource $imap_stream , string $quota_root , int $quota_limit)', 'bool')
call phpapi#function('imap_setacl(', 'resource $imap_stream , string $mailbox , string $id , string $rights)', 'bool')
call phpapi#function('imap_setflag_full(', 'resource $imap_stream , string $sequence , string $flag [, int $options = NIL ])', 'bool')
call phpapi#function('imap_sort(', 'resource $imap_stream , int $criteria , int $reverse [, int $options = 0 [, string $search_criteria = NULL [, string $charset = NIL ]]])', 'array')
call phpapi#function('imap_status(', 'resource $imap_stream , string $mailbox , int $options)', 'object')
call phpapi#function('imap_subscribe(', 'resource $imap_stream , string $mailbox)', 'bool')
call phpapi#function('imap_thread(', 'resource $imap_stream [, int $options = SE_FREE ])', 'array')
call phpapi#function('imap_timeout(', 'int $timeout_type [, int $timeout = -1 ])', 'mixed')
call phpapi#function('imap_uid(', 'resource $imap_stream , int $msg_number)', 'int')
call phpapi#function('imap_undelete(', 'resource $imap_stream , int $msg_number [, int $flags = 0 ])', 'bool')
call phpapi#function('imap_unsubscribe(', 'resource $imap_stream , string $mailbox)', 'bool')
call phpapi#function('imap_utf7_decode(', 'string $text)', 'string')
call phpapi#function('imap_utf7_encode(', 'string $data)', 'string')
call phpapi#function('imap_utf8(', 'string $mime_encoded_text)', 'string')
call phpapi#function('implode(', 'string $glue , array $pieces)', 'string')
call phpapi#function('import_request_variables(', 'string $types [, string $prefix ])', 'bool')
call phpapi#function('in_array(', 'mixed $needle , array $haystack [, bool $strict = FALSE ])', 'bool')
call phpapi#function('inclued_get_data(', 'void)', 'array')
call phpapi#function('inet_ntop(', 'string $in_addr)', 'string')
call phpapi#function('inet_pton(', 'string $address)', 'string')
call phpapi#function('ingres_autocommit(', 'resource $link)', 'bool')
call phpapi#function('ingres_autocommit_state(', 'resource $link)', 'bool')
call phpapi#function('ingres_charset(', 'resource $link)', 'string')
call phpapi#function('ingres_close(', 'resource $link)', 'bool')
call phpapi#function('ingres_commit(', 'resource $link)', 'bool')
call phpapi#function('ingres_connect(', '[ string $database [, string $username [, string $password [, array $options ]]]])', 'resource')
call phpapi#function('ingres_cursor(', 'resource $result)', 'string')
call phpapi#function('ingres_errno(', '[ resource $link ])', 'int')
call phpapi#function('ingres_error(', '[ resource $link ])', 'string')
call phpapi#function('ingres_errsqlstate(', '[ resource $link ])', 'string')
call phpapi#function('ingres_escape_string(', 'resource $link , string $source_string)', 'string')
call phpapi#function('ingres_execute(', 'resource $result [, array $params [, string $types ]])', 'bool')
call phpapi#function('ingres_fetch_array(', 'resource $result [, int $result_type ])', 'array')
call phpapi#function('ingres_fetch_assoc(', 'resource $result)', 'array')
call phpapi#function('ingres_fetch_object(', 'resource $result [, int $result_type ])', 'object')
call phpapi#function('ingres_fetch_proc_return(', 'resource $result)', 'int')
call phpapi#function('ingres_fetch_row(', 'resource $result)', 'array')
call phpapi#function('ingres_field_length(', 'resource $result , int $index)', 'int')
call phpapi#function('ingres_field_name(', 'resource $result , int $index)', 'string')
call phpapi#function('ingres_field_nullable(', 'resource $result , int $index)', 'bool')
call phpapi#function('ingres_field_precision(', 'resource $result , int $index)', 'int')
call phpapi#function('ingres_field_scale(', 'resource $result , int $index)', 'int')
call phpapi#function('ingres_field_type(', 'resource $result , int $index)', 'string')
call phpapi#function('ingres_free_result(', 'resource $result)', 'bool')
call phpapi#function('ingres_next_error(', '[ resource $link ])', 'bool')
call phpapi#function('ingres_num_fields(', 'resource $result)', 'int')
call phpapi#function('ingres_num_rows(', 'resource $result)', 'int')
call phpapi#function('ingres_pconnect(', '[ string $database [, string $username [, string $password [, array $options ]]]])', 'resource')
call phpapi#function('ingres_prepare(', 'resource $link , string $query)', 'mixed')
call phpapi#function('ingres_query(', 'resource $link , string $query [, array $params [, string $types ]])', 'mixed')
call phpapi#function('ingres_result_seek(', 'resource $result , int $position)', 'bool')
call phpapi#function('ingres_rollback(', 'resource $link)', 'bool')
call phpapi#function('ingres_set_environment(', 'resource $link , array $options)', 'bool')
call phpapi#function('ingres_unbuffered_query(', 'resource $link , string $query [, array $params [, string $types ]])', 'mixed')
call phpapi#function('ini_get(', 'string $varname)', 'string')
call phpapi#function('ini_get_all(', '[ string $extension [, bool $details = true ]])', 'array')
call phpapi#function('ini_restore(', 'string $varname)', 'void')
call phpapi#function('ini_set(', 'string $varname , string $newvalue)', 'string')
call phpapi#function('inotify_add_watch(', 'resource $inotify_instance , string $pathname , int $mask)', 'int')
call phpapi#function('inotify_init(', 'void)', 'resource')
call phpapi#function('inotify_queue_len(', 'resource $inotify_instance)', 'int')
call phpapi#function('inotify_read(', 'resource $inotify_instance)', 'array')
call phpapi#function('inotify_rm_watch(', 'resource $inotify_instance , int $watch_descriptor)', 'bool')
call phpapi#function('insert_before(', 'domelement $newnode , domelement $refnode)', 'domelement')
call phpapi#function('interface_exists(', 'string $interface_name [, bool $autoload = true ])', 'bool')
call phpapi#function('intl_error_name(', 'int $error_code)', 'string')
call phpapi#function('intl_get_error_code(', 'void)', 'int')
call phpapi#function('intl_get_error_message(', 'void)', 'string')
call phpapi#function('intl_is_failure(', 'int $error_code)', 'bool')
call phpapi#function('intval(', 'mixed $var [, int $base = 10 ])', 'int')
call phpapi#function('ip2long(', 'string $ip_address)', 'int')
call phpapi#function('iptcembed(', 'string $iptcdata , string $jpeg_file_name [, int $spool ])', 'mixed')
call phpapi#function('iptcparse(', 'string $iptcblock)', 'array')
call phpapi#function('is_a(', 'object $object , string $class_name)', 'bool')
call phpapi#function('is_array(', 'mixed $var)', 'bool')
call phpapi#function('is_blank_node(', 'void)', 'bool')
call phpapi#function('is_bool(', 'mixed $var)', 'bool')
call phpapi#function('is_callable(', 'callback $name [, bool $syntax_only = false [, string & $callable_name ]])', 'bool')
call phpapi#function('is_dir(', 'string $filename)', 'bool')
call phpapi#function('is_executable(', 'string $filename)', 'bool')
call phpapi#function('is_file(', 'string $filename)', 'bool')
call phpapi#function('is_finite(', 'float $val)', 'bool')
call phpapi#function('is_float(', 'mixed $var)', 'bool')
call phpapi#function('is_infinite(', 'float $val)', 'bool')
call phpapi#function('is_int(', 'mixed $var)', 'bool')
call phpapi#function('is_link(', 'string $filename)', 'bool')
call phpapi#function('is_nan(', 'float $val)', 'bool')
call phpapi#function('is_null(', 'mixed $var)', 'bool')
call phpapi#function('is_numeric(', 'mixed $var)', 'bool')
call phpapi#function('is_object(', 'mixed $var)', 'bool')
call phpapi#function('is_readable(', 'string $filename)', 'bool')
call phpapi#function('is_resource(', 'mixed $var)', 'bool')
call phpapi#function('is_scalar(', 'mixed $var)', 'bool')
call phpapi#function('is_soap_fault(', 'mixed $object)', 'bool')
call phpapi#function('is_string(', 'mixed $var)', 'bool')
call phpapi#function('is_subclass_of(', 'mixed $object , string $class_name)', 'bool')
call phpapi#function('is_uploaded_file(', 'string $filename)', 'bool')
call phpapi#function('is_writable(', 'string $filename)', 'bool')
call phpapi#function('isset(', 'mixed $var [, mixed $... ])', 'bool')
call phpapi#function('isSimilar(', 'ImagickPixel $color , float $fuzz)', 'bool')
call phpapi#function('iterator_apply(', 'Traversable $iterator , callback $function [, array $args ])', 'int')
call phpapi#function('iterator_count(', 'Traversable $iterator)', 'int')
call phpapi#function('iterator_to_array(', 'Traversable $iterator [, bool $use_keys = true ])', 'array')
call phpapi#function('java_last_exception_clear(', 'void)', 'void')
call phpapi#function('java_last_exception_get(', 'void)', 'object')
call phpapi#function('jddayofweek(', 'int $julianday [, int $mode = CAL_DOW_DAYNO ])', 'mixed')
call phpapi#function('jdmonthname(', 'int $julianday , int $mode)', 'string')
call phpapi#function('jdtofrench(', 'int $juliandaycount)', 'string')
call phpapi#function('jdtogregorian(', 'int $julianday)', 'string')
call phpapi#function('jdtojewish(', 'int $juliandaycount [, bool $hebrew = false [, int $fl = 0 ]])', 'string')
call phpapi#function('jdtojulian(', 'int $julianday)', 'string')
call phpapi#function('jdtounix(', 'int $jday)', 'int')
call phpapi#function('jewishtojd(', 'int $month , int $day , int $year)', 'int')
call phpapi#function('jpeg2wbmp(', 'string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold)', 'bool')
call phpapi#function('json_decode(', 'string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]])', 'mixed')
call phpapi#function('json_encode(', 'mixed $value [, int $options = 0 ])', 'string')
call phpapi#function('json_last_error(', 'void)', 'int')
call phpapi#function('judy_type(', 'Judy $array)', 'int')
call phpapi#function('judy_version(', 'void)', 'string')
call phpapi#function('juliantojd(', 'int $month , int $day , int $year)', 'int')
call phpapi#function('kadm5_chpass_principal(', 'resource $handle , string $principal , string $password)', 'bool')
call phpapi#function('kadm5_create_principal(', 'resource $handle , string $principal [, string $password [, array $options ]])', 'bool')
call phpapi#function('kadm5_delete_principal(', 'resource $handle , string $principal)', 'bool')
call phpapi#function('kadm5_destroy(', 'resource $handle)', 'bool')
call phpapi#function('kadm5_flush(', 'resource $handle)', 'bool')
call phpapi#function('kadm5_get_policies(', 'resource $handle)', 'array')
call phpapi#function('kadm5_get_principal(', 'resource $handle , string $principal)', 'array')
call phpapi#function('kadm5_get_principals(', 'resource $handle)', 'array')
call phpapi#function('kadm5_init_with_password(', 'string $admin_server , string $realm , string $principal , string $password)', 'resource')
call phpapi#function('kadm5_modify_principal(', 'resource $handle , string $principal , array $options)', 'bool')
call phpapi#function('key(', 'array &$array)', 'mixed')
call phpapi#function('krsort(', 'array &$array [, int $sort_flags = SORT_REGULAR ])', 'bool')
call phpapi#function('ksort(', 'array &$array [, int $sort_flags = SORT_REGULAR ])', 'bool')
call phpapi#function('last_child(', 'void)', 'domelement')
call phpapi#function('lcfirst(', 'string $str)', 'string')
call phpapi#function('lcg_value(', 'void)', 'float')
call phpapi#function('lchgrp(', 'string $filename , mixed $group)', 'bool')
call phpapi#function('lchown(', 'string $filename , mixed $user)', 'bool')
call phpapi#function('ldap_8859_to_t61(', 'string $value)', 'string')
call phpapi#function('ldap_add(', 'resource $link_identifier , string $dn , array $entry)', 'bool')
call phpapi#function('ldap_bind(', 'resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]])', 'bool')
call phpapi#function('ldap_compare(', 'resource $link_identifier , string $dn , string $attribute , string $value)', 'mixed')
call phpapi#function('ldap_connect(', '[ string $hostname = NULL [, int $port = 389 ]])', 'resource')
call phpapi#function('ldap_count_entries(', 'resource $link_identifier , resource $result_identifier)', 'int')
call phpapi#function('ldap_delete(', 'resource $link_identifier , string $dn)', 'bool')
call phpapi#function('ldap_dn2ufn(', 'string $dn)', 'string')
call phpapi#function('ldap_err2str(', 'int $errno)', 'string')
call phpapi#function('ldap_errno(', 'resource $link_identifier)', 'int')
call phpapi#function('ldap_error(', 'resource $link_identifier)', 'string')
call phpapi#function('ldap_explode_dn(', 'string $dn , int $with_attrib)', 'array')
call phpapi#function('ldap_first_attribute(', 'resource $link_identifier , resource $result_entry_identifier)', 'string')
call phpapi#function('ldap_first_entry(', 'resource $link_identifier , resource $result_identifier)', 'resource')
call phpapi#function('ldap_first_reference(', 'resource $link , resource $result)', 'resource')
call phpapi#function('ldap_free_result(', 'resource $result_identifier)', 'bool')
call phpapi#function('ldap_get_attributes(', 'resource $link_identifier , resource $result_entry_identifier)', 'array')
call phpapi#function('ldap_get_dn(', 'resource $link_identifier , resource $result_entry_identifier)', 'string')
call phpapi#function('ldap_get_entries(', 'resource $link_identifier , resource $result_identifier)', 'array')
call phpapi#function('ldap_get_option(', 'resource $link_identifier , int $option , mixed &$retval)', 'bool')
call phpapi#function('ldap_get_values(', 'resource $link_identifier , resource $result_entry_identifier , string $attribute)', 'array')
call phpapi#function('ldap_get_values_len(', 'resource $link_identifier , resource $result_entry_identifier , string $attribute)', 'array')
call phpapi#function('ldap_list(', 'resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]])', 'resource')
call phpapi#function('ldap_mod_add(', 'resource $link_identifier , string $dn , array $entry)', 'bool')
call phpapi#function('ldap_mod_del(', 'resource $link_identifier , string $dn , array $entry)', 'bool')
call phpapi#function('ldap_mod_replace(', 'resource $link_identifier , string $dn , array $entry)', 'bool')
call phpapi#function('ldap_modify(', 'resource $link_identifier , string $dn , array $entry)', 'bool')
call phpapi#function('ldap_next_attribute(', 'resource $link_identifier , resource $result_entry_identifier)', 'string')
call phpapi#function('ldap_next_entry(', 'resource $link_identifier , resource $result_entry_identifier)', 'resource')
call phpapi#function('ldap_next_reference(', 'resource $link , resource $entry)', 'resource')
call phpapi#function('ldap_parse_reference(', 'resource $link , resource $entry , array & $referrals)', 'bool')
call phpapi#function('ldap_parse_result(', 'resource $link , resource $result , int &$errcode [, string &$matcheddn [, string &$errmsg [, array &$referrals ]]])', 'bool')
call phpapi#function('ldap_read(', 'resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]])', 'resource')
call phpapi#function('ldap_rename(', 'resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn)', 'bool')
call phpapi#function('ldap_sasl_bind(', 'resource $link [, string $binddn = NULL [, string $password = NULL [, string $sasl_mech = NULL [, string $sasl_realm = NULL [, string $sasl_authc_id = NULL [, string $sasl_authz_id = NULL [, string $props = NULL ]]]]]]])', 'bool')
call phpapi#function('ldap_search(', 'resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]])', 'resource')
call phpapi#function('ldap_set_option(', 'resource $link_identifier , int $option , mixed $newval)', 'bool')
call phpapi#function('ldap_set_rebind_proc(', 'resource $link , callback $callback)', 'bool')
call phpapi#function('ldap_sort(', 'resource $link , resource $result , string $sortfilter)', 'bool')
call phpapi#function('ldap_start_tls(', 'resource $link)', 'bool')
call phpapi#function('ldap_t61_to_8859(', 'string $value)', 'string')
call phpapi#function('ldap_unbind(', 'resource $link_identifier)', 'bool')
call phpapi#function('levenshtein(', 'string $str1 , string $str2)', 'int')
call phpapi#function('libxml_clear_errors(', 'void)', 'void')
call phpapi#function('libxml_disable_entity_loader(', '[ bool $disable = true ])', 'bool')
call phpapi#function('libxml_get_errors(', 'void)', 'array')
call phpapi#function('libxml_get_last_error(', 'void)', 'LibXMLError')
call phpapi#function('libxml_set_streams_context(', 'resource $streams_context)', 'void')
call phpapi#function('libxml_use_internal_errors(', '[ bool $use_errors = false ])', 'bool')
call phpapi#function('link(', 'string $target , string $link)', 'bool')
call phpapi#function('linkinfo(', 'string $path)', 'int')
call phpapi#function('list(', 'mixed $varname [, mixed $... ])', 'array')
call phpapi#function('localeconv(', 'void)', 'array')
call phpapi#function('localtime(', '[ int $timestamp = time() [, bool $is_associative = false ]])', 'array')
call phpapi#function('log(', 'float $arg [, float $base = M_E ])', 'float')
call phpapi#function('log10(', 'float $arg)', 'float')
call phpapi#function('log1p(', 'float $number)', 'float')
call phpapi#function('long2ip(', 'string $proper_address)', 'string')
call phpapi#function('lstat(', 'string $filename)', 'array')
call phpapi#function('ltrim(', 'string $str [, string $charlist ])', 'string')
call phpapi#function('lzf_compress(', 'string $data)', 'string')
call phpapi#function('lzf_decompress(', 'string $data)', 'string')
call phpapi#function('lzf_optimized_for(', 'void)', 'int')
call phpapi#function('m_checkstatus(', 'resource $conn , int $identifier)', 'int')
call phpapi#function('m_completeauthorizations(', 'resource $conn , int &$array)', 'int')
call phpapi#function('m_connect(', 'resource $conn)', 'int')
call phpapi#function('m_connectionerror(', 'resource $conn)', 'string')
call phpapi#function('m_deletetrans(', 'resource $conn , int $identifier)', 'bool')
call phpapi#function('m_destroyconn(', 'resource $conn)', 'bool')
call phpapi#function('m_destroyengine(', 'void)', 'void')
call phpapi#function('m_getcell(', 'resource $conn , int $identifier , string $column , int $row)', 'string')
call phpapi#function('m_getcellbynum(', 'resource $conn , int $identifier , int $column , int $row)', 'string')
call phpapi#function('m_getcommadelimited(', 'resource $conn , int $identifier)', 'string')
call phpapi#function('m_getheader(', 'resource $conn , int $identifier , int $column_num)', 'string')
call phpapi#function('m_initconn(', 'void)', 'resource')
call phpapi#function('m_initengine(', 'string $location)', 'int')
call phpapi#function('m_iscommadelimited(', 'resource $conn , int $identifier)', 'int')
call phpapi#function('m_maxconntimeout(', 'resource $conn , int $secs)', 'bool')
call phpapi#function('m_monitor(', 'resource $conn)', 'int')
call phpapi#function('m_numcolumns(', 'resource $conn , int $identifier)', 'int')
call phpapi#function('m_numrows(', 'resource $conn , int $identifier)', 'int')
call phpapi#function('m_parsecommadelimited(', 'resource $conn , int $identifier)', 'int')
call phpapi#function('m_responsekeys(', 'resource $conn , int $identifier)', 'array')
call phpapi#function('m_responseparam(', 'resource $conn , int $identifier , string $key)', 'string')
call phpapi#function('m_returnstatus(', 'resource $conn , int $identifier)', 'int')
call phpapi#function('m_setblocking(', 'resource $conn , int $tf)', 'int')
call phpapi#function('m_setdropfile(', 'resource $conn , string $directory)', 'int')
call phpapi#function('m_setip(', 'resource $conn , string $host , int $port)', 'int')
call phpapi#function('m_setssl(', 'resource $conn , string $host , int $port)', 'int')
call phpapi#function('m_setssl_cafile(', 'resource $conn , string $cafile)', 'int')
call phpapi#function('m_setssl_files(', 'resource $conn , string $sslkeyfile , string $sslcertfile)', 'int')
call phpapi#function('m_settimeout(', 'resource $conn , int $seconds)', 'int')
call phpapi#function('m_sslcert_gen_hash(', 'string $filename)', 'string')
call phpapi#function('m_transactionssent(', 'resource $conn)', 'int')
call phpapi#function('m_transinqueue(', 'resource $conn)', 'int')
call phpapi#function('m_transkeyval(', 'resource $conn , int $identifier , string $key , string $value)', 'int')
call phpapi#function('m_transnew(', 'resource $conn)', 'int')
call phpapi#function('m_transsend(', 'resource $conn , int $identifier)', 'int')
call phpapi#function('m_uwait(', 'int $microsecs)', 'int')
call phpapi#function('m_validateidentifier(', 'resource $conn , int $tf)', 'int')
call phpapi#function('m_verifyconnection(', 'resource $conn , int $tf)', 'bool')
call phpapi#function('m_verifysslcert(', 'resource $conn , int $tf)', 'bool')
call phpapi#function('mail(', 'string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]])', 'bool')
call phpapi#function('mailparse_determine_best_xfer_encoding(', 'resource $fp)', 'string')
call phpapi#function('mailparse_msg_create(', 'void)', 'resource')
call phpapi#function('mailparse_msg_extract_part(', 'resource $mimemail , string $msgbody [, callback $callbackfunc ])', 'void')
call phpapi#function('mailparse_msg_extract_part_file(', 'resource $mimemail , mixed $filename [, callback $callbackfunc ])', 'string')
call phpapi#function('mailparse_msg_extract_whole_part_file(', 'resource $mimemail , string $filename [, callback $callbackfunc ])', 'string')
call phpapi#function('mailparse_msg_free(', 'resource $mimemail)', 'bool')
call phpapi#function('mailparse_msg_get_part(', 'resource $mimemail , string $mimesection)', 'resource')
call phpapi#function('mailparse_msg_get_part_data(', 'resource $mimemail)', 'array')
call phpapi#function('mailparse_msg_get_structure(', 'resource $mimemail)', 'array')
call phpapi#function('mailparse_msg_parse(', 'resource $mimemail , string $data)', 'bool')
call phpapi#function('mailparse_msg_parse_file(', 'string $filename)', 'resource')
call phpapi#function('mailparse_rfc822_parse_addresses(', 'string $addresses)', 'array')
call phpapi#function('mailparse_stream_encode(', 'resource $sourcefp , resource $destfp , string $encoding)', 'bool')
call phpapi#function('mailparse_uudecode_all(', 'resource $fp)', 'array')
call phpapi#function('max(', 'array $values)', 'mixed')
call phpapi#function('maxdb_connect_errno(', 'void)', 'int')
call phpapi#function('maxdb_connect_error(', 'void)', 'string')
call phpapi#function('maxdb_debug(', 'string $debug)', 'void')
call phpapi#function('maxdb_disable_rpl_parse(', 'resource $link)', 'bool')
call phpapi#function('maxdb_dump_debug_info(', 'resource $link)', 'bool')
call phpapi#function('maxdb_embedded_connect(', '[ string $dbname ])', 'resource')
call phpapi#function('maxdb_enable_reads_from_master(', 'resource $link)', 'bool')
call phpapi#function('maxdb_enable_rpl_parse(', 'resource $link)', 'bool')
call phpapi#function('maxdb_get_client_info(', 'void)', 'string')
call phpapi#function('maxdb_get_client_version(', 'void)', 'int')
call phpapi#function('maxdb_init(', 'void)', 'resource')
call phpapi#function('maxdb_master_query(', 'resource $link , string $query)', 'bool')
call phpapi#function('maxdb_more_results(', 'resource $link)', 'bool')
call phpapi#function('maxdb_next_result(', 'resource $link)', 'bool')
call phpapi#function('maxdb_report(', 'int $flags)', 'bool')
call phpapi#function('maxdb_rpl_parse_enabled(', 'resource $link)', 'int')
call phpapi#function('maxdb_rpl_probe(', 'resource $link)', 'bool')
call phpapi#function('maxdb_select_db(', 'resource $link , string $dbname)', 'bool')
call phpapi#function('maxdb_server_end(', 'void)', 'void')
call phpapi#function('maxdb_server_init(', '[ array $server [, array $groups ]])', 'bool')
call phpapi#function('maxdb_stmt_sqlstate(', 'resource $stmt)', 'string')
call phpapi#function('maxdb_thread_safe(', 'void)', 'bool')
call phpapi#function('mb_check_encoding(', '[ string $var = NULL [, string $encoding = mb_internal_encoding() ]])', 'bool')
call phpapi#function('mb_convert_case(', 'string $str , int $mode = MB_CASE_UPPER [, string $encoding = mb_internal_encoding() ])', 'string')
call phpapi#function('mb_convert_encoding(', 'string $str , string $to_encoding [, mixed $from_encoding ])', 'string')
call phpapi#function('mb_convert_kana(', 'string $str [, string $option = "KV" [, string $encoding ]])', 'string')
call phpapi#function('mb_convert_variables(', 'string $to_encoding , mixed $from_encoding , mixed &$vars [, mixed &$... ])', 'string')
call phpapi#function('mb_decode_mimeheader(', 'string $str)', 'string')
call phpapi#function('mb_decode_numericentity(', 'string $str , array $convmap , string $encoding)', 'string')
call phpapi#function('mb_detect_encoding(', 'string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false ]])', 'string')
call phpapi#function('mb_detect_order(', '[ mixed $encoding_list ])', 'mixed')
call phpapi#function('mb_encode_mimeheader(', 'string $str [, string $charset [, string $transfer_encoding [, string $linefeed = "\r\n" [, int $indent = 0 ]]]])', 'string')
call phpapi#function('mb_encode_numericentity(', 'string $str , array $convmap , string $encoding)', 'string')
call phpapi#function('mb_encoding_aliases(', 'string $encoding)', 'array')
call phpapi#function('mb_ereg(', 'string $pattern , string $string [, array $regs ])', 'int')
call phpapi#function('mb_ereg_match(', 'string $pattern , string $string [, string $option = "msr" ])', 'bool')
call phpapi#function('mb_ereg_replace(', 'string $pattern , string $replacement , string $string [, string $option = "msr" ])', 'string')
call phpapi#function('mb_ereg_search(', '[ string $pattern [, string $option = "ms" ]])', 'bool')
call phpapi#function('mb_ereg_search_getpos(', 'void)', 'int')
call phpapi#function('mb_ereg_search_getregs(', 'void)', 'array')
call phpapi#function('mb_ereg_search_init(', 'string $string [, string $pattern [, string $option = "msr" ]])', 'bool')
call phpapi#function('mb_ereg_search_pos(', '[ string $pattern [, string $option = "ms" ]])', 'array')
call phpapi#function('mb_ereg_search_regs(', '[ string $pattern [, string $option = "ms" ]])', 'array')
call phpapi#function('mb_ereg_search_setpos(', 'int $position)', 'bool')
call phpapi#function('mb_eregi(', 'string $pattern , string $string [, array $regs ])', 'int')
call phpapi#function('mb_eregi_replace(', 'string $pattern , string $replace , string $string [, string $option = "msri" ])', 'string')
call phpapi#function('mb_get_info(', '[ string $type = "all" ])', 'mixed')
call phpapi#function('mb_http_input(', '[ string $type = "" ])', 'mixed')
call phpapi#function('mb_http_output(', '[ string $encoding ])', 'mixed')
call phpapi#function('mb_internal_encoding(', '[ string $encoding = mb_internal_encoding() ])', 'mixed')
call phpapi#function('mb_language(', '[ string $language ])', 'mixed')
call phpapi#function('mb_list_encodings(', 'void)', 'array')
call phpapi#function('mb_output_handler(', 'string $contents , int $status)', 'string')
call phpapi#function('mb_parse_str(', 'string $encoded_string [, array &$result ])', 'bool')
call phpapi#function('mb_preferred_mime_name(', 'string $encoding)', 'string')
call phpapi#function('mb_regex_encoding(', '[ string $encoding ])', 'mixed')
call phpapi#function('mb_regex_set_options(', '[ string $options = "msr" ])', 'string')
call phpapi#function('mb_send_mail(', 'string $to , string $subject , string $message [, string $additional_headers = NULL [, string $additional_parameter = NULL ]])', 'bool')
call phpapi#function('mb_split(', 'string $pattern , string $string [, int $limit = -1 ])', 'array')
call phpapi#function('mb_strcut(', 'string $str , int $start [, int $length [, string $encoding ]])', 'string')
call phpapi#function('mb_strimwidth(', 'string $str , int $start , int $width [, string $trimmarker [, string $encoding ]])', 'string')
call phpapi#function('mb_stripos(', 'string $haystack , string $needle [, int $offset [, string $encoding ]])', 'int')
call phpapi#function('mb_stristr(', 'string $haystack , string $needle [, bool $part = false [, string $encoding ]])', 'string')
call phpapi#function('mb_strlen(', 'string $str [, string $encoding ])', 'int')
call phpapi#function('mb_strpos(', 'string $haystack , string $needle [, int $offset = 0 [, string $encoding ]])', 'int')
call phpapi#function('mb_strrchr(', 'string $haystack , string $needle [, bool $part = false [, string $encoding ]])', 'string')
call phpapi#function('mb_strrichr(', 'string $haystack , string $needle [, bool $part = false [, string $encoding ]])', 'string')
call phpapi#function('mb_strripos(', 'string $haystack , string $needle [, int $offset = 0 [, string $encoding ]])', 'int')
call phpapi#function('mb_strrpos(', 'string $haystack , string $needle [, int $offset = 0 [, string $encoding ]])', 'int')
call phpapi#function('mb_strstr(', 'string $haystack , string $needle [, bool $part = false [, string $encoding ]])', 'string')
call phpapi#function('mb_strtolower(', 'string $str [, string $encoding = mb_internal_encoding() ])', 'string')
call phpapi#function('mb_strtoupper(', 'string $str [, string $encoding = mb_internal_encoding() ])', 'string')
call phpapi#function('mb_strwidth(', 'string $str [, string $encoding ])', 'int')
call phpapi#function('mb_substitute_character(', '[ mixed $substrchar ])', 'mixed')
call phpapi#function('mb_substr(', 'string $str , int $start [, int $length [, string $encoding ]])', 'string')
call phpapi#function('mb_substr_count(', 'string $haystack , string $needle [, string $encoding ])', 'int')
call phpapi#function('mcrypt_cbc(', 'int $cipher , string $key , string $data , int $mode [, string $iv ])', 'string')
call phpapi#function('mcrypt_cfb(', 'int $cipher , string $key , string $data , int $mode , string $iv)', 'string')
call phpapi#function('mcrypt_create_iv(', 'int $size [, int $source = MCRYPT_DEV_RANDOM ])', 'string')
call phpapi#function('mcrypt_decrypt(', 'string $cipher , string $key , string $data , string $mode [, string $iv ])', 'string')
call phpapi#function('mcrypt_ecb(', 'int $cipher , string $key , string $data , int $mode)', 'string')
call phpapi#function('mcrypt_enc_get_algorithms_name(', 'resource $td)', 'string')
call phpapi#function('mcrypt_enc_get_block_size(', 'resource $td)', 'int')
call phpapi#function('mcrypt_enc_get_iv_size(', 'resource $td)', 'int')
call phpapi#function('mcrypt_enc_get_key_size(', 'resource $td)', 'int')
call phpapi#function('mcrypt_enc_get_modes_name(', 'resource $td)', 'string')
call phpapi#function('mcrypt_enc_get_supported_key_sizes(', 'resource $td)', 'array')
call phpapi#function('mcrypt_enc_is_block_algorithm(', 'resource $td)', 'bool')
call phpapi#function('mcrypt_enc_is_block_algorithm_mode(', 'resource $td)', 'bool')
call phpapi#function('mcrypt_enc_is_block_mode(', 'resource $td)', 'bool')
call phpapi#function('mcrypt_enc_self_test(', 'resource $td)', 'int')
call phpapi#function('mcrypt_encrypt(', 'string $cipher , string $key , string $data , string $mode [, string $iv ])', 'string')
call phpapi#function('mcrypt_generic(', 'resource $td , string $data)', 'string')
call phpapi#function('mcrypt_generic_deinit(', 'resource $td)', 'bool')
call phpapi#function('mcrypt_generic_end(', 'resource $td)', 'bool')
call phpapi#function('mcrypt_generic_init(', 'resource $td , string $key , string $iv)', 'int')
call phpapi#function('mcrypt_get_block_size(', 'int $cipher)', 'int')
call phpapi#function('mcrypt_get_cipher_name(', 'int $cipher)', 'string')
call phpapi#function('mcrypt_get_iv_size(', 'string $cipher , string $mode)', 'int')
call phpapi#function('mcrypt_get_key_size(', 'int $cipher)', 'int')
call phpapi#function('mcrypt_list_algorithms(', '[ string $lib_dir = ini_get ("mcrypt.algorithms_dir") ])', 'array')
call phpapi#function('mcrypt_list_modes(', '[ string $lib_dir = ini_get("mcrypt.modes_dir") ])', 'array')
call phpapi#function('mcrypt_module_close(', 'resource $td)', 'bool')
call phpapi#function('mcrypt_module_get_algo_block_size(', 'string $algorithm [, string $lib_dir ])', 'int')
call phpapi#function('mcrypt_module_get_algo_key_size(', 'string $algorithm [, string $lib_dir ])', 'int')
call phpapi#function('mcrypt_module_get_supported_key_sizes(', 'string $algorithm [, string $lib_dir ])', 'array')
call phpapi#function('mcrypt_module_is_block_algorithm(', 'string $algorithm [, string $lib_dir ])', 'bool')
call phpapi#function('mcrypt_module_is_block_algorithm_mode(', 'string $mode [, string $lib_dir ])', 'bool')
call phpapi#function('mcrypt_module_is_block_mode(', 'string $mode [, string $lib_dir ])', 'bool')
call phpapi#function('mcrypt_module_open(', 'string $algorithm , string $algorithm_directory , string $mode , string $mode_directory)', 'resource')
call phpapi#function('mcrypt_module_self_test(', 'string $algorithm [, string $lib_dir ])', 'bool')
call phpapi#function('mcrypt_ofb(', 'int $cipher , string $key , string $data , int $mode , string $iv)', 'string')
call phpapi#function('md5(', 'string $str [, bool $raw_output = false ])', 'string')
call phpapi#function('md5_file(', 'string $filename [, bool $raw_output = false ])', 'string')
call phpapi#function('mdecrypt_generic(', 'resource $td , string $data)', 'string')
call phpapi#function('memcache_debug(', 'bool $on_off)', 'bool')
call phpapi#function('memory_get_peak_usage(', '[ bool $real_usage = false ])', 'int')
call phpapi#function('memory_get_usage(', '[ bool $real_usage = false ])', 'int')
call phpapi#function('metaphone(', 'string $str [, int $phonemes = 0 ])', 'string')
call phpapi#function('method_exists(', 'mixed $object , string $method_name)', 'bool')
call phpapi#function('mhash(', 'int $hash , string $data [, string $key ])', 'string')
call phpapi#function('mhash_count(', 'void)', 'int')
call phpapi#function('mhash_get_block_size(', 'int $hash)', 'int')
call phpapi#function('mhash_get_hash_name(', 'int $hash)', 'string')
call phpapi#function('mhash_keygen_s2k(', 'int $hash , string $password , string $salt , int $bytes)', 'string')
call phpapi#function('microtime(', '[ bool $get_as_float = false ])', 'mixed')
call phpapi#function('mime_content_type(', 'string $filename)', 'string')
call phpapi#function('min(', 'array $values)', 'mixed')
call phpapi#function('ming_keypress(', 'string $char)', 'int')
call phpapi#function('ming_setcubicthreshold(', 'int $threshold)', 'void')
call phpapi#function('ming_setscale(', 'float $scale)', 'void')
call phpapi#function('ming_setswfcompression(', 'int $level)', 'void')
call phpapi#function('ming_useconstants(', 'int $use)', 'void')
call phpapi#function('ming_useswfversion(', 'int $version)', 'void')
call phpapi#function('mkdir(', 'string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context ]]])', 'bool')
call phpapi#function('mktime(', '[ int $hour = date("H") [, int $minute = date("i") [, int $second = date("s") [, int $month = date("n") [, int $day = date("j") [, int $year = date ("Y") [, int $is_dst = -1 ]]]]]]])', 'int')
call phpapi#function('money_format(', 'string $format , float $number)', 'string')
call phpapi#function('move_uploaded_file(', 'string $filename , string $destination)', 'bool')
call phpapi#function('mqseries_back(', 'resource $hconn , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_begin(', 'resource $hconn , array $beginOptions , resource & $compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_close(', 'resource $hconn , resource $hobj , int $options , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_cmit(', 'resource $hconn , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_conn(', 'string $qManagerName , resource &$hconn , resource & $compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_connx(', 'string $qManagerName , array &$connOptions , resource & $hconn , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_disc(', 'resource $hconn , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_get(', 'resource $hConn , resource $hObj , array &$md , array &$gmo , int &$bufferLength , string &$msg , int &$data_length , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_inq(', 'resource $hconn , resource $hobj , int $selectorCount , array $selectors , int $intAttrCount , resource &$intAttr , int $charAttrLength , resource &$charAttr , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_open(', 'resource $hconn , array &$objDesc , int $option , resource &$hobj , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_put(', 'resource $hConn , resource $hObj , array &$md , array &$pmo , string $message , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_put1(', 'resource $hconn , resource &$objDesc , resource &$msgDesc , resource &$pmo , string $buffer , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_set(', 'resource $hconn , resource $hobj , int $selectorcount , array $selectors , int $intattrcount , array $intattrs , int $charattrlength , array $charattrs , resource &$compCode , resource &$reason)', 'void')
call phpapi#function('mqseries_strerror(', 'int $reason)', 'string')
call phpapi#function('msession_connect(', 'string $host , string $port)', 'bool')
call phpapi#function('msession_count(', 'void)', 'int')
call phpapi#function('msession_create(', 'string $session [, string $classname [, string $data ]])', 'bool')
call phpapi#function('msession_destroy(', 'string $name)', 'bool')
call phpapi#function('msession_disconnect(', 'void)', 'void')
call phpapi#function('msession_find(', 'string $name , string $value)', 'array')
call phpapi#function('msession_get(', 'string $session , string $name , string $value)', 'string')
call phpapi#function('msession_get_array(', 'string $session)', 'array')
call phpapi#function('msession_get_data(', 'string $session)', 'string')
call phpapi#function('msession_inc(', 'string $session , string $name)', 'string')
call phpapi#function('msession_list(', 'void)', 'array')
call phpapi#function('msession_listvar(', 'string $name)', 'array')
call phpapi#function('msession_lock(', 'string $name)', 'int')
call phpapi#function('msession_plugin(', 'string $session , string $val [, string $param ])', 'string')
call phpapi#function('msession_randstr(', 'int $param)', 'string')
call phpapi#function('msession_set(', 'string $session , string $name , string $value)', 'bool')
call phpapi#function('msession_set_array(', 'string $session , array $tuples)', 'void')
call phpapi#function('msession_set_data(', 'string $session , string $value)', 'bool')
call phpapi#function('msession_timeout(', 'string $session [, int $param ])', 'int')
call phpapi#function('msession_uniq(', 'int $param [, string $classname [, string $data ]])', 'string')
call phpapi#function('msession_unlock(', 'string $session , int $key)', 'int')
call phpapi#function('msg_get_queue(', 'int $key [, int $perms = 0666 ])', 'resource')
call phpapi#function('msg_queue_exists(', 'int $key)', 'bool')
call phpapi#function('msg_receive(', 'resource $queue , int $desiredmsgtype , int &$msgtype , int $maxsize , mixed &$message [, bool $unserialize = true [, int $flags = 0 [, int &$errorcode ]]])', 'bool')
call phpapi#function('msg_remove_queue(', 'resource $queue)', 'bool')
call phpapi#function('msg_send(', 'resource $queue , int $msgtype , mixed $message [, bool $serialize = true [, bool $blocking = true [, int &$errorcode ]]])', 'bool')
call phpapi#function('msg_set_queue(', 'resource $queue , array $data)', 'bool')
call phpapi#function('msg_stat_queue(', 'resource $queue)', 'array')
call phpapi#function('msql_affected_rows(', 'resource $result)', 'int')
call phpapi#function('msql_close(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('msql_connect(', '[ string $hostname ])', 'resource')
call phpapi#function('msql_create_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('msql_data_seek(', 'resource $result , int $row_number)', 'bool')
call phpapi#function('msql_db_query(', 'string $database , string $query [, resource $link_identifier ])', 'resource')
call phpapi#function('msql_drop_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('msql_error(', 'void)', 'string')
call phpapi#function('msql_fetch_array(', 'resource $result [, int $result_type ])', 'array')
call phpapi#function('msql_fetch_field(', 'resource $result [, int $field_offset = 0 ])', 'object')
call phpapi#function('msql_fetch_object(', 'resource $result)', 'object')
call phpapi#function('msql_fetch_row(', 'resource $result)', 'array')
call phpapi#function('msql_field_flags(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('msql_field_len(', 'resource $result , int $field_offset)', 'int')
call phpapi#function('msql_field_name(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('msql_field_seek(', 'resource $result , int $field_offset)', 'bool')
call phpapi#function('msql_field_table(', 'resource $result , int $field_offset)', 'int')
call phpapi#function('msql_field_type(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('msql_free_result(', 'resource $result)', 'bool')
call phpapi#function('msql_list_dbs(', '[ resource $link_identifier ])', 'resource')
call phpapi#function('msql_list_fields(', 'string $database , string $tablename [, resource $link_identifier ])', 'resource')
call phpapi#function('msql_list_tables(', 'string $database [, resource $link_identifier ])', 'resource')
call phpapi#function('msql_num_fields(', 'resource $result)', 'int')
call phpapi#function('msql_num_rows(', 'resource $query_identifier)', 'int')
call phpapi#function('msql_pconnect(', '[ string $hostname ])', 'resource')
call phpapi#function('msql_query(', 'string $query [, resource $link_identifier ])', 'resource')
call phpapi#function('msql_result(', 'resource $result , int $row [, mixed $field ])', 'string')
call phpapi#function('msql_select_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('mssql_bind(', 'resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1 ]]])', 'bool')
call phpapi#function('mssql_close(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('mssql_connect(', '[ string $servername [, string $username [, string $password [, bool $new_link = false ]]]])', 'resource')
call phpapi#function('mssql_data_seek(', 'resource $result_identifier , int $row_number)', 'bool')
call phpapi#function('mssql_execute(', 'resource $stmt [, bool $skip_results = false ])', 'mixed')
call phpapi#function('mssql_fetch_array(', 'resource $result [, int $result_type = MSSQL_BOTH ])', 'array')
call phpapi#function('mssql_fetch_assoc(', 'resource $result_id)', 'array')
call phpapi#function('mssql_fetch_batch(', 'resource $result)', 'int')
call phpapi#function('mssql_fetch_field(', 'resource $result [, int $field_offset = -1 ])', 'object')
call phpapi#function('mssql_fetch_object(', 'resource $result)', 'object')
call phpapi#function('mssql_fetch_row(', 'resource $result)', 'array')
call phpapi#function('mssql_field_length(', 'resource $result [, int $offset = -1 ])', 'int')
call phpapi#function('mssql_field_name(', 'resource $result [, int $offset = -1 ])', 'string')
call phpapi#function('mssql_field_seek(', 'resource $result , int $field_offset)', 'bool')
call phpapi#function('mssql_field_type(', 'resource $result [, int $offset = -1 ])', 'string')
call phpapi#function('mssql_free_result(', 'resource $result)', 'bool')
call phpapi#function('mssql_free_statement(', 'resource $stmt)', 'bool')
call phpapi#function('mssql_get_last_message(', 'void)', 'string')
call phpapi#function('mssql_guid_string(', 'string $binary [, bool $short_format = false ])', 'string')
call phpapi#function('mssql_init(', 'string $sp_name [, resource $link_identifier ])', 'resource')
call phpapi#function('mssql_min_error_severity(', 'int $severity)', 'void')
call phpapi#function('mssql_min_message_severity(', 'int $severity)', 'void')
call phpapi#function('mssql_next_result(', 'resource $result_id)', 'bool')
call phpapi#function('mssql_num_fields(', 'resource $result)', 'int')
call phpapi#function('mssql_num_rows(', 'resource $result)', 'int')
call phpapi#function('mssql_pconnect(', '[ string $servername [, string $username [, string $password [, bool $new_link = false ]]]])', 'resource')
call phpapi#function('mssql_query(', 'string $query [, resource $link_identifier [, int $batch_size = 0 ]])', 'mixed')
call phpapi#function('mssql_result(', 'resource $result , int $row , mixed $field)', 'string')
call phpapi#function('mssql_rows_affected(', 'resource $link_identifier)', 'int')
call phpapi#function('mssql_select_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('mt_getrandmax(', 'void)', 'int')
call phpapi#function('mt_rand(', 'void)', 'int')
call phpapi#function('mt_srand(', '[ int $seed ])', 'void')
call phpapi#function('mysql_affected_rows(', '[ resource $link_identifier ])', 'int')
call phpapi#function('mysql_client_encoding(', '[ resource $link_identifier ])', 'string')
call phpapi#function('mysql_close(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('mysql_connect(', '[ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get ("mysql.default_password") [, bool $new_link = false [, int $client_flags = 0 ]]]]])', 'resource')
call phpapi#function('mysql_create_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('mysql_data_seek(', 'resource $result , int $row_number)', 'bool')
call phpapi#function('mysql_db_name(', 'resource $result , int $row [, mixed $field ])', 'string')
call phpapi#function('mysql_db_query(', 'string $database , string $query [, resource $link_identifier ])', 'resource')
call phpapi#function('mysql_drop_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('mysql_errno(', '[ resource $link_identifier ])', 'int')
call phpapi#function('mysql_error(', '[ resource $link_identifier ])', 'string')
call phpapi#function('mysql_escape_string(', 'string $unescaped_string)', 'string')
call phpapi#function('mysql_fetch_array(', 'resource $result [, int $result_type = MYSQL_BOTH ])', 'array')
call phpapi#function('mysql_fetch_assoc(', 'resource $result)', 'array')
call phpapi#function('mysql_fetch_field(', 'resource $result [, int $field_offset = 0 ])', 'object')
call phpapi#function('mysql_fetch_lengths(', 'resource $result)', 'array')
call phpapi#function('mysql_fetch_object(', 'resource $result [, string $class_name [, array $params ]])', 'object')
call phpapi#function('mysql_fetch_row(', 'resource $result)', 'array')
call phpapi#function('mysql_field_flags(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('mysql_field_len(', 'resource $result , int $field_offset)', 'int')
call phpapi#function('mysql_field_name(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('mysql_field_seek(', 'resource $result , int $field_offset)', 'bool')
call phpapi#function('mysql_field_table(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('mysql_field_type(', 'resource $result , int $field_offset)', 'string')
call phpapi#function('mysql_free_result(', 'resource $result)', 'bool')
call phpapi#function('mysql_get_client_info(', 'void)', 'string')
call phpapi#function('mysql_get_host_info(', '[ resource $link_identifier ])', 'string')
call phpapi#function('mysql_get_proto_info(', '[ resource $link_identifier ])', 'int')
call phpapi#function('mysql_get_server_info(', '[ resource $link_identifier ])', 'string')
call phpapi#function('mysql_info(', '[ resource $link_identifier ])', 'string')
call phpapi#function('mysql_insert_id(', '[ resource $link_identifier ])', 'int')
call phpapi#function('mysql_list_dbs(', '[ resource $link_identifier ])', 'resource')
call phpapi#function('mysql_list_fields(', 'string $database_name , string $table_name [, resource $link_identifier ])', 'resource')
call phpapi#function('mysql_list_processes(', '[ resource $link_identifier ])', 'resource')
call phpapi#function('mysql_list_tables(', 'string $database [, resource $link_identifier ])', 'resource')
call phpapi#function('mysql_num_fields(', 'resource $result)', 'int')
call phpapi#function('mysql_num_rows(', 'resource $result)', 'int')
call phpapi#function('mysql_pconnect(', '[ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get ("mysql.default_password") [, int $client_flags ]]]])', 'resource')
call phpapi#function('mysql_ping(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('mysql_query(', 'string $query [, resource $link_identifier ])', 'resource')
call phpapi#function('mysql_real_escape_string(', 'string $unescaped_string [, resource $link_identifier ])', 'string')
call phpapi#function('mysql_result(', 'resource $result , int $row [, mixed $field = 0 ])', 'string')
call phpapi#function('mysql_select_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('mysql_set_charset(', 'string $charset [, resource $link_identifier ])', 'bool')
call phpapi#function('mysql_stat(', '[ resource $link_identifier ])', 'string')
call phpapi#function('mysql_tablename(', 'resource $result , int $i)', 'string')
call phpapi#function('mysql_thread_id(', '[ resource $link_identifier ])', 'int')
call phpapi#function('mysql_unbuffered_query(', 'string $query [, resource $link_identifier ])', 'resource')
call phpapi#function('mysqli_disable_rpl_parse(', 'mysqli $link)', 'bool')
call phpapi#function('mysqli_enable_reads_from_master(', 'mysqli $link)', 'bool')
call phpapi#function('mysqli_enable_rpl_parse(', 'mysqli $link)', 'bool')
call phpapi#function('mysqli_master_query(', 'mysqli $link , string $query)', 'bool')
call phpapi#function('mysqli_report(', 'int $flags)', 'bool')
call phpapi#function('mysqli_rpl_parse_enabled(', 'mysqli $link)', 'int')
call phpapi#function('mysqli_rpl_probe(', 'mysqli $link)', 'bool')
call phpapi#function('mysqli_slave_query(', 'mysqli $link , string $query)', 'bool')
call phpapi#function('mysqlnd_ms_get_stats(', 'void)', 'array')
call phpapi#function('mysqlnd_ms_query_is_select(', 'string $query)', 'int')
call phpapi#function('mysqlnd_ms_set_user_pick_server(', 'string $function)', 'bool')
call phpapi#function('mysqlnd_qc_change_handler(', 'mixed $handler)', 'bool')
call phpapi#function('mysqlnd_qc_clear_cache(', 'void)', 'bool')
call phpapi#function('mysqlnd_qc_get_cache_info(', 'void)', 'array')
call phpapi#function('mysqlnd_qc_get_core_stats(', 'void)', 'array')
call phpapi#function('mysqlnd_qc_get_handler(', 'void)', 'array')
call phpapi#function('mysqlnd_qc_get_query_trace_log(', 'void)', 'array')
call phpapi#function('mysqlnd_qc_set_user_handlers(', 'string $get_hash , string $find_query_in_cache , string $return_to_cache , string $add_query_to_cache_if_not_exists , string $query_is_select , string $update_query_run_time_stats , string $get_stats , string $clear_cache)', 'bool')
call phpapi#function('natcasesort(', 'array &$array)', 'bool')
call phpapi#function('natsort(', 'array &$array)', 'bool')
call phpapi#function('ncurses_addch(', 'int $ch)', 'int')
call phpapi#function('ncurses_addchnstr(', 'string $s , int $n)', 'int')
call phpapi#function('ncurses_addchstr(', 'string $s)', 'int')
call phpapi#function('ncurses_addnstr(', 'string $s , int $n)', 'int')
call phpapi#function('ncurses_addstr(', 'string $text)', 'int')
call phpapi#function('ncurses_assume_default_colors(', 'int $fg , int $bg)', 'int')
call phpapi#function('ncurses_attroff(', 'int $attributes)', 'int')
call phpapi#function('ncurses_attron(', 'int $attributes)', 'int')
call phpapi#function('ncurses_attrset(', 'int $attributes)', 'int')
call phpapi#function('ncurses_baudrate(', 'void)', 'int')
call phpapi#function('ncurses_beep(', 'void)', 'int')
call phpapi#function('ncurses_bkgd(', 'int $attrchar)', 'int')
call phpapi#function('ncurses_bkgdset(', 'int $attrchar)', 'void')
call phpapi#function('ncurses_border(', 'int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner)', 'int')
call phpapi#function('ncurses_bottom_panel(', 'resource $panel)', 'int')
call phpapi#function('ncurses_can_change_color(', 'void)', 'bool')
call phpapi#function('ncurses_cbreak(', 'void)', 'bool')
call phpapi#function('ncurses_clear(', 'void)', 'bool')
call phpapi#function('ncurses_clrtobot(', 'void)', 'bool')
call phpapi#function('ncurses_clrtoeol(', 'void)', 'bool')
call phpapi#function('ncurses_color_content(', 'int $color , int &$r , int &$g , int &$b)', 'int')
call phpapi#function('ncurses_color_set(', 'int $pair)', 'int')
call phpapi#function('ncurses_curs_set(', 'int $visibility)', 'int')
call phpapi#function('ncurses_def_prog_mode(', 'void)', 'bool')
call phpapi#function('ncurses_def_shell_mode(', 'void)', 'bool')
call phpapi#function('ncurses_define_key(', 'string $definition , int $keycode)', 'int')
call phpapi#function('ncurses_del_panel(', 'resource $panel)', 'bool')
call phpapi#function('ncurses_delay_output(', 'int $milliseconds)', 'int')
call phpapi#function('ncurses_delch(', 'void)', 'bool')
call phpapi#function('ncurses_deleteln(', 'void)', 'bool')
call phpapi#function('ncurses_delwin(', 'resource $window)', 'bool')
call phpapi#function('ncurses_doupdate(', 'void)', 'bool')
call phpapi#function('ncurses_echo(', 'void)', 'bool')
call phpapi#function('ncurses_echochar(', 'int $character)', 'int')
call phpapi#function('ncurses_end(', 'void)', 'int')
call phpapi#function('ncurses_erase(', 'void)', 'bool')
call phpapi#function('ncurses_erasechar(', 'void)', 'string')
call phpapi#function('ncurses_filter(', 'void)', 'void')
call phpapi#function('ncurses_flash(', 'void)', 'bool')
call phpapi#function('ncurses_flushinp(', 'void)', 'bool')
call phpapi#function('ncurses_getch(', 'void)', 'int')
call phpapi#function('ncurses_getmaxyx(', 'resource $window , int &$y , int &$x)', 'void')
call phpapi#function('ncurses_getmouse(', 'array &$mevent)', 'bool')
call phpapi#function('ncurses_getyx(', 'resource $window , int &$y , int &$x)', 'void')
call phpapi#function('ncurses_halfdelay(', 'int $tenth)', 'int')
call phpapi#function('ncurses_has_colors(', 'void)', 'bool')
call phpapi#function('ncurses_has_ic(', 'void)', 'bool')
call phpapi#function('ncurses_has_il(', 'void)', 'bool')
call phpapi#function('ncurses_has_key(', 'int $keycode)', 'int')
call phpapi#function('ncurses_hide_panel(', 'resource $panel)', 'int')
call phpapi#function('ncurses_hline(', 'int $charattr , int $n)', 'int')
call phpapi#function('ncurses_inch(', 'void)', 'string')
call phpapi#function('ncurses_init(', 'void)', 'void')
call phpapi#function('ncurses_init_color(', 'int $color , int $r , int $g , int $b)', 'int')
call phpapi#function('ncurses_init_pair(', 'int $pair , int $fg , int $bg)', 'int')
call phpapi#function('ncurses_insch(', 'int $character)', 'int')
call phpapi#function('ncurses_insdelln(', 'int $count)', 'int')
call phpapi#function('ncurses_insertln(', 'void)', 'int')
call phpapi#function('ncurses_insstr(', 'string $text)', 'int')
call phpapi#function('ncurses_instr(', 'string &$buffer)', 'int')
call phpapi#function('ncurses_isendwin(', 'void)', 'bool')
call phpapi#function('ncurses_keyok(', 'int $keycode , bool $enable)', 'int')
call phpapi#function('ncurses_keypad(', 'resource $window , bool $bf)', 'int')
call phpapi#function('ncurses_killchar(', 'void)', 'string')
call phpapi#function('ncurses_longname(', 'void)', 'string')
call phpapi#function('ncurses_meta(', 'resource $window , bool $8bit)', 'int')
call phpapi#function('ncurses_mouse_trafo(', 'int &$y , int &$x , bool $toscreen)', 'bool')
call phpapi#function('ncurses_mouseinterval(', 'int $milliseconds)', 'int')
call phpapi#function('ncurses_mousemask(', 'int $newmask , int &$oldmask)', 'int')
call phpapi#function('ncurses_move(', 'int $y , int $x)', 'int')
call phpapi#function('ncurses_move_panel(', 'resource $panel , int $startx , int $starty)', 'int')
call phpapi#function('ncurses_mvaddch(', 'int $y , int $x , int $c)', 'int')
call phpapi#function('ncurses_mvaddchnstr(', 'int $y , int $x , string $s , int $n)', 'int')
call phpapi#function('ncurses_mvaddchstr(', 'int $y , int $x , string $s)', 'int')
call phpapi#function('ncurses_mvaddnstr(', 'int $y , int $x , string $s , int $n)', 'int')
call phpapi#function('ncurses_mvaddstr(', 'int $y , int $x , string $s)', 'int')
call phpapi#function('ncurses_mvcur(', 'int $old_y , int $old_x , int $new_y , int $new_x)', 'int')
call phpapi#function('ncurses_mvdelch(', 'int $y , int $x)', 'int')
call phpapi#function('ncurses_mvgetch(', 'int $y , int $x)', 'int')
call phpapi#function('ncurses_mvhline(', 'int $y , int $x , int $attrchar , int $n)', 'int')
call phpapi#function('ncurses_mvinch(', 'int $y , int $x)', 'int')
call phpapi#function('ncurses_mvvline(', 'int $y , int $x , int $attrchar , int $n)', 'int')
call phpapi#function('ncurses_mvwaddstr(', 'resource $window , int $y , int $x , string $text)', 'int')
call phpapi#function('ncurses_napms(', 'int $milliseconds)', 'int')
call phpapi#function('ncurses_new_panel(', 'resource $window)', 'resource')
call phpapi#function('ncurses_newpad(', 'int $rows , int $cols)', 'resource')
call phpapi#function('ncurses_newwin(', 'int $rows , int $cols , int $y , int $x)', 'resource')
call phpapi#function('ncurses_nl(', 'void)', 'bool')
call phpapi#function('ncurses_nocbreak(', 'void)', 'bool')
call phpapi#function('ncurses_noecho(', 'void)', 'bool')
call phpapi#function('ncurses_nonl(', 'void)', 'bool')
call phpapi#function('ncurses_noqiflush(', 'void)', 'void')
call phpapi#function('ncurses_noraw(', 'void)', 'bool')
call phpapi#function('ncurses_pair_content(', 'int $pair , int &$f , int &$b)', 'int')
call phpapi#function('ncurses_panel_above(', 'resource $panel)', 'resource')
call phpapi#function('ncurses_panel_below(', 'resource $panel)', 'resource')
call phpapi#function('ncurses_panel_window(', 'resource $panel)', 'resource')
call phpapi#function('ncurses_pnoutrefresh(', 'resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol)', 'int')
call phpapi#function('ncurses_prefresh(', 'resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol)', 'int')
call phpapi#function('ncurses_putp(', 'string $text)', 'int')
call phpapi#function('ncurses_qiflush(', 'void)', 'void')
call phpapi#function('ncurses_raw(', 'void)', 'bool')
call phpapi#function('ncurses_refresh(', 'int $ch)', 'int')
call phpapi#function('ncurses_replace_panel(', 'resource $panel , resource $window)', 'int')
call phpapi#function('ncurses_reset_prog_mode(', 'void)', 'int')
call phpapi#function('ncurses_reset_shell_mode(', 'void)', 'int')
call phpapi#function('ncurses_resetty(', 'void)', 'bool')
call phpapi#function('ncurses_savetty(', 'void)', 'bool')
call phpapi#function('ncurses_scr_dump(', 'string $filename)', 'int')
call phpapi#function('ncurses_scr_init(', 'string $filename)', 'int')
call phpapi#function('ncurses_scr_restore(', 'string $filename)', 'int')
call phpapi#function('ncurses_scr_set(', 'string $filename)', 'int')
call phpapi#function('ncurses_scrl(', 'int $count)', 'int')
call phpapi#function('ncurses_show_panel(', 'resource $panel)', 'int')
call phpapi#function('ncurses_slk_attr(', 'void)', 'int')
call phpapi#function('ncurses_slk_attroff(', 'int $intarg)', 'int')
call phpapi#function('ncurses_slk_attron(', 'int $intarg)', 'int')
call phpapi#function('ncurses_slk_attrset(', 'int $intarg)', 'int')
call phpapi#function('ncurses_slk_clear(', 'void)', 'bool')
call phpapi#function('ncurses_slk_color(', 'int $intarg)', 'int')
call phpapi#function('ncurses_slk_init(', 'int $format)', 'bool')
call phpapi#function('ncurses_slk_noutrefresh(', 'void)', 'bool')
call phpapi#function('ncurses_slk_refresh(', 'void)', 'int')
call phpapi#function('ncurses_slk_restore(', 'void)', 'int')
call phpapi#function('ncurses_slk_set(', 'int $labelnr , string $label , int $format)', 'bool')
call phpapi#function('ncurses_slk_touch(', 'void)', 'int')
call phpapi#function('ncurses_standend(', 'void)', 'int')
call phpapi#function('ncurses_standout(', 'void)', 'int')
call phpapi#function('ncurses_start_color(', 'void)', 'int')
call phpapi#function('ncurses_termattrs(', 'void)', 'bool')
call phpapi#function('ncurses_termname(', 'void)', 'string')
call phpapi#function('ncurses_timeout(', 'int $millisec)', 'void')
call phpapi#function('ncurses_top_panel(', 'resource $panel)', 'int')
call phpapi#function('ncurses_typeahead(', 'int $fd)', 'int')
call phpapi#function('ncurses_ungetch(', 'int $keycode)', 'int')
call phpapi#function('ncurses_ungetmouse(', 'array $mevent)', 'bool')
call phpapi#function('ncurses_update_panels(', 'void)', 'void')
call phpapi#function('ncurses_use_default_colors(', 'void)', 'bool')
call phpapi#function('ncurses_use_env(', 'bool $flag)', 'void')
call phpapi#function('ncurses_use_extended_names(', 'bool $flag)', 'int')
call phpapi#function('ncurses_vidattr(', 'int $intarg)', 'int')
call phpapi#function('ncurses_vline(', 'int $charattr , int $n)', 'int')
call phpapi#function('ncurses_waddch(', 'resource $window , int $ch)', 'int')
call phpapi#function('ncurses_waddstr(', 'resource $window , string $str [, int $n ])', 'int')
call phpapi#function('ncurses_wattroff(', 'resource $window , int $attrs)', 'int')
call phpapi#function('ncurses_wattron(', 'resource $window , int $attrs)', 'int')
call phpapi#function('ncurses_wattrset(', 'resource $window , int $attrs)', 'int')
call phpapi#function('ncurses_wborder(', 'resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner)', 'int')
call phpapi#function('ncurses_wclear(', 'resource $window)', 'int')
call phpapi#function('ncurses_wcolor_set(', 'resource $window , int $color_pair)', 'int')
call phpapi#function('ncurses_werase(', 'resource $window)', 'int')
call phpapi#function('ncurses_wgetch(', 'resource $window)', 'int')
call phpapi#function('ncurses_whline(', 'resource $window , int $charattr , int $n)', 'int')
call phpapi#function('ncurses_wmouse_trafo(', 'resource $window , int &$y , int &$x , bool $toscreen)', 'bool')
call phpapi#function('ncurses_wmove(', 'resource $window , int $y , int $x)', 'int')
call phpapi#function('ncurses_wnoutrefresh(', 'resource $window)', 'int')
call phpapi#function('ncurses_wrefresh(', 'resource $window)', 'int')
call phpapi#function('ncurses_wstandend(', 'resource $window)', 'int')
call phpapi#function('ncurses_wstandout(', 'resource $window)', 'int')
call phpapi#function('ncurses_wvline(', 'resource $window , int $charattr , int $n)', 'int')
call phpapi#function('newt_bell(', 'void)', 'void')
call phpapi#function('newt_button(', 'int $left , int $top , string $text)', 'resource')
call phpapi#function('newt_button_bar(', 'array &$buttons)', 'resource')
call phpapi#function('newt_centered_window(', 'int $width , int $height [, string $title ])', 'int')
call phpapi#function('newt_checkbox(', 'int $left , int $top , string $text , string $def_value [, string $seq ])', 'resource')
call phpapi#function('newt_checkbox_get_value(', 'resource $checkbox)', 'string')
call phpapi#function('newt_checkbox_set_flags(', 'resource $checkbox , int $flags , int $sense)', 'void')
call phpapi#function('newt_checkbox_set_value(', 'resource $checkbox , string $value)', 'void')
call phpapi#function('newt_checkbox_tree(', 'int $left , int $top , int $height [, int $flags ])', 'resource')
call phpapi#function('newt_checkbox_tree_add_item(', 'resource $checkboxtree , string $text , mixed $data , int $flags , int $index [, int $... ])', 'void')
call phpapi#function('newt_checkbox_tree_find_item(', 'resource $checkboxtree , mixed $data)', 'array')
call phpapi#function('newt_checkbox_tree_get_current(', 'resource $checkboxtree)', 'mixed')
call phpapi#function('newt_checkbox_tree_get_entry_value(', 'resource $checkboxtree , mixed $data)', 'string')
call phpapi#function('newt_checkbox_tree_get_multi_selection(', 'resource $checkboxtree , string $seqnum)', 'array')
call phpapi#function('newt_checkbox_tree_get_selection(', 'resource $checkboxtree)', 'array')
call phpapi#function('newt_checkbox_tree_multi(', 'int $left , int $top , int $height , string $seq [, int $flags ])', 'resource')
call phpapi#function('newt_checkbox_tree_set_current(', 'resource $checkboxtree , mixed $data)', 'void')
call phpapi#function('newt_checkbox_tree_set_entry(', 'resource $checkboxtree , mixed $data , string $text)', 'void')
call phpapi#function('newt_checkbox_tree_set_entry_value(', 'resource $checkboxtree , mixed $data , string $value)', 'void')
call phpapi#function('newt_checkbox_tree_set_width(', 'resource $checkbox_tree , int $width)', 'void')
call phpapi#function('newt_clear_key_buffer(', 'void)', 'void')
call phpapi#function('newt_cls(', 'void)', 'void')
call phpapi#function('newt_compact_button(', 'int $left , int $top , string $text)', 'resource')
call phpapi#function('newt_component_add_callback(', 'resource $component , mixed $func_name , mixed $data)', 'void')
call phpapi#function('newt_component_takes_focus(', 'resource $component , bool $takes_focus)', 'void')
call phpapi#function('newt_create_grid(', 'int $cols , int $rows)', 'resource')
call phpapi#function('newt_cursor_off(', 'void)', 'void')
call phpapi#function('newt_cursor_on(', 'void)', 'void')
call phpapi#function('newt_delay(', 'int $microseconds)', 'void')
call phpapi#function('newt_draw_form(', 'resource $form)', 'void')
call phpapi#function('newt_draw_root_text(', 'int $left , int $top , string $text)', 'void')
call phpapi#function('newt_entry(', 'int $left , int $top , int $width [, string $init_value [, int $flags ]])', 'resource')
call phpapi#function('newt_entry_get_value(', 'resource $entry)', 'string')
call phpapi#function('newt_entry_set(', 'resource $entry , string $value [, bool $cursor_at_end ])', 'void')
call phpapi#function('newt_entry_set_filter(', 'resource $entry , callback $filter , mixed $data)', 'void')
call phpapi#function('newt_entry_set_flags(', 'resource $entry , int $flags , int $sense)', 'void')
call phpapi#function('newt_finished(', 'void)', 'int')
call phpapi#function('newt_form(', '[ resource $vert_bar [, string $help [, int $flags ]]])', 'resource')
call phpapi#function('newt_form_add_component(', 'resource $form , resource $component)', 'void')
call phpapi#function('newt_form_add_components(', 'resource $form , array $components)', 'void')
call phpapi#function('newt_form_add_hot_key(', 'resource $form , int $key)', 'void')
call phpapi#function('newt_form_destroy(', 'resource $form)', 'void')
call phpapi#function('newt_form_get_current(', 'resource $form)', 'resource')
call phpapi#function('newt_form_run(', 'resource $form , array &$exit_struct)', 'void')
call phpapi#function('newt_form_set_background(', 'resource $from , int $background)', 'void')
call phpapi#function('newt_form_set_height(', 'resource $form , int $height)', 'void')
call phpapi#function('newt_form_set_size(', 'resource $form)', 'void')
call phpapi#function('newt_form_set_timer(', 'resource $form , int $milliseconds)', 'void')
call phpapi#function('newt_form_set_width(', 'resource $form , int $width)', 'void')
call phpapi#function('newt_form_watch_fd(', 'resource $form , resource $stream [, int $flags ])', 'void')
call phpapi#function('newt_get_screen_size(', 'int &$cols , int &$rows)', 'void')
call phpapi#function('newt_grid_add_components_to_form(', 'resource $grid , resource $form , bool $recurse)', 'void')
call phpapi#function('newt_grid_basic_window(', 'resource $text , resource $middle , resource $buttons)', 'resource')
call phpapi#function('newt_grid_free(', 'resource $grid , bool $recurse)', 'void')
call phpapi#function('newt_grid_get_size(', 'resouce $grid , int &$width , int &$height)', 'void')
call phpapi#function('newt_grid_h_close_stacked(', 'int $element1_type , resource $element1 [, int $... [, resource $... ]])', 'resource')
call phpapi#function('newt_grid_h_stacked(', 'int $element1_type , resource $element1 [, int $... [, resource $... ]])', 'resource')
call phpapi#function('newt_grid_place(', 'resource $grid , int $left , int $top)', 'void')
call phpapi#function('newt_grid_set_field(', 'resource $grid , int $col , int $row , int $type , resource $val , int $pad_left , int $pad_top , int $pad_right , int $pad_bottom , int $anchor [, int $flags ])', 'void')
call phpapi#function('newt_grid_simple_window(', 'resource $text , resource $middle , resource $buttons)', 'resource')
call phpapi#function('newt_grid_v_close_stacked(', 'int $element1_type , resource $element1 [, int $... [, resource $... ]])', 'resource')
call phpapi#function('newt_grid_v_stacked(', 'int $element1_type , resource $element1 [, int $... [, resource $... ]])', 'resource')
call phpapi#function('newt_grid_wrapped_window(', 'resource $grid , string $title)', 'void')
call phpapi#function('newt_grid_wrapped_window_at(', 'resource $grid , string $title , int $left , int $top)', 'void')
call phpapi#function('newt_init(', 'void)', 'int')
call phpapi#function('newt_label(', 'int $left , int $top , string $text)', 'resource')
call phpapi#function('newt_label_set_text(', 'resource $label , string $text)', 'void')
call phpapi#function('newt_listbox(', 'int $left , int $top , int $height [, int $flags ])', 'resource')
call phpapi#function('newt_listbox_append_entry(', 'resource $listbox , string $text , mixed $data)', 'void')
call phpapi#function('newt_listbox_clear(', 'resource $listobx)', 'void')
call phpapi#function('newt_listbox_clear_selection(', 'resource $listbox)', 'void')
call phpapi#function('newt_listbox_delete_entry(', 'resource $listbox , mixed $key)', 'void')
call phpapi#function('newt_listbox_get_current(', 'resource $listbox)', 'string')
call phpapi#function('newt_listbox_get_selection(', 'resource $listbox)', 'array')
call phpapi#function('newt_listbox_insert_entry(', 'resource $listbox , string $text , mixed $data , mixed $key)', 'void')
call phpapi#function('newt_listbox_item_count(', 'resource $listbox)', 'int')
call phpapi#function('newt_listbox_select_item(', 'resource $listbox , mixed $key , int $sense)', 'void')
call phpapi#function('newt_listbox_set_current(', 'resource $listbox , int $num)', 'void')
call phpapi#function('newt_listbox_set_current_by_key(', 'resource $listbox , mixed $key)', 'void')
call phpapi#function('newt_listbox_set_data(', 'resource $listbox , int $num , mixed $data)', 'void')
call phpapi#function('newt_listbox_set_entry(', 'resource $listbox , int $num , string $text)', 'void')
call phpapi#function('newt_listbox_set_width(', 'resource $listbox , int $width)', 'void')
call phpapi#function('newt_listitem(', 'int $left , int $top , string $text , bool $is_default , resouce $prev_item , mixed $data [, int $flags ])', 'resource')
call phpapi#function('newt_listitem_get_data(', 'resource $item)', 'mixed')
call phpapi#function('newt_listitem_set(', 'resource $item , string $text)', 'void')
call phpapi#function('newt_open_window(', 'int $left , int $top , int $width , int $height [, string $title ])', 'int')
call phpapi#function('newt_pop_help_line(', 'void)', 'void')
call phpapi#function('newt_pop_window(', 'void)', 'void')
call phpapi#function('newt_push_help_line(', '[ string $text ])', 'void')
call phpapi#function('newt_radio_get_current(', 'resource $set_member)', 'resource')
call phpapi#function('newt_radiobutton(', 'int $left , int $top , string $text , bool $is_default [, resource $prev_button ])', 'resource')
call phpapi#function('newt_redraw_help_line(', 'void)', 'void')
call phpapi#function('newt_reflow_text(', 'string $text , int $width , int $flex_down , int $flex_up , int &$actual_width , int &$actual_height)', 'string')
call phpapi#function('newt_refresh(', 'void)', 'void')
call phpapi#function('newt_resize_screen(', '[ bool $redraw ])', 'void')
call phpapi#function('newt_resume(', 'void)', 'void')
call phpapi#function('newt_run_form(', 'resource $form)', 'resource')
call phpapi#function('newt_scale(', 'int $left , int $top , int $width , int $full_value)', 'resource')
call phpapi#function('newt_scale_set(', 'resource $scale , int $amount)', 'void')
call phpapi#function('newt_scrollbar_set(', 'resource $scrollbar , int $where , int $total)', 'void')
call phpapi#function('newt_set_help_callback(', 'mixed $function)', 'void')
call phpapi#function('newt_set_suspend_callback(', 'callback $function , mixed $data)', 'void')
call phpapi#function('newt_suspend(', 'void)', 'void')
call phpapi#function('newt_textbox(', 'int $left , int $top , int $width , int $height [, int $flags ])', 'resource')
call phpapi#function('newt_textbox_get_num_lines(', 'resource $textbox)', 'int')
call phpapi#function('newt_textbox_reflowed(', 'int $left , int $top , char $*text , int $width , int $flex_down , int $flex_up [, int $flags ])', 'resource')
call phpapi#function('newt_textbox_set_height(', 'resource $textbox , int $height)', 'void')
call phpapi#function('newt_textbox_set_text(', 'resource $textbox , string $text)', 'void')
call phpapi#function('newt_vertical_scrollbar(', 'int $left , int $top , int $height [, int $normal_colorset [, int $thumb_colorset ]])', 'resource')
call phpapi#function('newt_wait_for_key(', 'void)', 'void')
call phpapi#function('newt_win_choice(', 'string $title , string $button1_text , string $button2_text , string $format [, mixed $args [, mixed $... ]])', 'int')
call phpapi#function('newt_win_entries(', 'string $title , string $text , int $suggested_width , int $flex_down , int $flex_up , int $data_width , array &$items , string $button1 [, string $... ])', 'int')
call phpapi#function('newt_win_menu(', 'string $title , string $text , int $suggestedWidth , int $flexDown , int $flexUp , int $maxListHeight , array $items , int &$listItem [, string $button1 [, string $... ]])', 'int')
call phpapi#function('newt_win_message(', 'string $title , string $button_text , string $format [, mixed $args [, mixed $... ]])', 'void')
call phpapi#function('newt_win_messagev(', 'string $title , string $button_text , string $format , array $args)', 'void')
call phpapi#function('newt_win_ternary(', 'string $title , string $button1_text , string $button2_text , string $button3_text , string $format [, mixed $args [, mixed $... ]])', 'int')
call phpapi#function('next(', 'array &$array)', 'mixed')
call phpapi#function('next_sibling(', 'void)', 'domelement')
call phpapi#function('nextResult(', 'void)', 'object')
call phpapi#function('ngettext(', 'string $msgid1 , string $msgid2 , int $n)', 'string')
call phpapi#function('nl_langinfo(', 'int $item)', 'string')
call phpapi#function('nl2br(', 'string $string [, bool $is_xhtml = true ])', 'string')
call phpapi#function('node_name(', 'void)', 'string')
call phpapi#function('node_type(', 'void)', 'int')
call phpapi#function('node_value(', 'void)', 'string')
call phpapi#function('notes_body(', 'string $server , string $mailbox , int $msg_number)', 'array')
call phpapi#function('notes_copy_db(', 'string $from_database_name , string $to_database_name)', 'bool')
call phpapi#function('notes_create_db(', 'string $database_name)', 'bool')
call phpapi#function('notes_create_note(', 'string $database_name , string $form_name)', 'bool')
call phpapi#function('notes_drop_db(', 'string $database_name)', 'bool')
call phpapi#function('notes_find_note(', 'string $database_name , string $name [, string $type ])', 'int')
call phpapi#function('notes_header_info(', 'string $server , string $mailbox , int $msg_number)', 'object')
call phpapi#function('notes_list_msgs(', 'string $db)', 'bool')
call phpapi#function('notes_mark_read(', 'string $database_name , string $user_name , string $note_id)', 'bool')
call phpapi#function('notes_mark_unread(', 'string $database_name , string $user_name , string $note_id)', 'bool')
call phpapi#function('notes_nav_create(', 'string $database_name , string $name)', 'bool')
call phpapi#function('notes_search(', 'string $database_name , string $keywords)', 'array')
call phpapi#function('notes_unread(', 'string $database_name , string $user_name)', 'array')
call phpapi#function('notes_version(', 'string $database_name)', 'float')
call phpapi#function('nsapi_request_headers(', 'void)', 'array')
call phpapi#function('nsapi_response_headers(', 'void)', 'array')
call phpapi#function('nsapi_virtual(', 'string $uri)', 'bool')
call phpapi#function('nthmac(', 'string $clent , string $data)', 'string')
call phpapi#function('nthmac(', 'string $clent , string $data)', 'string')
call phpapi#function('number_format(', 'float $number [, int $decimals = 0 ])', 'string')
call phpapi#function('oauth_get_sbs(', 'string $http_method , string $uri [, array $request_parameters ])', 'string')
call phpapi#function('oauth_urlencode(', 'string $uri)', 'string')
call phpapi#function('ob_clean(', 'void)', 'void')
call phpapi#function('ob_deflatehandler(', 'string $data , int $mode)', 'string')
call phpapi#function('ob_end_clean(', 'void)', 'bool')
call phpapi#function('ob_end_flush(', 'void)', 'bool')
call phpapi#function('ob_etaghandler(', 'string $data , int $mode)', 'string')
call phpapi#function('ob_flush(', 'void)', 'void')
call phpapi#function('ob_get_clean(', 'void)', 'string')
call phpapi#function('ob_get_contents(', 'void)', 'string')
call phpapi#function('ob_get_flush(', 'void)', 'string')
call phpapi#function('ob_get_length(', 'void)', 'int')
call phpapi#function('ob_get_level(', 'void)', 'int')
call phpapi#function('ob_get_status(', '[ bool $full_status = FALSE ])', 'array')
call phpapi#function('ob_gzhandler(', 'string $buffer , int $mode)', 'string')
call phpapi#function('ob_iconv_handler(', 'string $contents , int $status)', 'string')
call phpapi#function('ob_implicit_flush(', '[ int $flag = true ])', 'void')
call phpapi#function('ob_inflatehandler(', 'string $data , int $mode)', 'string')
call phpapi#function('ob_list_handlers(', 'void)', 'array')
call phpapi#function('ob_start(', '[ callback $output_callback [, int $chunk_size = 0 [, bool $erase = true ]]])', 'bool')
call phpapi#function('ob_tidyhandler(', 'string $input [, int $mode ])', 'string')
call phpapi#function('oci_bind_array_by_name(', 'resource $statement , string $name , array & $var_array , int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC ]])', 'bool')
call phpapi#function('oci_bind_by_name(', 'resource $statement , string $bv_name , mixed & $variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]])', 'bool')
call phpapi#function('oci_cancel(', 'resource $statement)', 'bool')
call phpapi#function('oci_close(', 'resource $connection)', 'bool')
call phpapi#function('oci_commit(', 'resource $connection)', 'bool')
call phpapi#function('oci_connect(', 'string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]])', 'resource')
call phpapi#function('oci_define_by_name(', 'resource $statement , string $column_name , mixed & $variable [, int $type = SQLT_CHR ])', 'bool')
call phpapi#function('oci_error(', '[ resource $resource ])', 'array')
call phpapi#function('oci_execute(', 'resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ])', 'bool')
call phpapi#function('oci_fetch(', 'resource $statement)', 'bool')
call phpapi#function('oci_fetch_all(', 'resource $statement , array &$output [, int $skip = 0 [, int $maxrows = -1 [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]])', 'int')
call phpapi#function('oci_fetch_array(', 'resource $statement [, int $mode ])', 'array')
call phpapi#function('oci_fetch_assoc(', 'resource $statement)', 'array')
call phpapi#function('oci_fetch_object(', 'resource $statement)', 'object')
call phpapi#function('oci_fetch_row(', 'resource $statement)', 'array')
call phpapi#function('oci_field_is_null(', 'resource $statement , mixed $field)', 'bool')
call phpapi#function('oci_field_name(', 'resource $statement , int $field)', 'string')
call phpapi#function('oci_field_precision(', 'resource $statement , int $field)', 'int')
call phpapi#function('oci_field_scale(', 'resource $statement , int $field)', 'int')
call phpapi#function('oci_field_size(', 'resource $statement , mixed $field)', 'int')
call phpapi#function('oci_field_type(', 'resource $statement , int $field)', 'mixed')
call phpapi#function('oci_field_type_raw(', 'resource $statement , int $field)', 'int')
call phpapi#function('oci_free_statement(', 'resource $statement)', 'bool')
call phpapi#function('oci_internal_debug(', 'bool $onoff)', 'void')
call phpapi#function('oci_lob_copy(', 'OCI-Lob $lob_to , OCI-Lob $lob_from [, int $length = 0 ])', 'bool')
call phpapi#function('oci_lob_is_equal(', 'OCI-Lob $lob1 , OCI-Lob $lob2)', 'bool')
call phpapi#function('oci_new_collection(', 'resource $connection , string $tdo [, string $schema = NULL ])', 'OCI-Collection')
call phpapi#function('oci_new_connect(', 'string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]])', 'resource')
call phpapi#function('oci_new_cursor(', 'resource $connection)', 'resource')
call phpapi#function('oci_new_descriptor(', 'resource $connection [, int $type = OCI_DTYPE_LOB ])', 'OCI-Lob')
call phpapi#function('oci_num_fields(', 'resource $statement)', 'int')
call phpapi#function('oci_num_rows(', 'resource $statement)', 'int')
call phpapi#function('oci_parse(', 'resource $connection , string $sql_text)', 'resource')
call phpapi#function('oci_password_change(', 'resource $connection , string $username , string $old_password , string $new_password)', 'bool')
call phpapi#function('oci_pconnect(', 'string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]])', 'resource')
call phpapi#function('oci_result(', 'resource $statement , mixed $field)', 'mixed')
call phpapi#function('oci_rollback(', 'resource $connection)', 'bool')
call phpapi#function('oci_server_version(', 'resource $connection)', 'string')
call phpapi#function('oci_set_action(', 'resource $connection , string $action_name)', 'bool')
call phpapi#function('oci_set_client_identifier(', 'resource $connection , string $client_identifier)', 'bool')
call phpapi#function('oci_set_client_info(', 'resource $connection , string $client_info)', 'bool')
call phpapi#function('oci_set_edition(', 'string $edition)', 'bool')
call phpapi#function('oci_set_module_name(', 'resource $connection , string $module_name)', 'bool')
call phpapi#function('oci_set_prefetch(', 'resource $statement , int $rows)', 'bool')
call phpapi#function('oci_statement_type(', 'resource $statement)', 'string')
call phpapi#function('ocifetchinto(', 'resource $statement , array &$result [, int $mode = OCI_ASSOC + OCI_NUM ])', 'int')
call phpapi#function('octdec(', 'string $octal_string)', 'number')
call phpapi#function('odbc_autocommit(', 'resource $connection_id [, bool $OnOff = false ])', 'mixed')
call phpapi#function('odbc_binmode(', 'resource $result_id , int $mode)', 'bool')
call phpapi#function('odbc_close(', 'resource $connection_id)', 'void')
call phpapi#function('odbc_close_all(', 'void)', 'void')
call phpapi#function('odbc_columnprivileges(', 'resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name)', 'resource')
call phpapi#function('odbc_columns(', 'resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]])', 'resource')
call phpapi#function('odbc_commit(', 'resource $connection_id)', 'bool')
call phpapi#function('odbc_connect(', 'string $dsn , string $user , string $password [, int $cursor_type ])', 'resource')
call phpapi#function('odbc_cursor(', 'resource $result_id)', 'string')
call phpapi#function('odbc_data_source(', 'resource $connection_id , int $fetch_type)', 'array')
call phpapi#function('odbc_error(', '[ resource $connection_id ])', 'string')
call phpapi#function('odbc_errormsg(', '[ resource $connection_id ])', 'string')
call phpapi#function('odbc_exec(', 'resource $connection_id , string $query_string [, int $flags ])', 'resource')
call phpapi#function('odbc_execute(', 'resource $result_id [, array $parameters_array ])', 'bool')
call phpapi#function('odbc_fetch_array(', 'resource $result [, int $rownumber ])', 'array')
call phpapi#function('odbc_fetch_into(', 'resource $result_id , array &$result_array [, int $rownumber ])', 'int')
call phpapi#function('odbc_fetch_object(', 'resource $result [, int $rownumber ])', 'object')
call phpapi#function('odbc_fetch_row(', 'resource $result_id [, int $row_number ])', 'bool')
call phpapi#function('odbc_field_len(', 'resource $result_id , int $field_number)', 'int')
call phpapi#function('odbc_field_name(', 'resource $result_id , int $field_number)', 'string')
call phpapi#function('odbc_field_num(', 'resource $result_id , string $field_name)', 'int')
call phpapi#function('odbc_field_scale(', 'resource $result_id , int $field_number)', 'int')
call phpapi#function('odbc_field_type(', 'resource $result_id , int $field_number)', 'string')
call phpapi#function('odbc_foreignkeys(', 'resource $connection_id , string $pk_qualifier , string $pk_owner , string $pk_table , string $fk_qualifier , string $fk_owner , string $fk_table)', 'resource')
call phpapi#function('odbc_free_result(', 'resource $result_id)', 'bool')
call phpapi#function('odbc_gettypeinfo(', 'resource $connection_id [, int $data_type ])', 'resource')
call phpapi#function('odbc_longreadlen(', 'resource $result_id , int $length)', 'bool')
call phpapi#function('odbc_next_result(', 'resource $result_id)', 'bool')
call phpapi#function('odbc_num_fields(', 'resource $result_id)', 'int')
call phpapi#function('odbc_num_rows(', 'resource $result_id)', 'int')
call phpapi#function('odbc_pconnect(', 'string $dsn , string $user , string $password [, int $cursor_type ])', 'resource')
call phpapi#function('odbc_prepare(', 'resource $connection_id , string $query_string)', 'resource')
call phpapi#function('odbc_primarykeys(', 'resource $connection_id , string $qualifier , string $owner , string $table)', 'resource')
call phpapi#function('odbc_procedurecolumns(', 'resource $connection_id)', 'resource')
call phpapi#function('odbc_procedures(', 'resource $connection_id)', 'resource')
call phpapi#function('odbc_result(', 'resource $result_id , mixed $field)', 'mixed')
call phpapi#function('odbc_result_all(', 'resource $result_id [, string $format ])', 'int')
call phpapi#function('odbc_rollback(', 'resource $connection_id)', 'bool')
call phpapi#function('odbc_setoption(', 'resource $id , int $function , int $option , int $param)', 'bool')
call phpapi#function('odbc_specialcolumns(', 'resource $connection_id , int $type , string $qualifier , string $owner , string $table , int $scope , int $nullable)', 'resource')
call phpapi#function('odbc_statistics(', 'resource $connection_id , string $qualifier , string $owner , string $table_name , int $unique , int $accuracy)', 'resource')
call phpapi#function('odbc_tableprivileges(', 'resource $connection_id , string $qualifier , string $owner , string $name)', 'resource')
call phpapi#function('odbc_tables(', 'resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]])', 'resource')
call phpapi#function('openal_buffer_create(', 'void)', 'resource')
call phpapi#function('openal_buffer_data(', 'resource $buffer , int $format , string $data , int $freq)', 'bool')
call phpapi#function('openal_buffer_destroy(', 'resource $buffer)', 'bool')
call phpapi#function('openal_buffer_get(', 'resource $buffer , int $property)', 'int')
call phpapi#function('openal_buffer_loadwav(', 'resource $buffer , string $wavfile)', 'bool')
call phpapi#function('openal_context_create(', 'resource $device)', 'resource')
call phpapi#function('openal_context_current(', 'resource $context)', 'bool')
call phpapi#function('openal_context_destroy(', 'resource $context)', 'bool')
call phpapi#function('openal_context_process(', 'resource $context)', 'bool')
call phpapi#function('openal_context_suspend(', 'resource $context)', 'bool')
call phpapi#function('openal_device_close(', 'resource $device)', 'bool')
call phpapi#function('openal_device_open(', '[ string $device_desc ])', 'resource')
call phpapi#function('openal_listener_get(', 'int $property)', 'mixed')
call phpapi#function('openal_listener_set(', 'int $property , mixed $setting)', 'bool')
call phpapi#function('openal_source_create(', 'void)', 'resource')
call phpapi#function('openal_source_destroy(', 'resource $source)', 'bool')
call phpapi#function('openal_source_get(', 'resource $source , int $property)', 'mixed')
call phpapi#function('openal_source_pause(', 'resource $source)', 'bool')
call phpapi#function('openal_source_play(', 'resource $source)', 'bool')
call phpapi#function('openal_source_rewind(', 'resource $source)', 'bool')
call phpapi#function('openal_source_set(', 'resource $source , int $property , mixed $setting)', 'bool')
call phpapi#function('openal_source_stop(', 'resource $source)', 'bool')
call phpapi#function('openal_stream(', 'resource $source , int $format , int $rate)', 'resource')
call phpapi#function('opendir(', 'string $path [, resource $context ])', 'resource')
call phpapi#function('openlog(', 'string $ident , int $option , int $facility)', 'bool')
call phpapi#function('openssl_cipher_iv_length(', 'string $method)', 'integer')
call phpapi#function('openssl_csr_export(', 'resource $csr , string &$out [, bool $notext = true ])', 'bool')
call phpapi#function('openssl_csr_export_to_file(', 'resource $csr , string $outfilename [, bool $notext = true ])', 'bool')
call phpapi#function('openssl_csr_get_public_key(', 'mixed $csr [, bool $use_shortnames = true ])', 'resource')
call phpapi#function('openssl_csr_get_subject(', 'mixed $csr [, bool $use_shortnames = true ])', 'array')
call phpapi#function('openssl_csr_new(', 'array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]])', 'mixed')
call phpapi#function('openssl_csr_sign(', 'mixed $csr , mixed $cacert , mixed $priv_key , int $days [, array $configargs [, int $serial = 0 ]])', 'resource')
call phpapi#function('openssl_decrypt(', 'string $data , string $method , string $password [, bool $raw_input = false [, string $iv = "" ]])', 'string')
call phpapi#function('openssl_dh_compute_key(', 'string $pub_key , resource $dh_key)', 'string')
call phpapi#function('openssl_digest(', 'string $data , string $method [, bool $raw_output = false ])', 'string')
call phpapi#function('openssl_encrypt(', 'string $data , string $method , string $password [, bool $raw_output = false [, string $iv = "" ]])', 'string')
call phpapi#function('openssl_error_string(', 'void)', 'string')
call phpapi#function('openssl_free_key(', 'resource $key_identifier)', 'void')
call phpapi#function('openssl_get_cipher_methods(', '[ bool $aliases = false ])', 'array')
call phpapi#function('openssl_get_md_methods(', '[ bool $aliases = false ])', 'array')
call phpapi#function('openssl_open(', 'string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id [, string $method ])', 'bool')
call phpapi#function('openssl_pkcs12_export(', 'mixed $x509 , string &$out , mixed $priv_key , string $pass [, array $args ])', 'bool')
call phpapi#function('openssl_pkcs12_export_to_file(', 'mixed $x509 , string $filename , mixed $priv_key , string $pass [, array $args ])', 'bool')
call phpapi#function('openssl_pkcs12_read(', 'string $pkcs12 , array &$certs , string $pass)', 'bool')
call phpapi#function('openssl_pkcs7_decrypt(', 'string $infilename , string $outfilename , mixed $recipcert [, mixed $recipkey ])', 'bool')
call phpapi#function('openssl_pkcs7_encrypt(', 'string $infile , string $outfile , mixed $recipcerts , array $headers [, int $flags = 0 [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]])', 'bool')
call phpapi#function('openssl_pkcs7_sign(', 'string $infilename , string $outfilename , mixed $signcert , mixed $privkey , array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts ]])', 'bool')
call phpapi#function('openssl_pkcs7_verify(', 'string $filename , int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content ]]]])', 'mixed')
call phpapi#function('openssl_pkey_export(', 'mixed $key , string &$out [, string $passphrase [, array $configargs ]])', 'bool')
call phpapi#function('openssl_pkey_export_to_file(', 'mixed $key , string $outfilename [, string $passphrase [, array $configargs ]])', 'bool')
call phpapi#function('openssl_pkey_free(', 'resource $key)', 'void')
call phpapi#function('openssl_pkey_get_details(', 'resource $key)', 'array')
call phpapi#function('openssl_pkey_get_private(', 'mixed $key [, string $passphrase = "" ])', 'resource')
call phpapi#function('openssl_pkey_get_public(', 'mixed $certificate)', 'resource')
call phpapi#function('openssl_pkey_new(', '[ array $configargs ])', 'resource')
call phpapi#function('openssl_private_decrypt(', 'string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])', 'bool')
call phpapi#function('openssl_private_encrypt(', 'string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])', 'bool')
call phpapi#function('openssl_public_decrypt(', 'string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])', 'bool')
call phpapi#function('openssl_public_encrypt(', 'string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ])', 'bool')
call phpapi#function('openssl_random_pseudo_bytes(', 'int $length [, bool &$crypto_strong ])', 'string')
call phpapi#function('openssl_seal(', 'string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids [, string $method ])', 'int')
call phpapi#function('openssl_sign(', 'string $data , string &$signature , mixed $priv_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ])', 'bool')
call phpapi#function('openssl_verify(', 'string $data , string $signature , mixed $pub_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ])', 'int')
call phpapi#function('openssl_x509_check_private_key(', 'mixed $cert , mixed $key)', 'bool')
call phpapi#function('openssl_x509_checkpurpose(', 'mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]])', 'int')
call phpapi#function('openssl_x509_export(', 'mixed $x509 , string &$output [, bool $notext = TRUE ])', 'bool')
call phpapi#function('openssl_x509_export_to_file(', 'mixed $x509 , string $outfilename [, bool $notext = TRUE ])', 'bool')
call phpapi#function('openssl_x509_free(', 'resource $x509cert)', 'void')
call phpapi#function('openssl_x509_parse(', 'mixed $x509cert [, bool $shortnames = true ])', 'array')
call phpapi#function('openssl_x509_read(', 'mixed $x509certdata)', 'resource')
call phpapi#function('ord(', 'string $string)', 'int')
call phpapi#function('output_add_rewrite_var(', 'string $name , string $value)', 'bool')
call phpapi#function('output_reset_rewrite_vars(', 'void)', 'bool')
call phpapi#function('overload(', 'string $class_name)', 'void')
call phpapi#function('override_function(', 'string $function_name , string $function_args , string $function_code)', 'bool')
call phpapi#function('ovrimos_close(', 'int $connection)', 'void')
call phpapi#function('ovrimos_commit(', 'int $connection_id)', 'bool')
call phpapi#function('ovrimos_connect(', 'string $host , string $dborport , string $user , string $password)', 'int')
call phpapi#function('ovrimos_cursor(', 'int $result_id)', 'string')
call phpapi#function('ovrimos_exec(', 'int $connection_id , string $query)', 'int')
call phpapi#function('ovrimos_execute(', 'int $result_id [, array $parameters_array ])', 'bool')
call phpapi#function('ovrimos_fetch_into(', 'int $result_id , array &$result_array [, string $how [, int $rownumber ]])', 'bool')
call phpapi#function('ovrimos_fetch_row(', 'int $result_id [, int $how [, int $row_number ]])', 'bool')
call phpapi#function('ovrimos_field_len(', 'int $result_id , int $field_number)', 'int')
call phpapi#function('ovrimos_field_name(', 'int $result_id , int $field_number)', 'string')
call phpapi#function('ovrimos_field_num(', 'int $result_id , string $field_name)', 'int')
call phpapi#function('ovrimos_field_type(', 'int $result_id , int $field_number)', 'int')
call phpapi#function('ovrimos_free_result(', 'int $result_id)', 'bool')
call phpapi#function('ovrimos_longreadlen(', 'int $result_id , int $length)', 'bool')
call phpapi#function('ovrimos_num_fields(', 'int $result_id)', 'int')
call phpapi#function('ovrimos_num_rows(', 'int $result_id)', 'int')
call phpapi#function('ovrimos_prepare(', 'int $connection_id , string $query)', 'int')
call phpapi#function('ovrimos_result(', 'int $result_id , mixed $field)', 'string')
call phpapi#function('ovrimos_result_all(', 'int $result_id [, string $format ])', 'int')
call phpapi#function('ovrimos_rollback(', 'int $connection_id)', 'bool')
call phpapi#function('owner_document(', 'void)', 'domdocument')
call phpapi#function('pack(', 'string $format [, mixed $args [, mixed $... ]])', 'string')
call phpapi#function('parent_node(', 'void)', 'domnode')
call phpapi#function('parse_ini_file(', 'string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]])', 'array')
call phpapi#function('parse_ini_string(', 'string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]])', 'array')
call phpapi#function('parse_str(', 'string $str [, array &$arr ])', 'void')
call phpapi#function('parse_url(', 'string $url [, int $component = -1 ])', 'mixed')
call phpapi#function('parsekit_compile_file(', 'string $filename [, array &$errors [, int $options = PARSEKIT_QUIET ]])', 'array')
call phpapi#function('parsekit_compile_string(', 'string $phpcode [, array &$errors [, int $options = PARSEKIT_QUIET ]])', 'array')
call phpapi#function('parsekit_func_arginfo(', 'mixed $function)', 'array')
call phpapi#function('passthru(', 'string $command [, int &$return_var ])', 'void')
call phpapi#function('pathinfo(', 'string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ])', 'mixed')
call phpapi#function('pclose(', 'resource $handle)', 'int')
call phpapi#function('pcntl_alarm(', 'int $seconds)', 'int')
call phpapi#function('pcntl_exec(', 'string $path [, array $args [, array $envs ]])', 'void')
call phpapi#function('pcntl_fork(', 'void)', 'int')
call phpapi#function('pcntl_getpriority(', '[ int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]])', 'int')
call phpapi#function('pcntl_setpriority(', 'int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]])', 'bool')
call phpapi#function('pcntl_signal(', 'int $signo , callback $handler [, bool $restart_syscalls = true ])', 'bool')
call phpapi#function('pcntl_signal_dispatch(', 'void)', 'bool')
call phpapi#function('pcntl_sigprocmask(', 'int $how , array $set [, array &$oldset ])', 'bool')
call phpapi#function('pcntl_sigtimedwait(', 'array $set [, array &$siginfo [, int $seconds = 0 [, int $nanoseconds = 0 ]]])', 'int')
call phpapi#function('pcntl_sigwaitinfo(', 'array $set [, array &$siginfo ])', 'int')
call phpapi#function('pcntl_wait(', 'int &$status [, int $options = 0 ])', 'int')
call phpapi#function('pcntl_waitpid(', 'int $pid , int &$status [, int $options = 0 ])', 'int')
call phpapi#function('pcntl_wexitstatus(', 'int $status)', 'int')
call phpapi#function('pcntl_wifexited(', 'int $status)', 'bool')
call phpapi#function('pcntl_wifsignaled(', 'int $status)', 'bool')
call phpapi#function('pcntl_wifstopped(', 'int $status)', 'bool')
call phpapi#function('pcntl_wstopsig(', 'int $status)', 'int')
call phpapi#function('pcntl_wtermsig(', 'int $status)', 'int')
call phpapi#function('PDF_activate_item(', 'resource $pdfdoc , int $id)', 'bool')
call phpapi#function('PDF_add_launchlink(', 'resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename)', 'bool')
call phpapi#function('PDF_add_locallink(', 'resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , int $page , string $dest)', 'bool')
call phpapi#function('PDF_add_nameddest(', 'resource $pdfdoc , string $name , string $optlist)', 'bool')
call phpapi#function('PDF_add_note(', 'resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open)', 'bool')
call phpapi#function('PDF_add_pdflink(', 'resource $pdfdoc , float $bottom_left_x , float $bottom_left_y , float $up_right_x , float $up_right_y , string $filename , int $page , string $dest)', 'bool')
call phpapi#function('PDF_add_table_cell(', 'resource $pdfdoc , int $table , int $column , int $row , string $text , string $optlist)', 'int')
call phpapi#function('PDF_add_textflow(', 'resource $pdfdoc , int $textflow , string $text , string $optlist)', 'int')
call phpapi#function('PDF_add_thumbnail(', 'resource $pdfdoc , int $image)', 'bool')
call phpapi#function('PDF_add_weblink(', 'resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , string $url)', 'bool')
call phpapi#function('PDF_arc(', 'resource $p , float $x , float $y , float $r , float $alpha , float $beta)', 'bool')
call phpapi#function('PDF_arcn(', 'resource $p , float $x , float $y , float $r , float $alpha , float $beta)', 'bool')
call phpapi#function('PDF_attach_file(', 'resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename , string $description , string $author , string $mimetype , string $icon)', 'bool')
call phpapi#function('PDF_begin_document(', 'resource $pdfdoc , string $filename , string $optlist)', 'int')
call phpapi#function('PDF_begin_font(', 'resource $pdfdoc , string $filename , float $a , float $b , float $c , float $d , float $e , float $f , string $optlist)', 'bool')
call phpapi#function('PDF_begin_glyph(', 'resource $pdfdoc , string $glyphname , float $wx , float $llx , float $lly , float $urx , float $ury)', 'bool')
call phpapi#function('PDF_begin_item(', 'resource $pdfdoc , string $tag , string $optlist)', 'int')
call phpapi#function('PDF_begin_layer(', 'resource $pdfdoc , int $layer)', 'bool')
call phpapi#function('PDF_begin_page(', 'resource $pdfdoc , float $width , float $height)', 'bool')
call phpapi#function('PDF_begin_page_ext(', 'resource $pdfdoc , float $width , float $height , string $optlist)', 'bool')
call phpapi#function('PDF_begin_pattern(', 'resource $pdfdoc , float $width , float $height , float $xstep , float $ystep , int $painttype)', 'int')
call phpapi#function('PDF_begin_template(', 'resource $pdfdoc , float $width , float $height)', 'int')
call phpapi#function('PDF_begin_template_ext(', 'resource $pdfdoc , float $width , float $height , string $optlist)', 'int')
call phpapi#function('PDF_circle(', 'resource $pdfdoc , float $x , float $y , float $r)', 'bool')
call phpapi#function('PDF_clip(', 'resource $p)', 'bool')
call phpapi#function('PDF_close(', 'resource $p)', 'bool')
call phpapi#function('PDF_close_image(', 'resource $p , int $image)', 'bool')
call phpapi#function('PDF_close_pdi(', 'resource $p , int $doc)', 'bool')
call phpapi#function('PDF_close_pdi_page(', 'resource $p , int $page)', 'bool')
call phpapi#function('PDF_closepath(', 'resource $p)', 'bool')
call phpapi#function('PDF_closepath_fill_stroke(', 'resource $p)', 'bool')
call phpapi#function('PDF_closepath_stroke(', 'resource $p)', 'bool')
call phpapi#function('PDF_concat(', 'resource $p , float $a , float $b , float $c , float $d , float $e , float $f)', 'bool')
call phpapi#function('PDF_continue_text(', 'resource $p , string $text)', 'bool')
call phpapi#function('PDF_create_3dview(', 'resource $pdfdoc , string $username , string $optlist)', 'int')
call phpapi#function('PDF_create_action(', 'resource $pdfdoc , string $type , string $optlist)', 'int')
call phpapi#function('PDF_create_annotation(', 'resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $type , string $optlist)', 'bool')
call phpapi#function('PDF_create_bookmark(', 'resource $pdfdoc , string $text , string $optlist)', 'int')
call phpapi#function('PDF_create_field(', 'resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $name , string $type , string $optlist)', 'bool')
call phpapi#function('PDF_create_fieldgroup(', 'resource $pdfdoc , string $name , string $optlist)', 'bool')
call phpapi#function('PDF_create_gstate(', 'resource $pdfdoc , string $optlist)', 'int')
call phpapi#function('PDF_create_pvf(', 'resource $pdfdoc , string $filename , string $data , string $optlist)', 'bool')
call phpapi#function('PDF_create_textflow(', 'resource $pdfdoc , string $text , string $optlist)', 'int')
call phpapi#function('PDF_curveto(', 'resource $p , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3)', 'bool')
call phpapi#function('PDF_define_layer(', 'resource $pdfdoc , string $name , string $optlist)', 'int')
call phpapi#function('PDF_delete(', 'resource $pdfdoc)', 'bool')
call phpapi#function('PDF_delete_pvf(', 'resource $pdfdoc , string $filename)', 'int')
call phpapi#function('PDF_delete_table(', 'resource $pdfdoc , int $table , string $optlist)', 'bool')
call phpapi#function('PDF_delete_textflow(', 'resource $pdfdoc , int $textflow)', 'bool')
call phpapi#function('PDF_encoding_set_char(', 'resource $pdfdoc , string $encoding , int $slot , string $glyphname , int $uv)', 'bool')
call phpapi#function('PDF_end_document(', 'resource $pdfdoc , string $optlist)', 'bool')
call phpapi#function('PDF_end_font(', 'resource $pdfdoc)', 'bool')
call phpapi#function('PDF_end_glyph(', 'resource $pdfdoc)', 'bool')
call phpapi#function('PDF_end_item(', 'resource $pdfdoc , int $id)', 'bool')
call phpapi#function('PDF_end_layer(', 'resource $pdfdoc)', 'bool')
call phpapi#function('PDF_end_page(', 'resource $p)', 'bool')
call phpapi#function('PDF_end_page_ext(', 'resource $pdfdoc , string $optlist)', 'bool')
call phpapi#function('PDF_end_pattern(', 'resource $p)', 'bool')
call phpapi#function('PDF_end_template(', 'resource $p)', 'bool')
call phpapi#function('PDF_endpath(', 'resource $p)', 'bool')
call phpapi#function('PDF_fill(', 'resource $p)', 'bool')
call phpapi#function('PDF_fill_imageblock(', 'resource $pdfdoc , int $page , string $blockname , int $image , string $optlist)', 'int')
call phpapi#function('PDF_fill_pdfblock(', 'resource $pdfdoc , int $page , string $blockname , int $contents , string $optlist)', 'int')
call phpapi#function('PDF_fill_stroke(', 'resource $p)', 'bool')
call phpapi#function('PDF_fill_textblock(', 'resource $pdfdoc , int $page , string $blockname , string $text , string $optlist)', 'int')
call phpapi#function('PDF_findfont(', 'resource $p , string $fontname , string $encoding , int $embed)', 'int')
call phpapi#function('PDF_fit_image(', 'resource $pdfdoc , int $image , float $x , float $y , string $optlist)', 'bool')
call phpapi#function('PDF_fit_pdi_page(', 'resource $pdfdoc , int $page , float $x , float $y , string $optlist)', 'bool')
call phpapi#function('PDF_fit_table(', 'resource $pdfdoc , int $table , float $llx , float $lly , float $urx , float $ury , string $optlist)', 'string')
call phpapi#function('PDF_fit_textflow(', 'resource $pdfdoc , int $textflow , float $llx , float $lly , float $urx , float $ury , string $optlist)', 'string')
call phpapi#function('PDF_fit_textline(', 'resource $pdfdoc , string $text , float $x , float $y , string $optlist)', 'bool')
call phpapi#function('PDF_get_apiname(', 'resource $pdfdoc)', 'string')
call phpapi#function('PDF_get_buffer(', 'resource $p)', 'string')
call phpapi#function('PDF_get_errmsg(', 'resource $pdfdoc)', 'string')
call phpapi#function('PDF_get_errnum(', 'resource $pdfdoc)', 'int')
call phpapi#function('PDF_get_majorversion(', 'void)', 'int')
call phpapi#function('PDF_get_minorversion(', 'void)', 'int')
call phpapi#function('PDF_get_parameter(', 'resource $p , string $key , float $modifier)', 'string')
call phpapi#function('PDF_get_pdi_parameter(', 'resource $p , string $key , int $doc , int $page , int $reserved)', 'string')
call phpapi#function('PDF_get_pdi_value(', 'resource $p , string $key , int $doc , int $page , int $reserved)', 'float')
call phpapi#function('PDF_get_value(', 'resource $p , string $key , float $modifier)', 'float')
call phpapi#function('PDF_info_font(', 'resource $pdfdoc , int $font , string $keyword , string $optlist)', 'float')
call phpapi#function('PDF_info_matchbox(', 'resource $pdfdoc , string $boxname , int $num , string $keyword)', 'float')
call phpapi#function('PDF_info_table(', 'resource $pdfdoc , int $table , string $keyword)', 'float')
call phpapi#function('PDF_info_textflow(', 'resource $pdfdoc , int $textflow , string $keyword)', 'float')
call phpapi#function('PDF_info_textline(', 'resource $pdfdoc , string $text , string $keyword , string $optlist)', 'float')
call phpapi#function('PDF_initgraphics(', 'resource $p)', 'bool')
call phpapi#function('PDF_lineto(', 'resource $p , float $x , float $y)', 'bool')
call phpapi#function('PDF_load_3ddata(', 'resource $pdfdoc , string $filename , string $optlist)', 'int')
call phpapi#function('PDF_load_font(', 'resource $pdfdoc , string $fontname , string $encoding , string $optlist)', 'int')
call phpapi#function('PDF_load_iccprofile(', 'resource $pdfdoc , string $profilename , string $optlist)', 'int')
call phpapi#function('PDF_load_image(', 'resource $pdfdoc , string $imagetype , string $filename , string $optlist)', 'int')
call phpapi#function('PDF_makespotcolor(', 'resource $p , string $spotname)', 'int')
call phpapi#function('PDF_moveto(', 'resource $p , float $x , float $y)', 'bool')
call phpapi#function('PDF_new(', 'void)', 'resource')
call phpapi#function('PDF_open_ccitt(', 'resource $pdfdoc , string $filename , int $width , int $height , int $BitReverse , int $k , int $Blackls1)', 'int')
call phpapi#function('PDF_open_file(', 'resource $p , string $filename)', 'bool')
call phpapi#function('PDF_open_image(', 'resource $p , string $imagetype , string $source , string $data , int $length , int $width , int $height , int $components , int $bpc , string $params)', 'int')
call phpapi#function('PDF_open_image_file(', 'resource $p , string $imagetype , string $filename , string $stringparam , int $intparam)', 'int')
call phpapi#function('PDF_open_memory_image(', 'resource $p , resource $image)', 'int')
call phpapi#function('PDF_open_pdi(', 'resource $pdfdoc , string $filename , string $optlist , int $len)', 'int')
call phpapi#function('PDF_open_pdi_document(', 'resource $p , string $filename , string $optlist)', 'int')
call phpapi#function('PDF_open_pdi_page(', 'resource $p , int $doc , int $pagenumber , string $optlist)', 'int')
call phpapi#function('PDF_pcos_get_number(', 'resource $p , int $doc , string $path)', 'float')
call phpapi#function('PDF_pcos_get_stream(', 'resource $p , int $doc , string $optlist , string $path)', 'string')
call phpapi#function('PDF_pcos_get_string(', 'resource $p , int $doc , string $path)', 'string')
call phpapi#function('PDF_place_image(', 'resource $pdfdoc , int $image , float $x , float $y , float $scale)', 'bool')
call phpapi#function('PDF_place_pdi_page(', 'resource $pdfdoc , int $page , float $x , float $y , float $sx , float $sy)', 'bool')
call phpapi#function('PDF_process_pdi(', 'resource $pdfdoc , int $doc , int $page , string $optlist)', 'int')
call phpapi#function('PDF_rect(', 'resource $p , float $x , float $y , float $width , float $height)', 'bool')
call phpapi#function('PDF_resume_page(', 'resource $pdfdoc , string $optlist)', 'bool')
call phpapi#function('PDF_rotate(', 'resource $p , float $phi)', 'bool')
call phpapi#function('PDF_save(', 'resource $p)', 'bool')
call phpapi#function('PDF_scale(', 'resource $p , float $sx , float $sy)', 'bool')
call phpapi#function('PDF_set_border_color(', 'resource $p , float $red , float $green , float $blue)', 'bool')
call phpapi#function('PDF_set_border_dash(', 'resource $pdfdoc , float $black , float $white)', 'bool')
call phpapi#function('PDF_set_border_style(', 'resource $pdfdoc , string $style , float $width)', 'bool')
call phpapi#function('PDF_set_gstate(', 'resource $pdfdoc , int $gstate)', 'bool')
call phpapi#function('PDF_set_info(', 'resource $p , string $key , string $value)', 'bool')
call phpapi#function('PDF_set_layer_dependency(', 'resource $pdfdoc , string $type , string $optlist)', 'bool')
call phpapi#function('PDF_set_parameter(', 'resource $p , string $key , string $value)', 'bool')
call phpapi#function('PDF_set_text_pos(', 'resource $p , float $x , float $y)', 'bool')
call phpapi#function('PDF_set_value(', 'resource $p , string $key , float $value)', 'bool')
call phpapi#function('PDF_setcolor(', 'resource $p , string $fstype , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4)', 'bool')
call phpapi#function('PDF_setdash(', 'resource $pdfdoc , float $b , float $w)', 'bool')
call phpapi#function('PDF_setdashpattern(', 'resource $pdfdoc , string $optlist)', 'bool')
call phpapi#function('PDF_setflat(', 'resource $pdfdoc , float $flatness)', 'bool')
call phpapi#function('PDF_setfont(', 'resource $pdfdoc , int $font , float $fontsize)', 'bool')
call phpapi#function('PDF_setgray(', 'resource $p , float $g)', 'bool')
call phpapi#function('PDF_setgray_fill(', 'resource $p , float $g)', 'bool')
call phpapi#function('PDF_setgray_stroke(', 'resource $p , float $g)', 'bool')
call phpapi#function('PDF_setlinecap(', 'resource $p , int $linecap)', 'bool')
call phpapi#function('PDF_setlinejoin(', 'resource $p , int $value)', 'bool')
call phpapi#function('PDF_setlinewidth(', 'resource $p , float $width)', 'bool')
call phpapi#function('PDF_setmatrix(', 'resource $p , float $a , float $b , float $c , float $d , float $e , float $f)', 'bool')
call phpapi#function('PDF_setmiterlimit(', 'resource $pdfdoc , float $miter)', 'bool')
call phpapi#function('PDF_setrgbcolor(', 'resource $p , float $red , float $green , float $blue)', 'bool')
call phpapi#function('PDF_setrgbcolor_fill(', 'resource $p , float $red , float $green , float $blue)', 'bool')
call phpapi#function('PDF_setrgbcolor_stroke(', 'resource $p , float $red , float $green , float $blue)', 'bool')
call phpapi#function('PDF_shading(', 'resource $pdfdoc , string $shtype , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist)', 'int')
call phpapi#function('PDF_shading_pattern(', 'resource $pdfdoc , int $shading , string $optlist)', 'int')
call phpapi#function('PDF_shfill(', 'resource $pdfdoc , int $shading)', 'bool')
call phpapi#function('PDF_show(', 'resource $pdfdoc , string $text)', 'bool')
call phpapi#function('PDF_show_boxed(', 'resource $p , string $text , float $left , float $top , float $width , float $height , string $mode , string $feature)', 'int')
call phpapi#function('PDF_show_xy(', 'resource $p , string $text , float $x , float $y)', 'bool')
call phpapi#function('PDF_skew(', 'resource $p , float $alpha , float $beta)', 'bool')
call phpapi#function('PDF_stringwidth(', 'resource $p , string $text , int $font , float $fontsize)', 'float')
call phpapi#function('PDF_stroke(', 'resource $p)', 'bool')
call phpapi#function('PDF_suspend_page(', 'resource $pdfdoc , string $optlist)', 'bool')
call phpapi#function('PDF_translate(', 'resource $p , float $tx , float $ty)', 'bool')
call phpapi#function('PDF_utf16_to_utf8(', 'resource $pdfdoc , string $utf16string)', 'string')
call phpapi#function('PDF_utf32_to_utf16(', 'resource $pdfdoc , string $utf32string , string $ordering)', 'string')
call phpapi#function('PDF_utf8_to_utf16(', 'resource $pdfdoc , string $utf8string , string $ordering)', 'string')
call phpapi#function('pfsockopen(', 'string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]])', 'resource')
call phpapi#function('pg_affected_rows(', 'resource $result)', 'int')
call phpapi#function('pg_cancel_query(', 'resource $connection)', 'bool')
call phpapi#function('pg_client_encoding(', '[ resource $connection ])', 'string')
call phpapi#function('pg_close(', '[ resource $connection ])', 'bool')
call phpapi#function('pg_connect(', 'string $connection_string [, int $connect_type ])', 'resource')
call phpapi#function('pg_connection_busy(', 'resource $connection)', 'bool')
call phpapi#function('pg_connection_reset(', 'resource $connection)', 'bool')
call phpapi#function('pg_connection_status(', 'resource $connection)', 'int')
call phpapi#function('pg_convert(', 'resource $connection , string $table_name , array $assoc_array [, int $options = 0 ])', 'array')
call phpapi#function('pg_copy_from(', 'resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]])', 'bool')
call phpapi#function('pg_copy_to(', 'resource $connection , string $table_name [, string $delimiter [, string $null_as ]])', 'array')
call phpapi#function('pg_dbname(', '[ resource $connection ])', 'string')
call phpapi#function('pg_delete(', 'resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ])', 'mixed')
call phpapi#function('pg_end_copy(', '[ resource $connection ])', 'bool')
call phpapi#function('pg_escape_bytea(', '[ resource $connection ], string $data)', 'string')
call phpapi#function('pg_escape_string(', '[ resource $connection ], string $data)', 'string')
call phpapi#function('pg_execute(', '[ resource $connection ], string $stmtname , array $params)', 'resource')
call phpapi#function('pg_fetch_all(', 'resource $result)', 'array')
call phpapi#function('pg_fetch_all_columns(', 'resource $result [, int $column = 0 ])', 'array')
call phpapi#function('pg_fetch_array(', 'resource $result [, int $row [, int $result_type = PGSQL_BOTH ]])', 'array')
call phpapi#function('pg_fetch_assoc(', 'resource $result [, int $row ])', 'array')
call phpapi#function('pg_fetch_object(', 'resource $result [, int $row [, int $result_type = PGSQL_ASSOC ]])', 'object')
call phpapi#function('pg_fetch_result(', 'resource $result , int $row , mixed $field)', 'string')
call phpapi#function('pg_fetch_row(', 'resource $result [, int $row ])', 'array')
call phpapi#function('pg_field_is_null(', 'resource $result , int $row , mixed $field)', 'int')
call phpapi#function('pg_field_name(', 'resource $result , int $field_number)', 'string')
call phpapi#function('pg_field_num(', 'resource $result , string $field_name)', 'int')
call phpapi#function('pg_field_prtlen(', 'resource $result , int $row_number , mixed $field_name_or_number)', 'int')
call phpapi#function('pg_field_size(', 'resource $result , int $field_number)', 'int')
call phpapi#function('pg_field_table(', 'resource $result , int $field_number [, bool $oid_only = false ])', 'mixed')
call phpapi#function('pg_field_type(', 'resource $result , int $field_number)', 'string')
call phpapi#function('pg_field_type_oid(', 'resource $result , int $field_number)', 'int')
call phpapi#function('pg_free_result(', 'resource $result)', 'bool')
call phpapi#function('pg_get_notify(', 'resource $connection [, int $result_type ])', 'array')
call phpapi#function('pg_get_pid(', 'resource $connection)', 'int')
call phpapi#function('pg_get_result(', '[ resource $connection ])', 'resource')
call phpapi#function('pg_host(', '[ resource $connection ])', 'string')
call phpapi#function('pg_insert(', 'resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ])', 'mixed')
call phpapi#function('pg_last_error(', '[ resource $connection ])', 'string')
call phpapi#function('pg_last_notice(', 'resource $connection)', 'string')
call phpapi#function('pg_last_oid(', 'resource $result)', 'string')
call phpapi#function('pg_lo_close(', 'resource $large_object)', 'bool')
call phpapi#function('pg_lo_create(', '[ resource $connection [, mixed $object_id ]])', 'int')
call phpapi#function('pg_lo_export(', '[ resource $connection ], int $oid , string $pathname)', 'bool')
call phpapi#function('pg_lo_import(', '[ resource $connection ], string $pathname [, mixed $object_id ])', 'int')
call phpapi#function('pg_lo_open(', 'resource $connection , int $oid , string $mode)', 'resource')
call phpapi#function('pg_lo_read(', 'resource $large_object [, int $len = 8192 ])', 'string')
call phpapi#function('pg_lo_read_all(', 'resource $large_object)', 'int')
call phpapi#function('pg_lo_seek(', 'resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ])', 'bool')
call phpapi#function('pg_lo_tell(', 'resource $large_object)', 'int')
call phpapi#function('pg_lo_unlink(', 'resource $connection , int $oid)', 'bool')
call phpapi#function('pg_lo_write(', 'resource $large_object , string $data [, int $len ])', 'int')
call phpapi#function('pg_meta_data(', 'resource $connection , string $table_name)', 'array')
call phpapi#function('pg_num_fields(', 'resource $result)', 'int')
call phpapi#function('pg_num_rows(', 'resource $result)', 'int')
call phpapi#function('pg_options(', '[ resource $connection ])', 'string')
call phpapi#function('pg_parameter_status(', '[ resource $connection ], string $param_name)', 'string')
call phpapi#function('pg_pconnect(', 'string $connection_string [, int $connect_type ])', 'resource')
call phpapi#function('pg_ping(', '[ resource $connection ])', 'bool')
call phpapi#function('pg_port(', '[ resource $connection ])', 'int')
call phpapi#function('pg_prepare(', '[ resource $connection ], string $stmtname , string $query)', 'resource')
call phpapi#function('pg_put_line(', '[ resource $connection ], string $data)', 'bool')
call phpapi#function('pg_query(', '[ resource $connection ], string $query)', 'resource')
call phpapi#function('pg_query_params(', '[ resource $connection ], string $query , array $params)', 'resource')
call phpapi#function('pg_result_error(', 'resource $result)', 'string')
call phpapi#function('pg_result_error_field(', 'resource $result , int $fieldcode)', 'string')
call phpapi#function('pg_result_seek(', 'resource $result , int $offset)', 'bool')
call phpapi#function('pg_result_status(', 'resource $result [, int $type = PGSQL_STATUS_LONG ])', 'mixed')
call phpapi#function('pg_select(', 'resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ])', 'mixed')
call phpapi#function('pg_send_execute(', 'resource $connection , string $stmtname , array $params)', 'bool')
call phpapi#function('pg_send_prepare(', 'resource $connection , string $stmtname , string $query)', 'bool')
call phpapi#function('pg_send_query(', 'resource $connection , string $query)', 'bool')
call phpapi#function('pg_send_query_params(', 'resource $connection , string $query , array $params)', 'bool')
call phpapi#function('pg_set_client_encoding(', '[ resource $connection ], string $encoding)', 'int')
call phpapi#function('pg_set_error_verbosity(', '[ resource $connection ], int $verbosity)', 'int')
call phpapi#function('pg_trace(', 'string $pathname [, string $mode = "w" [, resource $connection ]])', 'bool')
call phpapi#function('pg_transaction_status(', 'resource $connection)', 'int')
call phpapi#function('pg_tty(', '[ resource $connection ])', 'string')
call phpapi#function('pg_unescape_bytea(', 'string $data)', 'string')
call phpapi#function('pg_untrace(', '[ resource $connection ])', 'bool')
call phpapi#function('pg_update(', 'resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ])', 'mixed')
call phpapi#function('pg_version(', '[ resource $connection ])', 'array')
call phpapi#function('php_check_syntax(', 'string $filename [, string &$error_message ])', 'bool')
call phpapi#function('php_ini_loaded_file(', 'void)', 'string')
call phpapi#function('php_ini_scanned_files(', 'void)', 'string')
call phpapi#function('php_logo_guid(', 'void)', 'string')
call phpapi#function('php_sapi_name(', 'void)', 'string')
call phpapi#function('php_strip_whitespace(', 'string $filename)', 'string')
call phpapi#function('php_uname(', '[ string $mode = "a" ])', 'string')
call phpapi#function('phpcredits(', '[ int $flag = CREDITS_ALL ])', 'bool')
call phpapi#function('phpinfo(', '[ int $what = INFO_ALL ])', 'bool')
call phpapi#function('phpversion(', '[ string $extension ])', 'string')
call phpapi#function('pi(', 'void)', 'float')
call phpapi#function('png2wbmp(', 'string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold)', 'bool')
call phpapi#function('popen(', 'string $command , string $mode)', 'resource')
call phpapi#function('posix_access(', 'string $file [, int $mode = POSIX_F_OK ])', 'bool')
call phpapi#function('posix_ctermid(', 'void)', 'string')
call phpapi#function('posix_get_last_error(', 'void)', 'int')
call phpapi#function('posix_getcwd(', 'void)', 'string')
call phpapi#function('posix_getegid(', 'void)', 'int')
call phpapi#function('posix_geteuid(', 'void)', 'int')
call phpapi#function('posix_getgid(', 'void)', 'int')
call phpapi#function('posix_getgrgid(', 'int $gid)', 'array')
call phpapi#function('posix_getgrnam(', 'string $name)', 'array')
call phpapi#function('posix_getgroups(', 'void)', 'array')
call phpapi#function('posix_getlogin(', 'void)', 'string')
call phpapi#function('posix_getpgid(', 'int $pid)', 'int')
call phpapi#function('posix_getpgrp(', 'void)', 'int')
call phpapi#function('posix_getpid(', 'void)', 'int')
call phpapi#function('posix_getppid(', 'void)', 'int')
call phpapi#function('posix_getpwnam(', 'string $username)', 'array')
call phpapi#function('posix_getpwuid(', 'int $uid)', 'array')
call phpapi#function('posix_getrlimit(', 'void)', 'array')
call phpapi#function('posix_getsid(', 'int $pid)', 'int')
call phpapi#function('posix_getuid(', 'void)', 'int')
call phpapi#function('posix_initgroups(', 'string $name , int $base_group_id)', 'bool')
call phpapi#function('posix_isatty(', 'int $fd)', 'bool')
call phpapi#function('posix_kill(', 'int $pid , int $sig)', 'bool')
call phpapi#function('posix_mkfifo(', 'string $pathname , int $mode)', 'bool')
call phpapi#function('posix_mknod(', 'string $pathname , int $mode [, int $major = 0 [, int $minor = 0 ]])', 'bool')
call phpapi#function('posix_setegid(', 'int $gid)', 'bool')
call phpapi#function('posix_seteuid(', 'int $uid)', 'bool')
call phpapi#function('posix_setgid(', 'int $gid)', 'bool')
call phpapi#function('posix_setpgid(', 'int $pid , int $pgid)', 'bool')
call phpapi#function('posix_setsid(', 'void)', 'int')
call phpapi#function('posix_setuid(', 'int $uid)', 'bool')
call phpapi#function('posix_strerror(', 'int $errno)', 'string')
call phpapi#function('posix_times(', 'void)', 'array')
call phpapi#function('posix_ttyname(', 'int $fd)', 'string')
call phpapi#function('posix_uname(', 'void)', 'array')
call phpapi#function('pow(', 'number $base , number $exp)', 'number')
call phpapi#function('prefix(', 'void)', 'string')
call phpapi#function('preg_filter(', 'mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]])', 'mixed')
call phpapi#function('preg_grep(', 'string $pattern , array $input [, int $flags = 0 ])', 'array')
call phpapi#function('preg_last_error(', 'void)', 'int')
call phpapi#function('preg_match(', 'string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]])', 'int')
call phpapi#function('preg_match_all(', 'string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]])', 'int')
call phpapi#function('preg_quote(', 'string $str [, string $delimiter = NULL ])', 'string')
call phpapi#function('preg_replace(', 'mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]])', 'mixed')
call phpapi#function('preg_replace_callback(', 'mixed $pattern , callback $callback , mixed $subject [, int $limit = -1 [, int &$count ]])', 'mixed')
call phpapi#function('preg_split(', 'string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]])', 'array')
call phpapi#function('prepare(', '[ string $query ])', 'object')
call phpapi#function('prev(', 'array &$array)', 'mixed')
call phpapi#function('previous_sibling(', 'void)', 'domelement')
call phpapi#function('print(', 'string $arg)', 'int')
call phpapi#function('print_r(', 'mixed $expression [, bool $return = false ])', 'mixed')
call phpapi#function('printer_abort(', 'resource $printer_handle)', 'void')
call phpapi#function('printer_close(', 'resource $printer_handle)', 'void')
call phpapi#function('printer_create_brush(', 'int $style , string $color)', 'resource')
call phpapi#function('printer_create_dc(', 'resource $printer_handle)', 'void')
call phpapi#function('printer_create_font(', 'string $face , int $height , int $width , int $font_weight , bool $italic , bool $underline , bool $strikeout , int $orientation)', 'resource')
call phpapi#function('printer_create_pen(', 'int $style , int $width , string $color)', 'resource')
call phpapi#function('printer_delete_brush(', 'resource $brush_handle)', 'void')
call phpapi#function('printer_delete_dc(', 'resource $printer_handle)', 'bool')
call phpapi#function('printer_delete_font(', 'resource $font_handle)', 'void')
call phpapi#function('printer_delete_pen(', 'resource $pen_handle)', 'void')
call phpapi#function('printer_draw_bmp(', 'resource $printer_handle , string $filename , int $x , int $y [, int $width ], int $height)', 'bool')
call phpapi#function('printer_draw_chord(', 'resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad_x , int $rad_y , int $rad_x1 , int $rad_y1)', 'void')
call phpapi#function('printer_draw_elipse(', 'resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y)', 'void')
call phpapi#function('printer_draw_line(', 'resource $printer_handle , int $from_x , int $from_y , int $to_x , int $to_y)', 'void')
call phpapi#function('printer_draw_pie(', 'resource $printer_handle , int $rec_x , int $rec_y , int $rec_x1 , int $rec_y1 , int $rad1_x , int $rad1_y , int $rad2_x , int $rad2_y)', 'void')
call phpapi#function('printer_draw_rectangle(', 'resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y)', 'void')
call phpapi#function('printer_draw_roundrect(', 'resource $printer_handle , int $ul_x , int $ul_y , int $lr_x , int $lr_y , int $width , int $height)', 'void')
call phpapi#function('printer_draw_text(', 'resource $printer_handle , string $text , int $x , int $y)', 'void')
call phpapi#function('printer_end_doc(', 'resource $printer_handle)', 'bool')
call phpapi#function('printer_end_page(', 'resource $printer_handle)', 'bool')
call phpapi#function('printer_get_option(', 'resource $printer_handle , string $option)', 'mixed')
call phpapi#function('printer_list(', 'int $enumtype [, string $name [, int $level ]])', 'array')
call phpapi#function('printer_logical_fontheight(', 'resource $printer_handle , int $height)', 'int')
call phpapi#function('printer_open(', '[ string $printername ])', 'resource')
call phpapi#function('printer_select_brush(', 'resource $printer_handle , resource $brush_handle)', 'void')
call phpapi#function('printer_select_font(', 'resource $printer_handle , resource $font_handle)', 'void')
call phpapi#function('printer_select_pen(', 'resource $printer_handle , resource $pen_handle)', 'void')
call phpapi#function('printer_set_option(', 'resource $printer_handle , int $option , mixed $value)', 'bool')
call phpapi#function('printer_start_doc(', 'resource $printer_handle [, string $document ])', 'bool')
call phpapi#function('printer_start_page(', 'resource $printer_handle)', 'bool')
call phpapi#function('printer_write(', 'resource $printer_handle , string $content)', 'bool')
call phpapi#function('printf(', 'string $format [, mixed $args [, mixed $... ]])', 'int')
call phpapi#function('proc_close(', 'resource $process)', 'int')
call phpapi#function('proc_get_status(', 'resource $process)', 'array')
call phpapi#function('proc_nice(', 'int $increment)', 'bool')
call phpapi#function('proc_open(', 'string $cmd , array $descriptorspec , array &$pipes [, string $cwd [, array $env [, array $other_options ]]])', 'resource')
call phpapi#function('proc_terminate(', 'resource $process [, int $signal = 15 ])', 'bool')
call phpapi#function('property_exists(', 'mixed $class , string $property)', 'bool')
call phpapi#function('ps_add_bookmark(', 'resource $psdoc , string $text [, int $parent = 0 [, int $open = 0 ]])', 'int')
call phpapi#function('ps_add_launchlink(', 'resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename)', 'bool')
call phpapi#function('ps_add_locallink(', 'resource $psdoc , float $llx , float $lly , float $urx , float $ury , int $page , string $dest)', 'bool')
call phpapi#function('ps_add_note(', 'resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open)', 'bool')
call phpapi#function('ps_add_pdflink(', 'resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename , int $page , string $dest)', 'bool')
call phpapi#function('ps_add_weblink(', 'resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $url)', 'bool')
call phpapi#function('ps_arc(', 'resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta)', 'bool')
call phpapi#function('ps_arcn(', 'resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta)', 'bool')
call phpapi#function('ps_begin_page(', 'resource $psdoc , float $width , float $height)', 'bool')
call phpapi#function('ps_begin_pattern(', 'resource $psdoc , float $width , float $height , float $xstep , float $ystep , int $painttype)', 'int')
call phpapi#function('ps_begin_template(', 'resource $psdoc , float $width , float $height)', 'int')
call phpapi#function('ps_circle(', 'resource $psdoc , float $x , float $y , float $radius)', 'bool')
call phpapi#function('ps_clip(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_close(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_close_image(', 'resource $psdoc , int $imageid)', 'void')
call phpapi#function('ps_closepath(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_closepath_stroke(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_continue_text(', 'resource $psdoc , string $text)', 'bool')
call phpapi#function('ps_curveto(', 'resource $psdoc , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3)', 'bool')
call phpapi#function('ps_delete(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_end_page(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_end_pattern(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_end_template(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_fill(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_fill_stroke(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_findfont(', 'resource $psdoc , string $fontname , string $encoding [, bool $embed = false ])', 'int')
call phpapi#function('ps_get_buffer(', 'resource $psdoc)', 'string')
call phpapi#function('ps_get_parameter(', 'resource $psdoc , string $name [, float $modifier ])', 'string')
call phpapi#function('ps_get_value(', 'resource $psdoc , string $name [, float $modifier ])', 'float')
call phpapi#function('ps_hyphenate(', 'resource $psdoc , string $text)', 'array')
call phpapi#function('ps_include_file(', 'resource $psdoc , string $file)', 'bool')
call phpapi#function('ps_lineto(', 'resource $psdoc , float $x , float $y)', 'bool')
call phpapi#function('ps_makespotcolor(', 'resource $psdoc , string $name [, int $reserved = 0 ])', 'int')
call phpapi#function('ps_moveto(', 'resource $psdoc , float $x , float $y)', 'bool')
call phpapi#function('ps_new(', 'void)', 'resource')
call phpapi#function('ps_open_file(', 'resource $psdoc [, string $filename ])', 'bool')
call phpapi#function('ps_open_image(', 'resource $psdoc , string $type , string $source , string $data , int $lenght , int $width , int $height , int $components , int $bpc , string $params)', 'int')
call phpapi#function('ps_open_image_file(', 'resource $psdoc , string $type , string $filename [, string $stringparam [, int $intparam = 0 ]])', 'int')
call phpapi#function('ps_open_memory_image(', 'resource $psdoc , int $gd)', 'int')
call phpapi#function('ps_place_image(', 'resource $psdoc , int $imageid , float $x , float $y , float $scale)', 'bool')
call phpapi#function('ps_rect(', 'resource $psdoc , float $x , float $y , float $width , float $height)', 'bool')
call phpapi#function('ps_restore(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_rotate(', 'resource $psdoc , float $rot)', 'bool')
call phpapi#function('ps_save(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_scale(', 'resource $psdoc , float $x , float $y)', 'bool')
call phpapi#function('ps_set_border_color(', 'resource $psdoc , float $red , float $green , float $blue)', 'bool')
call phpapi#function('ps_set_border_dash(', 'resource $psdoc , float $black , float $white)', 'bool')
call phpapi#function('ps_set_border_style(', 'resource $psdoc , string $style , float $width)', 'bool')
call phpapi#function('ps_set_info(', 'resource $p , string $key , string $val)', 'bool')
call phpapi#function('ps_set_parameter(', 'resource $psdoc , string $name , string $value)', 'bool')
call phpapi#function('ps_set_text_pos(', 'resource $psdoc , float $x , float $y)', 'bool')
call phpapi#function('ps_set_value(', 'resource $psdoc , string $name , float $value)', 'bool')
call phpapi#function('ps_setcolor(', 'resource $psdoc , string $type , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4)', 'bool')
call phpapi#function('ps_setdash(', 'resource $psdoc , float $on , float $off)', 'bool')
call phpapi#function('ps_setflat(', 'resource $psdoc , float $value)', 'bool')
call phpapi#function('ps_setfont(', 'resource $psdoc , int $fontid , float $size)', 'bool')
call phpapi#function('ps_setgray(', 'resource $psdoc , float $gray)', 'bool')
call phpapi#function('ps_setlinecap(', 'resource $psdoc , int $type)', 'bool')
call phpapi#function('ps_setlinejoin(', 'resource $psdoc , int $type)', 'bool')
call phpapi#function('ps_setlinewidth(', 'resource $psdoc , float $width)', 'bool')
call phpapi#function('ps_setmiterlimit(', 'resource $psdoc , float $value)', 'bool')
call phpapi#function('ps_setoverprintmode(', 'resource $psdoc , int $mode)', 'bool')
call phpapi#function('ps_setpolydash(', 'resource $psdoc , float $arr)', 'bool')
call phpapi#function('ps_shading(', 'resource $psdoc , string $type , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist)', 'int')
call phpapi#function('ps_shading_pattern(', 'resource $psdoc , int $shadingid , string $optlist)', 'int')
call phpapi#function('ps_shfill(', 'resource $psdoc , int $shadingid)', 'bool')
call phpapi#function('ps_show(', 'resource $psdoc , string $text)', 'bool')
call phpapi#function('ps_show_boxed(', 'resource $psdoc , string $text , float $left , float $bottom , float $width , float $height , string $hmode [, string $feature ])', 'int')
call phpapi#function('ps_show_xy(', 'resource $psdoc , string $text , float $x , float $y)', 'bool')
call phpapi#function('ps_show_xy2(', 'resource $psdoc , string $text , int $len , float $xcoor , float $ycoor)', 'bool')
call phpapi#function('ps_show2(', 'resource $psdoc , string $text , int $len)', 'bool')
call phpapi#function('ps_string_geometry(', 'resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]])', 'array')
call phpapi#function('ps_stringwidth(', 'resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]])', 'float')
call phpapi#function('ps_stroke(', 'resource $psdoc)', 'bool')
call phpapi#function('ps_symbol(', 'resource $psdoc , int $ord)', 'bool')
call phpapi#function('ps_symbol_name(', 'resource $psdoc , int $ord [, int $fontid = 0 ])', 'string')
call phpapi#function('ps_symbol_width(', 'resource $psdoc , int $ord [, int $fontid = 0 [, float $size = 0.0 ]])', 'float')
call phpapi#function('ps_translate(', 'resource $psdoc , float $x , float $y)', 'bool')
call phpapi#function('pspell_add_to_personal(', 'int $dictionary_link , string $word)', 'bool')
call phpapi#function('pspell_add_to_session(', 'int $dictionary_link , string $word)', 'bool')
call phpapi#function('pspell_check(', 'int $dictionary_link , string $word)', 'bool')
call phpapi#function('pspell_clear_session(', 'int $dictionary_link)', 'bool')
call phpapi#function('pspell_config_create(', 'string $language [, string $spelling [, string $jargon [, string $encoding ]]])', 'int')
call phpapi#function('pspell_config_data_dir(', 'int $conf , string $directory)', 'bool')
call phpapi#function('pspell_config_dict_dir(', 'int $conf , string $directory)', 'bool')
call phpapi#function('pspell_config_ignore(', 'int $dictionary_link , int $n)', 'bool')
call phpapi#function('pspell_config_mode(', 'int $dictionary_link , int $mode)', 'bool')
call phpapi#function('pspell_config_personal(', 'int $dictionary_link , string $file)', 'bool')
call phpapi#function('pspell_config_repl(', 'int $dictionary_link , string $file)', 'bool')
call phpapi#function('pspell_config_runtogether(', 'int $dictionary_link , bool $flag)', 'bool')
call phpapi#function('pspell_config_save_repl(', 'int $dictionary_link , bool $flag)', 'bool')
call phpapi#function('pspell_new(', 'string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]])', 'int')
call phpapi#function('pspell_new_config(', 'int $config)', 'int')
call phpapi#function('pspell_new_personal(', 'string $personal , string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]])', 'int')
call phpapi#function('pspell_save_wordlist(', 'int $dictionary_link)', 'bool')
call phpapi#function('pspell_store_replacement(', 'int $dictionary_link , string $misspelled , string $correct)', 'bool')
call phpapi#function('pspell_suggest(', 'int $dictionary_link , string $word)', 'array')
call phpapi#function('putenv(', 'string $setting)', 'bool')
call phpapi#function('px_close(', 'resource $pxdoc)', 'bool')
call phpapi#function('px_create_fp(', 'resource $pxdoc , resource $file , array $fielddesc)', 'bool')
call phpapi#function('px_date2string(', 'resource $pxdoc , int $value , string $format)', 'string')
call phpapi#function('px_delete(', 'resource $pxdoc)', 'bool')
call phpapi#function('px_delete_record(', 'resource $pxdoc , int $num)', 'bool')
call phpapi#function('px_get_field(', 'resource $pxdoc , int $fieldno)', 'array')
call phpapi#function('px_get_info(', 'resource $pxdoc)', 'array')
call phpapi#function('px_get_parameter(', 'resource $pxdoc , string $name)', 'string')
call phpapi#function('px_get_record(', 'resource $pxdoc , int $num [, int $mode = 0 ])', 'array')
call phpapi#function('px_get_schema(', 'resource $pxdoc [, int $mode = 0 ])', 'array')
call phpapi#function('px_get_value(', 'resource $pxdoc , string $name)', 'float')
call phpapi#function('px_insert_record(', 'resource $pxdoc , array $data)', 'int')
call phpapi#function('px_new(', 'void)', 'resource')
call phpapi#function('px_numfields(', 'resource $pxdoc)', 'int')
call phpapi#function('px_numrecords(', 'resource $pxdoc)', 'int')
call phpapi#function('px_open_fp(', 'resource $pxdoc , resource $file)', 'bool')
call phpapi#function('px_put_record(', 'resource $pxdoc , array $record [, int $recpos = -1 ])', 'bool')
call phpapi#function('px_retrieve_record(', 'resource $pxdoc , int $num [, int $mode = 0 ])', 'array')
call phpapi#function('px_set_blob_file(', 'resource $pxdoc , string $filename)', 'bool')
call phpapi#function('px_set_parameter(', 'resource $pxdoc , string $name , string $value)', 'bool')
call phpapi#function('px_set_tablename(', 'resource $pxdoc , string $name)', 'void')
call phpapi#function('px_set_targetencoding(', 'resource $pxdoc , string $encoding)', 'bool')
call phpapi#function('px_set_value(', 'resource $pxdoc , string $name , float $value)', 'bool')
call phpapi#function('px_timestamp2string(', 'resource $pxdoc , float $value , string $format)', 'string')
call phpapi#function('px_update_record(', 'resource $pxdoc , array $data , int $num)', 'bool')
call phpapi#function('qdom_error(', 'void)', 'string')
call phpapi#function('qdom_tree(', 'string $doc)', 'QDomDocument')
call phpapi#function('query(', 'string $query)', 'object')
call phpapi#function('quoted_printable_decode(', 'string $str)', 'string')
call phpapi#function('quoted_printable_encode(', 'string $str)', 'string')
call phpapi#function('quotemeta(', 'string $str)', 'string')
call phpapi#function('rad2deg(', 'float $number)', 'float')
call phpapi#function('radius_acct_open(', 'void)', 'resource')
call phpapi#function('radius_add_server(', 'resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries)', 'bool')
call phpapi#function('radius_auth_open(', 'void)', 'resource')
call phpapi#function('radius_close(', 'resource $radius_handle)', 'bool')
call phpapi#function('radius_config(', 'resource $radius_handle , string $file)', 'bool')
call phpapi#function('radius_create_request(', 'resource $radius_handle , int $type)', 'bool')
call phpapi#function('radius_cvt_addr(', 'string $data)', 'string')
call phpapi#function('radius_cvt_int(', 'string $data)', 'int')
call phpapi#function('radius_cvt_string(', 'string $data)', 'string')
call phpapi#function('radius_demangle(', 'resource $radius_handle , string $mangled)', 'string')
call phpapi#function('radius_demangle_mppe_key(', 'resource $radius_handle , string $mangled)', 'string')
call phpapi#function('radius_get_attr(', 'resource $radius_handle)', 'mixed')
call phpapi#function('radius_get_vendor_attr(', 'string $data)', 'array')
call phpapi#function('radius_put_addr(', 'resource $radius_handle , int $type , string $addr)', 'bool')
call phpapi#function('radius_put_attr(', 'resource $radius_handle , int $type , string $value)', 'bool')
call phpapi#function('radius_put_int(', 'resource $radius_handle , int $type , int $value)', 'bool')
call phpapi#function('radius_put_string(', 'resource $radius_handle , int $type , string $value)', 'bool')
call phpapi#function('radius_put_vendor_addr(', 'resource $radius_handle , int $vendor , int $type , string $addr)', 'bool')
call phpapi#function('radius_put_vendor_attr(', 'resource $radius_handle , int $vendor , int $type , string $value)', 'bool')
call phpapi#function('radius_put_vendor_int(', 'resource $radius_handle , int $vendor , int $type , int $value)', 'bool')
call phpapi#function('radius_put_vendor_string(', 'resource $radius_handle , int $vendor , int $type , string $value)', 'bool')
call phpapi#function('radius_request_authenticator(', 'resource $radius_handle)', 'string')
call phpapi#function('radius_send_request(', 'resource $radius_handle)', 'int')
call phpapi#function('radius_server_secret(', 'resource $radius_handle)', 'string')
call phpapi#function('radius_strerror(', 'resource $radius_handle)', 'string')
call phpapi#function('rand(', 'void)', 'int')
call phpapi#function('range(', 'mixed $start , mixed $limit [, number $step = 1 ])', 'array')
call phpapi#function('rar_wrapper_cache_stats(', 'void)', 'string')
call phpapi#function('rawurldecode(', 'string $str)', 'string')
call phpapi#function('rawurlencode(', 'string $str)', 'string')
call phpapi#function('readdir(', '[ resource $dir_handle ])', 'string')
call phpapi#function('readfile(', 'string $filename [, bool $use_include_path = false [, resource $context ]])', 'int')
call phpapi#function('readgzfile(', 'string $filename [, int $use_include_path = 0 ])', 'int')
call phpapi#function('readline(', '[ string $prompt ])', 'string')
call phpapi#function('readline_add_history(', 'string $line)', 'bool')
call phpapi#function('readline_callback_handler_install(', 'string $prompt , callback $callback)', 'bool')
call phpapi#function('readline_callback_handler_remove(', 'void)', 'bool')
call phpapi#function('readline_callback_read_char(', 'void)', 'void')
call phpapi#function('readline_clear_history(', 'void)', 'bool')
call phpapi#function('readline_completion_function(', 'callback $function)', 'bool')
call phpapi#function('readline_info(', '[ string $varname [, string $newvalue ]])', 'mixed')
call phpapi#function('readline_list_history(', 'void)', 'array')
call phpapi#function('readline_on_new_line(', 'void)', 'void')
call phpapi#function('readline_read_history(', '[ string $filename ])', 'bool')
call phpapi#function('readline_redisplay(', 'void)', 'void')
call phpapi#function('readline_write_history(', '[ string $filename ])', 'bool')
call phpapi#function('readlink(', 'string $path)', 'string')
call phpapi#function('realpath(', 'string $path)', 'string')
call phpapi#function('realpath_cache_get(', 'void)', 'array')
call phpapi#function('realpath_cache_size(', 'void)', 'int')
call phpapi#function('recode_file(', 'string $request , resource $input , resource $output)', 'bool')
call phpapi#function('recode_string(', 'string $request , string $string)', 'string')
call phpapi#function('register_shutdown_function(', 'callback $function [, mixed $parameter [, mixed $... ]])', 'void')
call phpapi#function('register_tick_function(', 'callback $function [, mixed $arg [, mixed $... ]])', 'bool')
call phpapi#function('remove_child(', 'domtext $oldchild)', 'domtext')
call phpapi#function('rename(', 'string $oldname , string $newname [, resource $context ])', 'bool')
call phpapi#function('rename_function(', 'string $original_name , string $new_name)', 'bool')
call phpapi#function('replace_child(', 'domelement $newnode , domelement $oldnode)', 'domelement')
call phpapi#function('replace_node(', 'domelement $newnode)', 'domelement')
call phpapi#function('reset(', 'array &$array)', 'mixed')
call phpapi#function('resetLimit(', 'void)', 'void')
call phpapi#function('restore_error_handler(', 'void)', 'bool')
call phpapi#function('restore_exception_handler(', 'void)', 'bool')
call phpapi#function('restore_include_path(', 'void)', 'void')
call phpapi#function('rewind(', 'resource $handle)', 'bool')
call phpapi#function('rewinddir(', '[ resource $dir_handle ])', 'void')
call phpapi#function('rmdir(', 'string $dirname [, resource $context ])', 'bool')
call phpapi#function('round(', 'float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]])', 'float')
call phpapi#function('rpm_close(', 'resource $rpmr)', 'bool')
call phpapi#function('rpm_get_tag(', 'resource $rpmr , int $tagnum)', 'mixed')
call phpapi#function('rpm_is_valid(', 'string $filename)', 'bool')
call phpapi#function('rpm_open(', 'string $filename)', 'resource')
call phpapi#function('rpm_version(', 'void)', 'string')
call phpapi#function('rrd_create(', 'string $filename , array $options)', 'bool')
call phpapi#function('rrd_error(', 'void)', 'string')
call phpapi#function('rrd_fetch(', 'string $filename , array $options)', 'array')
call phpapi#function('rrd_first(', 'string $file [, int $raaindex = 0 ])', 'int')
call phpapi#function('rrd_graph(', 'string $filename , array $options)', 'array')
call phpapi#function('rrd_info(', 'string $filename)', 'array')
call phpapi#function('rrd_last(', 'string $filename)', 'int')
call phpapi#function('rrd_lastupdate(', 'string $filename)', 'array')
call phpapi#function('rrd_restore(', 'string $xml_file , string $rrd_file [, array $options ])', 'bool')
call phpapi#function('rrd_tune(', 'string $filename , array $options)', 'bool')
call phpapi#function('rrd_update(', 'string $filename , array $options)', 'bool')
call phpapi#function('rrd_xport(', 'array $options)', 'array')
call phpapi#function('rsort(', 'array &$array [, int $sort_flags = SORT_REGULAR ])', 'bool')
call phpapi#function('rtrim(', 'string $str [, string $charlist ])', 'string')
call phpapi#function('runkit_class_adopt(', 'string $classname , string $parentname)', 'bool')
call phpapi#function('runkit_class_emancipate(', 'string $classname)', 'bool')
call phpapi#function('runkit_constant_add(', 'string $constname , mixed $value)', 'bool')
call phpapi#function('runkit_constant_redefine(', 'string $constname , mixed $newvalue)', 'bool')
call phpapi#function('runkit_constant_remove(', 'string $constname)', 'bool')
call phpapi#function('runkit_function_add(', 'string $funcname , string $arglist , string $code)', 'bool')
call phpapi#function('runkit_function_copy(', 'string $funcname , string $targetname)', 'bool')
call phpapi#function('runkit_function_redefine(', 'string $funcname , string $arglist , string $code)', 'bool')
call phpapi#function('runkit_function_remove(', 'string $funcname)', 'bool')
call phpapi#function('runkit_function_rename(', 'string $funcname , string $newname)', 'bool')
call phpapi#function('runkit_import(', 'string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS ])', 'bool')
call phpapi#function('runkit_lint(', 'string $code)', 'bool')
call phpapi#function('runkit_lint_file(', 'string $filename)', 'bool')
call phpapi#function('runkit_method_add(', 'string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ])', 'bool')
call phpapi#function('runkit_method_copy(', 'string $dClass , string $dMethod , string $sClass [, string $sMethod ])', 'bool')
call phpapi#function('runkit_method_redefine(', 'string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC ])', 'bool')
call phpapi#function('runkit_method_remove(', 'string $classname , string $methodname)', 'bool')
call phpapi#function('runkit_method_rename(', 'string $classname , string $methodname , string $newname)', 'bool')
call phpapi#function('runkit_return_value_used(', 'void)', 'bool')
call phpapi#function('runkit_sandbox_output_handler(', 'object $sandbox [, mixed $callback ])', 'mixed')
call phpapi#function('runkit_superglobals(', 'void)', 'array')
call phpapi#function('scandir(', 'string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context ]])', 'array')
call phpapi#function('seekResult(', 'int $position)', 'int')
call phpapi#function('sem_acquire(', 'resource $sem_identifier)', 'bool')
call phpapi#function('sem_get(', 'int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]])', 'resource')
call phpapi#function('sem_release(', 'resource $sem_identifier)', 'bool')
call phpapi#function('sem_remove(', 'resource $sem_identifier)', 'bool')
call phpapi#function('serialize(', 'mixed $value)', 'string')
call phpapi#function('session_cache_expire(', '[ string $new_cache_expire ])', 'int')
call phpapi#function('session_cache_limiter(', '[ string $cache_limiter ])', 'string')
call phpapi#function('session_decode(', 'string $data)', 'bool')
call phpapi#function('session_destroy(', 'void)', 'bool')
call phpapi#function('session_encode(', 'void)', 'string')
call phpapi#function('session_get_cookie_params(', 'void)', 'array')
call phpapi#function('session_id(', '[ string $id ])', 'string')
call phpapi#function('session_is_registered(', 'string $name)', 'bool')
call phpapi#function('session_module_name(', '[ string $module ])', 'string')
call phpapi#function('session_name(', '[ string $name ])', 'string')
call phpapi#function('session_pgsql_add_error(', 'int $error_level [, string $error_message ])', 'bool')
call phpapi#function('session_pgsql_get_error(', '[ bool $with_error_message = false ])', 'array')
call phpapi#function('session_pgsql_get_field(', 'void)', 'string')
call phpapi#function('session_pgsql_reset(', 'void)', 'bool')
call phpapi#function('session_pgsql_set_field(', 'string $value)', 'bool')
call phpapi#function('session_pgsql_status(', 'void)', 'array')
call phpapi#function('session_regenerate_id(', '[ bool $delete_old_session = false ])', 'bool')
call phpapi#function('session_register(', 'mixed $name [, mixed $... ])', 'bool')
call phpapi#function('session_save_path(', '[ string $path ])', 'string')
call phpapi#function('session_set_cookie_params(', 'int $lifetime [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]])', 'void')
call phpapi#function('session_set_save_handler(', 'callback $open , callback $close , callback $read , callback $write , callback $destroy , callback $gc)', 'bool')
call phpapi#function('session_start(', 'void)', 'bool')
call phpapi#function('session_unregister(', 'string $name)', 'bool')
call phpapi#function('session_unset(', 'void)', 'void')
call phpapi#function('session_write_close(', 'void)', 'void')
call phpapi#function('set_content(', 'string $content)', 'bool')
call phpapi#function('set_error_handler(', 'callback $error_handler [, int $error_types = E_ALL | E_STRICT ])', 'mixed')
call phpapi#function('set_exception_handler(', 'callback $exception_handler)', 'callback')
call phpapi#function('set_include_path(', 'string $new_include_path)', 'string')
call phpapi#function('set_magic_quotes_runtime(', 'bool $new_setting)', 'bool')
call phpapi#function('set_name(', 'void)', 'bool')
call phpapi#function('set_namespace(', 'string $uri [, string $prefix ])', 'void')
call phpapi#function('set_time_limit(', 'int $seconds)', 'void')
call phpapi#function('setcookie(', 'string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]])', 'bool')
call phpapi#function('setLimit(', 'string $property , string $low , string $high)', 'void')
call phpapi#function('setlocale(', 'int $category , string $locale [, string $... ])', 'string')
call phpapi#function('setPhraseDelimiter(', 'string $delimiter)', 'void')
call phpapi#function('setproctitle(', 'string $title)', 'void')
call phpapi#function('setrawcookie(', 'string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]])', 'bool')
call phpapi#function('setSort(', 'string $sort)', 'void')
call phpapi#function('setStructure(', 'int $structure)', 'void')
call phpapi#function('setthreadtitle(', 'string $title)', 'bool')
call phpapi#function('settype(', 'mixed &$var , string $type)', 'bool')
call phpapi#function('sha1(', 'string $str [, bool $raw_output = false ])', 'string')
call phpapi#function('sha1_file(', 'string $filename [, bool $raw_output = false ])', 'string')
call phpapi#function('shell_exec(', 'string $cmd)', 'string')
call phpapi#function('shm_attach(', 'int $key [, int $memsize [, int $perm = 0666 ]])', 'resource')
call phpapi#function('shm_detach(', 'resource $shm_identifier)', 'bool')
call phpapi#function('shm_get_var(', 'resource $shm_identifier , int $variable_key)', 'mixed')
call phpapi#function('shm_has_var(', 'resource $shm_identifier , int $variable_key)', 'bool')
call phpapi#function('shm_put_var(', 'resource $shm_identifier , int $variable_key , mixed $variable)', 'bool')
call phpapi#function('shm_remove(', 'resource $shm_identifier)', 'bool')
call phpapi#function('shm_remove_var(', 'resource $shm_identifier , int $variable_key)', 'bool')
call phpapi#function('shmop_close(', 'int $shmid)', 'void')
call phpapi#function('shmop_delete(', 'int $shmid)', 'bool')
call phpapi#function('shmop_open(', 'int $key , string $flags , int $mode , int $size)', 'int')
call phpapi#function('shmop_read(', 'int $shmid , int $start , int $count)', 'string')
call phpapi#function('shmop_size(', 'int $shmid)', 'int')
call phpapi#function('shmop_write(', 'int $shmid , string $data , int $offset)', 'int')
call phpapi#function('shuffle(', 'array &$array)', 'bool')
call phpapi#function('similar_text(', 'string $first , string $second [, float &$percent ])', 'int')
call phpapi#function('simplexml_import_dom(', 'DOMNode $node [, string $class_name = "SimpleXMLElement" ])', 'SimpleXMLElement')
call phpapi#function('simplexml_load_file(', 'string $filename [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns [, bool $is_prefix = false ]]]])', 'object')
call phpapi#function('simplexml_load_string(', 'string $data [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns [, bool $is_prefix = false ]]]])', 'object')
call phpapi#function('sin(', 'float $arg)', 'float')
call phpapi#function('sinh(', 'float $arg)', 'float')
call phpapi#function('sleep(', 'int $seconds)', 'int')
call phpapi#function('snmp_get_quick_print(', 'void)', 'bool')
call phpapi#function('snmp_get_valueretrieval(', 'void)', 'int')
call phpapi#function('snmp_read_mib(', 'string $filename)', 'bool')
call phpapi#function('snmp_set_enum_print(', 'int $enum_print)', 'bool')
call phpapi#function('snmp_set_oid_numeric_print(', 'int $oid_format)', 'void')
call phpapi#function('snmp_set_oid_output_format(', 'int $oid_format = SNMP_OID_OUTPUT_MODULE)', 'bool')
call phpapi#function('snmp_set_quick_print(', 'bool $quick_print)', 'bool')
call phpapi#function('snmp_set_valueretrieval(', 'int $method = SNMP_VALUE_LIBRARY)', 'bool')
call phpapi#function('snmp2_get(', 'string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'string')
call phpapi#function('snmp2_getnext(', 'string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'string')
call phpapi#function('snmp2_real_walk(', 'string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'array')
call phpapi#function('snmp2_set(', 'string $host , string $community , string $object_id , string $type , string $value [, string $timeout = 1000000 [, string $retries = 5 ]])', 'bool')
call phpapi#function('snmp2_walk(', 'string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'array')
call phpapi#function('snmp3_get(', 'string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'string')
call phpapi#function('snmp3_getnext(', 'string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'string')
call phpapi#function('snmp3_real_walk(', 'string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'array')
call phpapi#function('snmp3_set(', 'string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id , string $type , string $value [, int $timeout = 1000000 [, int $retries = 5 ]])', 'bool')
call phpapi#function('snmp3_walk(', 'string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]])', 'array')
call phpapi#function('snmpget(', 'string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]])', 'string')
call phpapi#function('snmpgetnext(', 'string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]])', 'string')
call phpapi#function('snmprealwalk(', 'string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]])', 'array')
call phpapi#function('snmpset(', 'string $host , string $community , string $object_id , string $type , mixed $value [, int $timeout = 1000000 [, int $retries = 5 ]])', 'bool')
call phpapi#function('snmpwalk(', 'string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]])', 'array')
call phpapi#function('snmpwalkoid(', 'string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]])', 'array')
call phpapi#function('socket_accept(', 'resource $socket)', 'resource')
call phpapi#function('socket_bind(', 'resource $socket , string $address [, int $port = 0 ])', 'bool')
call phpapi#function('socket_clear_error(', '[ resource $socket ])', 'void')
call phpapi#function('socket_close(', 'resource $socket)', 'void')
call phpapi#function('socket_connect(', 'resource $socket , string $address [, int $port = 0 ])', 'bool')
call phpapi#function('socket_create(', 'int $domain , int $type , int $protocol)', 'resource')
call phpapi#function('socket_create_listen(', 'int $port [, int $backlog = 128 ])', 'resource')
call phpapi#function('socket_create_pair(', 'int $domain , int $type , int $protocol , array &$fd)', 'bool')
call phpapi#function('socket_get_option(', 'resource $socket , int $level , int $optname)', 'mixed')
call phpapi#function('socket_getpeername(', 'resource $socket , string &$address [, int &$port ])', 'bool')
call phpapi#function('socket_getsockname(', 'resource $socket , string &$addr [, int &$port ])', 'bool')
call phpapi#function('socket_last_error(', '[ resource $socket ])', 'int')
call phpapi#function('socket_listen(', 'resource $socket [, int $backlog = 0 ])', 'bool')
call phpapi#function('socket_read(', 'resource $socket , int $length [, int $type = PHP_BINARY_READ ])', 'string')
call phpapi#function('socket_recv(', 'resource $socket , string &$buf , int $len , int $flags)', 'int')
call phpapi#function('socket_recvfrom(', 'resource $socket , string &$buf , int $len , int $flags , string &$name [, int &$port ])', 'int')
call phpapi#function('socket_select(', 'array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ])', 'int')
call phpapi#function('socket_send(', 'resource $socket , string $buf , int $len , int $flags)', 'int')
call phpapi#function('socket_sendto(', 'resource $socket , string $buf , int $len , int $flags , string $addr [, int $port = 0 ])', 'int')
call phpapi#function('socket_set_block(', 'resource $socket)', 'bool')
call phpapi#function('socket_set_nonblock(', 'resource $socket)', 'bool')
call phpapi#function('socket_set_option(', 'resource $socket , int $level , int $optname , mixed $optval)', 'bool')
call phpapi#function('socket_shutdown(', 'resource $socket [, int $how = 2 ])', 'bool')
call phpapi#function('socket_strerror(', 'int $errno)', 'string')
call phpapi#function('socket_write(', 'resource $socket , string $buffer [, int $length = 0 ])', 'int')
call phpapi#function('solr_get_version(', 'void)', 'string')
call phpapi#function('sort(', 'array &$array [, int $sort_flags = SORT_REGULAR ])', 'bool')
call phpapi#function('soundex(', 'string $str)', 'string')
call phpapi#function('spl_autoload(', 'string $class_name [, string $file_extensions = spl_autoload_extensions() ])', 'void')
call phpapi#function('spl_autoload_call(', 'string $class_name)', 'void')
call phpapi#function('spl_autoload_extensions(', '[ string $file_extensions ])', 'string')
call phpapi#function('spl_autoload_functions(', 'void)', 'array')
call phpapi#function('spl_autoload_register(', '[ callback $autoload_function [, bool $throw = true [, bool $prepend = false ]]])', 'bool')
call phpapi#function('spl_autoload_unregister(', 'mixed $autoload_function)', 'bool')
call phpapi#function('spl_object_hash(', 'object $obj)', 'string')
call phpapi#function('split(', 'string $pattern , string $string [, int $limit = -1 ])', 'array')
call phpapi#function('spliti(', 'string $pattern , string $string [, int $limit = -1 ])', 'array')
call phpapi#function('sprintf(', 'string $format [, mixed $args [, mixed $... ]])', 'string')
call phpapi#function('sql_regcase(', 'string $string)', 'string')
call phpapi#function('sqlite_array_query(', 'resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])', 'array')
call phpapi#function('sqlite_busy_timeout(', 'resource $dbhandle , int $milliseconds)', 'void')
call phpapi#function('sqlite_changes(', 'resource $dbhandle)', 'int')
call phpapi#function('sqlite_close(', 'resource $dbhandle)', 'void')
call phpapi#function('sqlite_column(', 'resource $result , mixed $index_or_name [, bool $decode_binary = true ])', 'mixed')
call phpapi#function('sqlite_create_aggregate(', 'resource $dbhandle , string $function_name , callback $step_func , callback $finalize_func [, int $num_args = -1 ])', 'void')
call phpapi#function('sqlite_create_function(', 'resource $dbhandle , string $function_name , callback $callback [, int $num_args = -1 ])', 'void')
call phpapi#function('sqlite_current(', 'resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])', 'array')
call phpapi#function('sqlite_error_string(', 'int $error_code)', 'string')
call phpapi#function('sqlite_escape_string(', 'string $item)', 'string')
call phpapi#function('sqlite_exec(', 'resource $dbhandle , string $query [, string &$error_msg ])', 'bool')
call phpapi#function('sqlite_factory(', 'string $filename [, int $mode = 0666 [, string &$error_message ]])', 'SQLiteDatabase')
call phpapi#function('sqlite_fetch_all(', 'resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])', 'array')
call phpapi#function('sqlite_fetch_array(', 'resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]])', 'array')
call phpapi#function('sqlite_fetch_column_types(', 'string $table_name , resource $dbhandle [, int $result_type = SQLITE_ASSOC ])', 'array')
call phpapi#function('sqlite_fetch_object(', 'resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary = true ]]])', 'object')
call phpapi#function('sqlite_fetch_single(', 'resource $result [, bool $decode_binary = true ])', 'string')
call phpapi#function('sqlite_field_name(', 'resource $result , int $field_index)', 'string')
call phpapi#function('sqlite_has_more(', 'resource $result)', 'bool')
call phpapi#function('sqlite_has_prev(', 'resource $result)', 'bool')
call phpapi#function('sqlite_key(', 'resource $result)', 'int')
call phpapi#function('sqlite_last_error(', 'resource $dbhandle)', 'int')
call phpapi#function('sqlite_last_insert_rowid(', 'resource $dbhandle)', 'int')
call phpapi#function('sqlite_libencoding(', 'void)', 'string')
call phpapi#function('sqlite_libversion(', 'void)', 'string')
call phpapi#function('sqlite_next(', 'resource $result)', 'bool')
call phpapi#function('sqlite_num_fields(', 'resource $result)', 'int')
call phpapi#function('sqlite_num_rows(', 'resource $result)', 'int')
call phpapi#function('sqlite_open(', 'string $filename [, int $mode = 0666 [, string & $error_message ]])', 'resource')
call phpapi#function('sqlite_popen(', 'string $filename [, int $mode = 0666 [, string & $error_message ]])', 'resource')
call phpapi#function('sqlite_prev(', 'resource $result)', 'bool')
call phpapi#function('sqlite_query(', 'resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]])', 'resource')
call phpapi#function('sqlite_rewind(', 'resource $result)', 'bool')
call phpapi#function('sqlite_seek(', 'resource $result , int $rownum)', 'bool')
call phpapi#function('sqlite_single_query(', 'resource $db , string $query [, bool $first_row_only [, bool $decode_binary ]])', 'array')
call phpapi#function('sqlite_udf_decode_binary(', 'string $data)', 'string')
call phpapi#function('sqlite_udf_encode_binary(', 'string $data)', 'string')
call phpapi#function('sqlite_unbuffered_query(', 'resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]])', 'resource')
call phpapi#function('sqlite_valid(', 'resource $result)', 'bool')
call phpapi#function('sqrt(', 'float $arg)', 'float')
call phpapi#function('srand(', '[ int $seed ])', 'void')
call phpapi#function('sscanf(', 'string $str , string $format [, mixed &$... ])', 'mixed')
call phpapi#function('ssdeep_fuzzy_compare(', 'string $signature1 , string $signature2)', 'int')
call phpapi#function('ssdeep_fuzzy_hash(', 'string $to_hash)', 'string')
call phpapi#function('ssdeep_fuzzy_hash_filename(', 'string $file_name)', 'string')
call phpapi#function('ssh2_auth_hostbased_file(', 'resource $session , string $username , string $hostname , string $pubkeyfile , string $privkeyfile [, string $passphrase [, string $local_username ]])', 'bool')
call phpapi#function('ssh2_auth_none(', 'resource $session , string $username)', 'mixed')
call phpapi#function('ssh2_auth_password(', 'resource $session , string $username , string $password)', 'bool')
call phpapi#function('ssh2_auth_pubkey_file(', 'resource $session , string $username , string $pubkeyfile , string $privkeyfile [, string $passphrase ])', 'bool')
call phpapi#function('ssh2_connect(', 'string $host [, int $port = 22 [, array $methods [, array $callbacks ]]])', 'resource')
call phpapi#function('ssh2_exec(', 'resource $session , string $command [, string $pty [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]])', 'resource')
call phpapi#function('ssh2_fetch_stream(', 'resource $channel , int $streamid)', 'resource')
call phpapi#function('ssh2_fingerprint(', 'resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX ])', 'string')
call phpapi#function('ssh2_methods_negotiated(', 'resource $session)', 'array')
call phpapi#function('ssh2_publickey_add(', 'resource $pkey , string $algoname , string $blob [, bool $overwrite = false [, array $attributes ]])', 'bool')
call phpapi#function('ssh2_publickey_init(', 'resource $session)', 'resource')
call phpapi#function('ssh2_publickey_list(', 'resource $pkey)', 'array')
call phpapi#function('ssh2_publickey_remove(', 'resource $pkey , string $algoname , string $blob)', 'bool')
call phpapi#function('ssh2_scp_recv(', 'resource $session , string $remote_file , string $local_file)', 'bool')
call phpapi#function('ssh2_scp_send(', 'resource $session , string $local_file , string $remote_file [, int $create_mode = 0644 ])', 'bool')
call phpapi#function('ssh2_sftp(', 'resource $session)', 'resource')
call phpapi#function('ssh2_sftp_lstat(', 'resource $sftp , string $path)', 'array')
call phpapi#function('ssh2_sftp_mkdir(', 'resource $sftp , string $dirname [, int $mode = 0777 [, bool $recursive = false ]])', 'bool')
call phpapi#function('ssh2_sftp_readlink(', 'resource $sftp , string $link)', 'string')
call phpapi#function('ssh2_sftp_realpath(', 'resource $sftp , string $filename)', 'string')
call phpapi#function('ssh2_sftp_rename(', 'resource $sftp , string $from , string $to)', 'bool')
call phpapi#function('ssh2_sftp_rmdir(', 'resource $sftp , string $dirname)', 'bool')
call phpapi#function('ssh2_sftp_stat(', 'resource $sftp , string $path)', 'array')
call phpapi#function('ssh2_sftp_symlink(', 'resource $sftp , string $target , string $link)', 'bool')
call phpapi#function('ssh2_sftp_unlink(', 'resource $sftp , string $filename)', 'bool')
call phpapi#function('ssh2_shell(', 'resource $session [, string $term_type = "vanilla" [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]])', 'resource')
call phpapi#function('ssh2_tunnel(', 'resource $session , string $host , int $port)', 'resource')
call phpapi#function('stat(', 'string $filename)', 'array')
call phpapi#function('stats_absolute_deviation(', 'array $a)', 'float')
call phpapi#function('stats_cdf_beta(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_binomial(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_cauchy(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_chisquare(', 'float $par1 , float $par2 , int $which)', 'float')
call phpapi#function('stats_cdf_exponential(', 'float $par1 , float $par2 , int $which)', 'float')
call phpapi#function('stats_cdf_f(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_gamma(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_laplace(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_logistic(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_negative_binomial(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_noncentral_chisquare(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_noncentral_f(', 'float $par1 , float $par2 , float $par3 , float $par4 , int $which)', 'float')
call phpapi#function('stats_cdf_poisson(', 'float $par1 , float $par2 , int $which)', 'float')
call phpapi#function('stats_cdf_t(', 'float $par1 , float $par2 , int $which)', 'float')
call phpapi#function('stats_cdf_uniform(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_cdf_weibull(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_covariance(', 'array $a , array $b)', 'float')
call phpapi#function('stats_den_uniform(', 'float $x , float $a , float $b)', 'float')
call phpapi#function('stats_dens_beta(', 'float $x , float $a , float $b)', 'float')
call phpapi#function('stats_dens_cauchy(', 'float $x , float $ave , float $stdev)', 'float')
call phpapi#function('stats_dens_chisquare(', 'float $x , float $dfr)', 'float')
call phpapi#function('stats_dens_exponential(', 'float $x , float $scale)', 'float')
call phpapi#function('stats_dens_f(', 'float $x , float $dfr1 , float $dfr2)', 'float')
call phpapi#function('stats_dens_gamma(', 'float $x , float $shape , float $scale)', 'float')
call phpapi#function('stats_dens_laplace(', 'float $x , float $ave , float $stdev)', 'float')
call phpapi#function('stats_dens_logistic(', 'float $x , float $ave , float $stdev)', 'float')
call phpapi#function('stats_dens_negative_binomial(', 'float $x , float $n , float $pi)', 'float')
call phpapi#function('stats_dens_normal(', 'float $x , float $ave , float $stdev)', 'float')
call phpapi#function('stats_dens_pmf_binomial(', 'float $x , float $n , float $pi)', 'float')
call phpapi#function('stats_dens_pmf_hypergeometric(', 'float $n1 , float $n2 , float $N1 , float $N2)', 'float')
call phpapi#function('stats_dens_pmf_poisson(', 'float $x , float $lb)', 'float')
call phpapi#function('stats_dens_t(', 'float $x , float $dfr)', 'float')
call phpapi#function('stats_dens_weibull(', 'float $x , float $a , float $b)', 'float')
call phpapi#function('stats_harmonic_mean(', 'array $a)', 'number')
call phpapi#function('stats_kurtosis(', 'array $a)', 'float')
call phpapi#function('stats_rand_gen_beta(', 'float $a , float $b)', 'float')
call phpapi#function('stats_rand_gen_chisquare(', 'float $df)', 'float')
call phpapi#function('stats_rand_gen_exponential(', 'float $av)', 'float')
call phpapi#function('stats_rand_gen_f(', 'float $dfn , float $dfd)', 'float')
call phpapi#function('stats_rand_gen_funiform(', 'float $low , float $high)', 'float')
call phpapi#function('stats_rand_gen_gamma(', 'float $a , float $r)', 'float')
call phpapi#function('stats_rand_gen_ibinomial(', 'int $n , float $pp)', 'int')
call phpapi#function('stats_rand_gen_ibinomial_negative(', 'int $n , float $p)', 'int')
call phpapi#function('stats_rand_gen_int(', 'void)', 'int')
call phpapi#function('stats_rand_gen_ipoisson(', 'float $mu)', 'int')
call phpapi#function('stats_rand_gen_iuniform(', 'int $low , int $high)', 'int')
call phpapi#function('stats_rand_gen_noncenral_chisquare(', 'float $df , float $xnonc)', 'float')
call phpapi#function('stats_rand_gen_noncentral_f(', 'float $dfn , float $dfd , float $xnonc)', 'float')
call phpapi#function('stats_rand_gen_noncentral_t(', 'float $df , float $xnonc)', 'float')
call phpapi#function('stats_rand_gen_normal(', 'float $av , float $sd)', 'float')
call phpapi#function('stats_rand_gen_t(', 'float $df)', 'float')
call phpapi#function('stats_rand_get_seeds(', 'void)', 'array')
call phpapi#function('stats_rand_phrase_to_seeds(', 'string $phrase)', 'array')
call phpapi#function('stats_rand_ranf(', 'void)', 'float')
call phpapi#function('stats_rand_setall(', 'int $iseed1 , int $iseed2)', 'void')
call phpapi#function('stats_skew(', 'array $a)', 'float')
call phpapi#function('stats_standard_deviation(', 'array $a [, bool $sample = false ])', 'float')
call phpapi#function('stats_stat_binomial_coef(', 'int $x , int $n)', 'float')
call phpapi#function('stats_stat_correlation(', 'array $arr1 , array $arr2)', 'float')
call phpapi#function('stats_stat_gennch(', 'int $n)', 'float')
call phpapi#function('stats_stat_independent_t(', 'array $arr1 , array $arr2)', 'float')
call phpapi#function('stats_stat_innerproduct(', 'array $arr1 , array $arr2)', 'float')
call phpapi#function('stats_stat_noncentral_t(', 'float $par1 , float $par2 , float $par3 , int $which)', 'float')
call phpapi#function('stats_stat_paired_t(', 'array $arr1 , array $arr2)', 'float')
call phpapi#function('stats_stat_percentile(', 'float $df , float $xnonc)', 'float')
call phpapi#function('stats_stat_powersum(', 'array $arr , float $power)', 'float')
call phpapi#function('stats_variance(', 'array $a [, bool $sample = false ])', 'float')
call phpapi#function('stem(', 'string $word)', 'array')
call phpapi#function('stomp_connect_error(', 'void)', 'string')
call phpapi#function('stomp_version(', 'void)', 'string')
call phpapi#function('str_getcsv(', 'string $input [, string $delimiter = ","  [, string $enclosure = " [, string $escape = "\\" ]]])', 'array')
call phpapi#function('str_ireplace(', 'mixed $search , mixed $replace , mixed $subject [, int & $count ])', 'mixed')
call phpapi#function('str_pad(', 'string $input , int $pad_length [, string $pad_string = " " [, int $pad_type = STR_PAD_RIGHT ]])', 'string')
call phpapi#function('str_repeat(', 'string $input , int $multiplier)', 'string')
call phpapi#function('str_replace(', 'mixed $search , mixed $replace , mixed $subject [, int & $count ])', 'mixed')
call phpapi#function('str_rot13(', 'string $str)', 'string')
call phpapi#function('str_shuffle(', 'string $str)', 'string')
call phpapi#function('str_split(', 'string $string [, int $split_length = 1 ])', 'array')
call phpapi#function('str_word_count(', 'string $string [, int $format = 0 [, string $charlist ]])', 'mixed')
call phpapi#function('strcasecmp(', 'string $str1 , string $str2)', 'int')
call phpapi#function('strcmp(', 'string $str1 , string $str2)', 'int')
call phpapi#function('strcoll(', 'string $str1 , string $str2)', 'int')
call phpapi#function('strcspn(', 'string $str1 , string $str2 [, int $start [, int $length ]])', 'int')
call phpapi#function('stream_bucket_append(', 'resource $brigade , resource $bucket)', 'void')
call phpapi#function('stream_bucket_make_writeable(', 'resource $brigade)', 'object')
call phpapi#function('stream_bucket_new(', 'resource $stream , string $buffer)', 'object')
call phpapi#function('stream_bucket_prepend(', 'resource $brigade , resource $bucket)', 'void')
call phpapi#function('stream_context_create(', '[ array $options [, array $params ]])', 'resource')
call phpapi#function('stream_context_get_default(', '[ array $options ])', 'resource')
call phpapi#function('stream_context_get_options(', 'resource $stream_or_context)', 'array')
call phpapi#function('stream_context_get_params(', 'resource $stream_or_context)', 'array')
call phpapi#function('stream_context_set_default(', 'array $options)', 'resource')
call phpapi#function('stream_context_set_option(', 'resource $stream_or_context , string $wrapper , string $option , mixed $value)', 'bool')
call phpapi#function('stream_context_set_params(', 'resource $stream_or_context , array $params)', 'bool')
call phpapi#function('stream_copy_to_stream(', 'resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]])', 'int')
call phpapi#function('stream_encoding(', 'resource $stream [, string $encoding ])', 'bool')
call phpapi#function('stream_filter_append(', 'resource $stream , string $filtername [, int $read_write [, mixed $params ]])', 'resource')
call phpapi#function('stream_filter_prepend(', 'resource $stream , string $filtername [, int $read_write [, mixed $params ]])', 'resource')
call phpapi#function('stream_filter_register(', 'string $filtername , string $classname)', 'bool')
call phpapi#function('stream_filter_remove(', 'resource $stream_filter)', 'bool')
call phpapi#function('stream_get_contents(', 'resource $handle [, int $maxlength = -1 [, int $offset = -1 ]])', 'string')
call phpapi#function('stream_get_filters(', 'void)', 'array')
call phpapi#function('stream_get_line(', 'resource $handle , int $length [, string $ending ])', 'string')
call phpapi#function('stream_get_meta_data(', 'resource $stream)', 'array')
call phpapi#function('stream_get_transports(', 'void)', 'array')
call phpapi#function('stream_get_wrappers(', 'void)', 'array')
call phpapi#function('stream_is_local(', 'mixed $stream_or_url)', 'bool')
call phpapi#function('stream_notification_callback(', 'int $notification_code , int $severity , string $message , int $message_code , int $bytes_transferred , int $bytes_max)', 'void')
call phpapi#function('stream_resolve_include_path(', 'string $filename)', 'string')
call phpapi#function('stream_select(', 'array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ])', 'int')
call phpapi#function('stream_set_blocking(', 'resource $stream , int $mode)', 'bool')
call phpapi#function('stream_set_read_buffer(', 'resource $stream , int $buffer)', 'int')
call phpapi#function('stream_set_timeout(', 'resource $stream , int $seconds [, int $microseconds = 0 ])', 'bool')
call phpapi#function('stream_set_write_buffer(', 'resource $stream , int $buffer)', 'int')
call phpapi#function('stream_socket_accept(', 'resource $server_socket [, float $timeout = ini_get("default_socket_timeout") [, string &$peername ]])', 'resource')
call phpapi#function('stream_socket_client(', 'string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]])', 'resource')
call phpapi#function('stream_socket_enable_crypto(', 'resource $stream , bool $enable [, int $crypto_type [, resource $session_stream ]])', 'mixed')
call phpapi#function('stream_socket_get_name(', 'resource $handle , bool $want_peer)', 'string')
call phpapi#function('stream_socket_pair(', 'int $domain , int $type , int $protocol)', 'array')
call phpapi#function('stream_socket_recvfrom(', 'resource $socket , int $length [, int $flags = 0 [, string &$address ]])', 'string')
call phpapi#function('stream_socket_sendto(', 'resource $socket , string $data [, int $flags = 0 [, string $address ]])', 'int')
call phpapi#function('stream_socket_server(', 'string $local_socket [, int &$errno [, string & $errstr [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]])', 'resource')
call phpapi#function('stream_socket_shutdown(', 'resource $stream , int $how)', 'bool')
call phpapi#function('stream_supports_lock(', 'resource $stream)', 'bool')
call phpapi#function('stream_wrapper_register(', 'string $protocol , string $classname [, int $flags = 0 ])', 'bool')
call phpapi#function('stream_wrapper_restore(', 'string $protocol)', 'bool')
call phpapi#function('stream_wrapper_unregister(', 'string $protocol)', 'bool')
call phpapi#function('strftime(', 'string $format [, int $timestamp = time() ])', 'string')
call phpapi#function('strip_tags(', 'string $str [, string $allowable_tags ])', 'string')
call phpapi#function('stripcslashes(', 'string $str)', 'string')
call phpapi#function('stripos(', 'string $haystack , string $needle [, int $offset = 0 ])', 'int')
call phpapi#function('stripslashes(', 'string $str)', 'string')
call phpapi#function('stristr(', 'string $haystack , mixed $needle [, bool $before_needle = false ])', 'string')
call phpapi#function('strlen(', 'string $string)', 'int')
call phpapi#function('strnatcasecmp(', 'string $str1 , string $str2)', 'int')
call phpapi#function('strnatcmp(', 'string $str1 , string $str2)', 'int')
call phpapi#function('strncasecmp(', 'string $str1 , string $str2 , int $len)', 'int')
call phpapi#function('strncmp(', 'string $str1 , string $str2 , int $len)', 'int')
call phpapi#function('strpbrk(', 'string $haystack , string $char_list)', 'string')
call phpapi#function('strpos(', 'string $haystack , mixed $needle [, int $offset = 0 ])', 'int')
call phpapi#function('strptime(', 'string $date , string $format)', 'array')
call phpapi#function('strrchr(', 'string $haystack , mixed $needle)', 'string')
call phpapi#function('strrev(', 'string $string)', 'string')
call phpapi#function('strripos(', 'string $haystack , string $needle [, int $offset = 0 ])', 'int')
call phpapi#function('strrpos(', 'string $haystack , string $needle [, int $offset = 0 ])', 'int')
call phpapi#function('strspn(', 'string $subject , string $mask [, int $start [, int $length ]])', 'int')
call phpapi#function('strstr(', 'string $haystack , mixed $needle [, bool $before_needle = false ])', 'string')
call phpapi#function('strtok(', 'string $str , string $token)', 'string')
call phpapi#function('strtolower(', 'string $str)', 'string')
call phpapi#function('strtotime(', 'string $time [, int $now ])', 'int')
call phpapi#function('strtoupper(', 'string $string)', 'string')
call phpapi#function('strtr(', 'string $str , string $from , string $to)', 'string')
call phpapi#function('strval(', 'mixed $var)', 'string')
call phpapi#function('substr(', 'string $string , int $start [, int $length ])', 'string')
call phpapi#function('substr_compare(', 'string $main_str , string $str , int $offset [, int $length [, bool $case_insensitivity = false ]])', 'int')
call phpapi#function('substr_count(', 'string $haystack , string $needle [, int $offset = 0 [, int $length ]])', 'int')
call phpapi#function('substr_replace(', 'mixed $string , mixed $replacement , mixed $start [, mixed $length ])', 'mixed')
call phpapi#function('svn_add(', 'string $path [, bool $recursive = true [, bool $force = false ]])', 'bool')
call phpapi#function('svn_auth_get_parameter(', 'string $key)', 'string')
call phpapi#function('svn_auth_set_parameter(', 'string $key , string $value)', 'void')
call phpapi#function('svn_blame(', 'string $repository_url [, int $revision_no = SVN_REVISION_HEAD ])', 'array')
call phpapi#function('svn_cat(', 'string $repos_url [, int $revision_no ])', 'string')
call phpapi#function('svn_checkout(', 'string $repos , string $targetpath [, int $revision [, int $flags = 0 ]])', 'bool')
call phpapi#function('svn_cleanup(', 'string $workingdir)', 'bool')
call phpapi#function('svn_client_version(', 'void)', 'string')
call phpapi#function('svn_commit(', 'string $log , array $targets [, bool $dontrecurse = false ])', 'array')
call phpapi#function('svn_delete(', 'string $path [, bool $force = false ])', 'bool')
call phpapi#function('svn_diff(', 'string $path1 , int $rev1 , string $path2 , int $rev2)', 'array')
call phpapi#function('svn_export(', 'string $frompath , string $topath [, bool $working_copy = true [, int $revision_no = -1 ]])', 'bool')
call phpapi#function('svn_fs_abort_txn(', 'resource $txn)', 'bool')
call phpapi#function('svn_fs_apply_text(', 'resource $root , string $path)', 'resource')
call phpapi#function('svn_fs_begin_txn2(', 'resource $repos , int $rev)', 'resource')
call phpapi#function('svn_fs_change_node_prop(', 'resource $root , string $path , string $name , string $value)', 'bool')
call phpapi#function('svn_fs_check_path(', 'resource $fsroot , string $path)', 'int')
call phpapi#function('svn_fs_contents_changed(', 'resource $root1 , string $path1 , resource $root2 , string $path2)', 'bool')
call phpapi#function('svn_fs_copy(', 'resource $from_root , string $from_path , resource $to_root , string $to_path)', 'bool')
call phpapi#function('svn_fs_delete(', 'resource $root , string $path)', 'bool')
call phpapi#function('svn_fs_dir_entries(', 'resource $fsroot , string $path)', 'array')
call phpapi#function('svn_fs_file_contents(', 'resource $fsroot , string $path)', 'resource')
call phpapi#function('svn_fs_file_length(', 'resource $fsroot , string $path)', 'int')
call phpapi#function('svn_fs_is_dir(', 'resource $root , string $path)', 'bool')
call phpapi#function('svn_fs_is_file(', 'resource $root , string $path)', 'bool')
call phpapi#function('svn_fs_make_dir(', 'resource $root , string $path)', 'bool')
call phpapi#function('svn_fs_make_file(', 'resource $root , string $path)', 'bool')
call phpapi#function('svn_fs_node_created_rev(', 'resource $fsroot , string $path)', 'int')
call phpapi#function('svn_fs_node_prop(', 'resource $fsroot , string $path , string $propname)', 'string')
call phpapi#function('svn_fs_props_changed(', 'resource $root1 , string $path1 , resource $root2 , string $path2)', 'bool')
call phpapi#function('svn_fs_revision_prop(', 'resource $fs , int $revnum , string $propname)', 'string')
call phpapi#function('svn_fs_revision_root(', 'resource $fs , int $revnum)', 'resource')
call phpapi#function('svn_fs_txn_root(', 'resource $txn)', 'resource')
call phpapi#function('svn_fs_youngest_rev(', 'resource $fs)', 'int')
call phpapi#function('svn_import(', 'string $path , string $url , bool $nonrecursive)', 'bool')
call phpapi#function('svn_log(', 'string $repos_url [, int $start_revision [, int $end_revision [, int $limit = 0 [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY ]]]])', 'array')
call phpapi#function('svn_ls(', 'string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = false [, bool $peg = false ]]])', 'array')
call phpapi#function('svn_mkdir(', 'string $path [, string $log_message ])', 'bool')
call phpapi#function('svn_repos_create(', 'string $path [, array $config [, array $fsconfig ]])', 'resource')
call phpapi#function('svn_repos_fs(', 'resource $repos)', 'resource')
call phpapi#function('svn_repos_fs_begin_txn_for_commit(', 'resource $repos , int $rev , string $author , string $log_msg)', 'resource')
call phpapi#function('svn_repos_fs_commit_txn(', 'resource $txn)', 'int')
call phpapi#function('svn_repos_hotcopy(', 'string $repospath , string $destpath , bool $cleanlogs)', 'bool')
call phpapi#function('svn_repos_open(', 'string $path)', 'resource')
call phpapi#function('svn_repos_recover(', 'string $path)', 'bool')
call phpapi#function('svn_revert(', 'string $path [, bool $recursive = false ])', 'bool')
call phpapi#function('svn_status(', 'string $path [, int $flags = 0 ])', 'array')
call phpapi#function('svn_update(', 'string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = true ]])', 'int')
call phpapi#function('swf_actiongeturl(', 'string $url , string $target)', 'void')
call phpapi#function('swf_actiongotoframe(', 'int $framenumber)', 'void')
call phpapi#function('swf_actiongotolabel(', 'string $label)', 'void')
call phpapi#function('swf_actionnextframe(', 'void)', 'void')
call phpapi#function('swf_actionplay(', 'void)', 'void')
call phpapi#function('swf_actionprevframe(', 'void)', 'void')
call phpapi#function('swf_actionsettarget(', 'string $target)', 'void')
call phpapi#function('swf_actionstop(', 'void)', 'void')
call phpapi#function('swf_actiontogglequality(', 'void)', 'void')
call phpapi#function('swf_actionwaitforframe(', 'int $framenumber , int $skipcount)', 'void')
call phpapi#function('swf_addbuttonrecord(', 'int $states , int $shapeid , int $depth)', 'void')
call phpapi#function('swf_addcolor(', 'float $r , float $g , float $b , float $a)', 'void')
call phpapi#function('swf_closefile(', '[ int $return_file ])', 'void')
call phpapi#function('swf_definebitmap(', 'int $objid , string $image_name)', 'void')
call phpapi#function('swf_definefont(', 'int $fontid , string $fontname)', 'void')
call phpapi#function('swf_defineline(', 'int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width)', 'void')
call phpapi#function('swf_definepoly(', 'int $objid , array $coords , int $npoints , float $width)', 'void')
call phpapi#function('swf_definerect(', 'int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width)', 'void')
call phpapi#function('swf_definetext(', 'int $objid , string $str , int $docenter)', 'void')
call phpapi#function('swf_endbutton(', 'void)', 'void')
call phpapi#function('swf_enddoaction(', 'void)', 'void')
call phpapi#function('swf_endshape(', 'void)', 'void')
call phpapi#function('swf_endsymbol(', 'void)', 'void')
call phpapi#function('swf_fontsize(', 'float $size)', 'void')
call phpapi#function('swf_fontslant(', 'float $slant)', 'void')
call phpapi#function('swf_fonttracking(', 'float $tracking)', 'void')
call phpapi#function('swf_getbitmapinfo(', 'int $bitmapid)', 'array')
call phpapi#function('swf_getfontinfo(', 'void)', 'array')
call phpapi#function('swf_getframe(', 'void)', 'int')
call phpapi#function('swf_labelframe(', 'string $name)', 'void')
call phpapi#function('swf_lookat(', 'float $view_x , float $view_y , float $view_z , float $reference_x , float $reference_y , float $reference_z , float $twist)', 'void')
call phpapi#function('swf_modifyobject(', 'int $depth , int $how)', 'void')
call phpapi#function('swf_mulcolor(', 'float $r , float $g , float $b , float $a)', 'void')
call phpapi#function('swf_nextid(', 'void)', 'int')
call phpapi#function('swf_oncondition(', 'int $transition)', 'void')
call phpapi#function('swf_openfile(', 'string $filename , float $width , float $height , float $framerate , float $r , float $g , float $b)', 'void')
call phpapi#function('swf_ortho(', 'float $xmin , float $xmax , float $ymin , float $ymax , float $zmin , float $zmax)', 'void')
call phpapi#function('swf_ortho2(', 'float $xmin , float $xmax , float $ymin , float $ymax)', 'void')
call phpapi#function('swf_perspective(', 'float $fovy , float $aspect , float $near , float $far)', 'void')
call phpapi#function('swf_placeobject(', 'int $objid , int $depth)', 'void')
call phpapi#function('swf_polarview(', 'float $dist , float $azimuth , float $incidence , float $twist)', 'void')
call phpapi#function('swf_popmatrix(', 'void)', 'void')
call phpapi#function('swf_posround(', 'int $round)', 'void')
call phpapi#function('swf_pushmatrix(', 'void)', 'void')
call phpapi#function('swf_removeobject(', 'int $depth)', 'void')
call phpapi#function('swf_rotate(', 'float $angle , string $axis)', 'void')
call phpapi#function('swf_scale(', 'float $x , float $y , float $z)', 'void')
call phpapi#function('swf_setfont(', 'int $fontid)', 'void')
call phpapi#function('swf_setframe(', 'int $framenumber)', 'void')
call phpapi#function('swf_shapearc(', 'float $x , float $y , float $r , float $ang1 , float $ang2)', 'void')
call phpapi#function('swf_shapecurveto(', 'float $x1 , float $y1 , float $x2 , float $y2)', 'void')
call phpapi#function('swf_shapecurveto3(', 'float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3)', 'void')
call phpapi#function('swf_shapefillbitmapclip(', 'int $bitmapid)', 'void')
call phpapi#function('swf_shapefillbitmaptile(', 'int $bitmapid)', 'void')
call phpapi#function('swf_shapefilloff(', 'void)', 'void')
call phpapi#function('swf_shapefillsolid(', 'float $r , float $g , float $b , float $a)', 'void')
call phpapi#function('swf_shapelinesolid(', 'float $r , float $g , float $b , float $a , float $width)', 'void')
call phpapi#function('swf_shapelineto(', 'float $x , float $y)', 'void')
call phpapi#function('swf_shapemoveto(', 'float $x , float $y)', 'void')
call phpapi#function('swf_showframe(', 'void)', 'void')
call phpapi#function('swf_startbutton(', 'int $objid , int $type)', 'void')
call phpapi#function('swf_startdoaction(', 'void)', 'void')
call phpapi#function('swf_startshape(', 'int $objid)', 'void')
call phpapi#function('swf_startsymbol(', 'int $objid)', 'void')
call phpapi#function('swf_textwidth(', 'string $str)', 'float')
call phpapi#function('swf_translate(', 'float $x , float $y , float $z)', 'void')
call phpapi#function('swf_viewport(', 'float $xmin , float $xmax , float $ymin , float $ymax)', 'void')
call phpapi#function('sybase_affected_rows(', '[ resource $link_identifier ])', 'int')
call phpapi#function('sybase_close(', '[ resource $link_identifier ])', 'bool')
call phpapi#function('sybase_connect(', '[ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = false ]]]]]])', 'resource')
call phpapi#function('sybase_data_seek(', 'resource $result_identifier , int $row_number)', 'bool')
call phpapi#function('sybase_deadlock_retry_count(', 'int $retry_count)', 'void')
call phpapi#function('sybase_fetch_array(', 'resource $result)', 'array')
call phpapi#function('sybase_fetch_assoc(', 'resource $result)', 'array')
call phpapi#function('sybase_fetch_field(', 'resource $result [, int $field_offset = -1 ])', 'object')
call phpapi#function('sybase_fetch_object(', 'resource $result [, mixed $object ])', 'object')
call phpapi#function('sybase_fetch_row(', 'resource $result)', 'array')
call phpapi#function('sybase_field_seek(', 'resource $result , int $field_offset)', 'bool')
call phpapi#function('sybase_free_result(', 'resource $result)', 'bool')
call phpapi#function('sybase_get_last_message(', 'void)', 'string')
call phpapi#function('sybase_min_client_severity(', 'int $severity)', 'void')
call phpapi#function('sybase_min_error_severity(', 'int $severity)', 'void')
call phpapi#function('sybase_min_message_severity(', 'int $severity)', 'void')
call phpapi#function('sybase_min_server_severity(', 'int $severity)', 'void')
call phpapi#function('sybase_num_fields(', 'resource $result)', 'int')
call phpapi#function('sybase_num_rows(', 'resource $result)', 'int')
call phpapi#function('sybase_pconnect(', '[ string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]])', 'resource')
call phpapi#function('sybase_query(', 'string $query [, resource $link_identifier ])', 'mixed')
call phpapi#function('sybase_result(', 'resource $result , int $row , mixed $field)', 'string')
call phpapi#function('sybase_select_db(', 'string $database_name [, resource $link_identifier ])', 'bool')
call phpapi#function('sybase_set_message_handler(', 'callback $handler [, resource $link_identifier ])', 'bool')
call phpapi#function('sybase_unbuffered_query(', 'string $query , resource $link_identifier [, bool $store_result ])', 'resource')
call phpapi#function('symlink(', 'string $target , string $link)', 'bool')
call phpapi#function('sys_get_temp_dir(', 'void)', 'string')
call phpapi#function('sys_getloadavg(', 'void)', 'array')
call phpapi#function('syslog(', 'int $priority , string $message)', 'bool')
call phpapi#function('system(', 'string $command [, int &$return_var ])', 'string')
call phpapi#function('tan(', 'float $arg)', 'float')
call phpapi#function('tanh(', 'float $arg)', 'float')
call phpapi#function('tcpwrap_check(', 'string $daemon , string $address [, string $user [, bool $nodns = false ]])', 'bool')
call phpapi#function('tempnam(', 'string $dir , string $prefix)', 'string')
call phpapi#function('textdomain(', 'string $text_domain)', 'string')
call phpapi#function('tidy_access_count(', 'tidy $object)', 'int')
call phpapi#function('tidy_config_count(', 'tidy $object)', 'int')
call phpapi#function('tidy_error_count(', 'tidy $object)', 'int')
call phpapi#function('tidy_get_output(', 'tidy $object)', 'string')
call phpapi#function('tidy_load_config(', 'string $filename , string $encoding)', 'void')
call phpapi#function('tidy_reset_config(', 'void)', 'bool')
call phpapi#function('tidy_save_config(', 'string $filename)', 'bool')
call phpapi#function('tidy_set_encoding(', 'string $encoding)', 'bool')
call phpapi#function('tidy_setopt(', 'string $option , mixed $value)', 'bool')
call phpapi#function('tidy_warning_count(', 'tidy $object)', 'int')
call phpapi#function('time(', 'void)', 'int')
call phpapi#function('time_nanosleep(', 'int $seconds , int $nanoseconds)', 'mixed')
call phpapi#function('time_sleep_until(', 'float $timestamp)', 'bool')
call phpapi#function('timezone_name_from_abbr(', 'string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]])', 'string')
call phpapi#function('timezone_version_get(', 'void)', 'string')
call phpapi#function('tmpfile(', 'void)', 'resource')
call phpapi#function('token_get_all(', 'string $source)', 'array')
call phpapi#function('token_name(', 'int $token)', 'string')
call phpapi#function('touch(', 'string $filename [, int $time = time() [, int $atime ]])', 'bool')
call phpapi#function('trigger_error(', 'string $error_msg [, int $error_type = E_USER_NOTICE ])', 'bool')
call phpapi#function('trim(', 'string $str [, string $charlist ])', 'string')
call phpapi#function('uasort(', 'array &$array , callback $cmp_function)', 'bool')
call phpapi#function('ucfirst(', 'string $str)', 'string')
call phpapi#function('ucwords(', 'string $str)', 'string')
call phpapi#function('udm_add_search_limit(', 'resource $agent , int $var , string $val)', 'bool')
call phpapi#function('udm_alloc_agent(', 'string $dbaddr [, string $dbmode ])', 'resource')
call phpapi#function('udm_alloc_agent_array(', 'array $databases)', 'resource')
call phpapi#function('udm_api_version(', 'void)', 'int')
call phpapi#function('udm_cat_list(', 'resource $agent , string $category)', 'array')
call phpapi#function('udm_cat_path(', 'resource $agent , string $category)', 'array')
call phpapi#function('udm_check_charset(', 'resource $agent , string $charset)', 'bool')
call phpapi#function('udm_check_stored(', 'resource $agent , int $link , string $doc_id)', 'int')
call phpapi#function('udm_clear_search_limits(', 'resource $agent)', 'bool')
call phpapi#function('udm_close_stored(', 'resource $agent , int $link)', 'int')
call phpapi#function('udm_crc32(', 'resource $agent , string $str)', 'int')
call phpapi#function('udm_errno(', 'resource $agent)', 'int')
call phpapi#function('udm_error(', 'resource $agent)', 'string')
call phpapi#function('udm_find(', 'resource $agent , string $query)', 'resource')
call phpapi#function('udm_free_agent(', 'resource $agent)', 'int')
call phpapi#function('udm_free_ispell_data(', 'int $agent)', 'bool')
call phpapi#function('udm_free_res(', 'resource $res)', 'bool')
call phpapi#function('udm_get_doc_count(', 'resource $agent)', 'int')
call phpapi#function('udm_get_res_field(', 'resource $res , int $row , int $field)', 'string')
call phpapi#function('udm_get_res_param(', 'resource $res , int $param)', 'string')
call phpapi#function('udm_hash32(', 'resource $agent , string $str)', 'int')
call phpapi#function('udm_load_ispell_data(', 'resource $agent , int $var , string $val1 , string $val2 , int $flag)', 'bool')
call phpapi#function('udm_open_stored(', 'resource $agent , string $storedaddr)', 'int')
call phpapi#function('udm_set_agent_param(', 'resource $agent , int $var , string $val)', 'bool')
call phpapi#function('uksort(', 'array &$array , callback $cmp_function)', 'bool')
call phpapi#function('umask(', '[ int $mask ])', 'int')
call phpapi#function('uniqid(', '[ string $prefix = "" [, bool $more_entropy = false ]])', 'string')
call phpapi#function('unixtojd(', '[ int $timestamp = time() ])', 'int')
call phpapi#function('unlink(', 'string $filename [, resource $context ])', 'bool')
call phpapi#function('unlink_node(', 'void)', 'void')
call phpapi#function('unpack(', 'string $format , string $data)', 'array')
call phpapi#function('unregister_tick_function(', 'string $function_name)', 'void')
call phpapi#function('unserialize(', 'string $str)', 'mixed')
call phpapi#function('unset(', 'mixed $var [, mixed $... ])', 'void')
call phpapi#function('urldecode(', 'string $str)', 'string')
call phpapi#function('urlencode(', 'string $str)', 'string')
call phpapi#function('use_soap_error_handler(', '[ bool $handler = true ])', 'bool')
call phpapi#function('usleep(', 'int $micro_seconds)', 'void')
call phpapi#function('usort(', 'array &$array , callback $cmp_function)', 'bool')
call phpapi#function('utf8_decode(', 'string $data)', 'string')
call phpapi#function('utf8_encode(', 'string $data)', 'string')
call phpapi#function('var_dump(', 'mixed $expression [, mixed $... ])', 'void')
call phpapi#function('var_export(', 'mixed $expression [, bool $return = false ])', 'mixed')
call phpapi#function('variant_abs(', 'mixed $val)', 'mixed')
call phpapi#function('variant_add(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_and(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_cast(', 'variant $variant , int $type)', 'variant')
call phpapi#function('variant_cat(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_cmp(', 'mixed $left , mixed $right [, int $lcid [, int $flags ]])', 'int')
call phpapi#function('variant_date_from_timestamp(', 'int $timestamp)', 'variant')
call phpapi#function('variant_date_to_timestamp(', 'variant $variant)', 'int')
call phpapi#function('variant_div(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_eqv(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_fix(', 'mixed $variant)', 'mixed')
call phpapi#function('variant_get_type(', 'variant $variant)', 'int')
call phpapi#function('variant_idiv(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_imp(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_int(', 'mixed $variant)', 'mixed')
call phpapi#function('variant_mod(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_mul(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_neg(', 'mixed $variant)', 'mixed')
call phpapi#function('variant_not(', 'mixed $variant)', 'mixed')
call phpapi#function('variant_or(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_pow(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_round(', 'mixed $variant , int $decimals)', 'mixed')
call phpapi#function('variant_set(', 'variant $variant , mixed $value)', 'void')
call phpapi#function('variant_set_type(', 'variant $variant , int $type)', 'void')
call phpapi#function('variant_sub(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('variant_xor(', 'mixed $left , mixed $right)', 'mixed')
call phpapi#function('version_compare(', 'string $version1 , string $version2 [, string $operator ])', 'mixed')
call phpapi#function('vfprintf(', 'resource $handle , string $format , array $args)', 'int')
call phpapi#function('virtual(', 'string $filename)', 'bool')
call phpapi#function('vpopmail_add_alias_domain(', 'string $domain , string $aliasdomain)', 'bool')
call phpapi#function('vpopmail_add_alias_domain_ex(', 'string $olddomain , string $newdomain)', 'bool')
call phpapi#function('vpopmail_add_domain(', 'string $domain , string $dir , int $uid , int $gid)', 'bool')
call phpapi#function('vpopmail_add_domain_ex(', 'string $domain , string $passwd [, string $quota [, string $bounce [, bool $apop ]]])', 'bool')
call phpapi#function('vpopmail_add_user(', 'string $user , string $domain , string $password [, string $gecos [, bool $apop ]])', 'bool')
call phpapi#function('vpopmail_alias_add(', 'string $user , string $domain , string $alias)', 'bool')
call phpapi#function('vpopmail_alias_del(', 'string $user , string $domain)', 'bool')
call phpapi#function('vpopmail_alias_del_domain(', 'string $domain)', 'bool')
call phpapi#function('vpopmail_alias_get(', 'string $alias , string $domain)', 'array')
call phpapi#function('vpopmail_alias_get_all(', 'string $domain)', 'array')
call phpapi#function('vpopmail_auth_user(', 'string $user , string $domain , string $password [, string $apop ])', 'bool')
call phpapi#function('vpopmail_del_domain(', 'string $domain)', 'bool')
call phpapi#function('vpopmail_del_domain_ex(', 'string $domain)', 'bool')
call phpapi#function('vpopmail_del_user(', 'string $user , string $domain)', 'bool')
call phpapi#function('vpopmail_error(', 'void)', 'string')
call phpapi#function('vpopmail_passwd(', 'string $user , string $domain , string $password [, bool $apop ])', 'bool')
call phpapi#function('vpopmail_set_user_quota(', 'string $user , string $domain , string $quota)', 'bool')
call phpapi#function('vprintf(', 'string $format , array $args)', 'int')
call phpapi#function('vsprintf(', 'string $format , array $args)', 'string')
call phpapi#function('w32api_deftype(', 'string $typename , string $member1_type , string $member1_name [, string $... [, string $... ]])', 'bool')
call phpapi#function('w32api_init_dtype(', 'string $typename , mixed $value [, mixed $... ])', 'resource')
call phpapi#function('w32api_invoke_function(', 'string $funcname , mixed $argument [, mixed $...  ])', 'mixed')
call phpapi#function('w32api_register_function(', 'string $library , string $function_name , string $return_type)', 'bool')
call phpapi#function('w32api_set_call_method(', 'int $method)', 'void')
call phpapi#function('wddx_add_vars(', 'resource $packet_id , mixed $var_name [, mixed $... ])', 'bool')
call phpapi#function('wddx_deserialize(', 'string $packet)', 'mixed')
call phpapi#function('wddx_packet_end(', 'resource $packet_id)', 'string')
call phpapi#function('wddx_packet_start(', '[ string $comment ])', 'resource')
call phpapi#function('wddx_serialize_value(', 'mixed $var [, string $comment ])', 'string')
call phpapi#function('wddx_serialize_vars(', 'mixed $var_name [, mixed $... ])', 'string')
call phpapi#function('win32_continue_service(', 'string $servicename [, string $machine ])', 'int')
call phpapi#function('win32_create_service(', 'array $details [, string $machine ])', 'mixed')
call phpapi#function('win32_delete_service(', 'string $servicename [, string $machine ])', 'mixed')
call phpapi#function('win32_get_last_control_message(', 'void)', 'int')
call phpapi#function('win32_pause_service(', 'string $servicename [, string $machine ])', 'int')
call phpapi#function('win32_ps_list_procs(', 'void)', 'array')
call phpapi#function('win32_ps_stat_mem(', 'void)', 'array')
call phpapi#function('win32_ps_stat_proc(', '[ int $pid = 0 ])', 'array')
call phpapi#function('win32_query_service_status(', 'string $servicename [, string $machine ])', 'mixed')
call phpapi#function('win32_set_service_status(', 'int $status [, int $checkpoint = 0 ])', 'bool')
call phpapi#function('win32_start_service(', 'string $servicename [, string $machine ])', 'int')
call phpapi#function('win32_start_service_ctrl_dispatcher(', 'string $name)', 'mixed')
call phpapi#function('win32_stop_service(', 'string $servicename [, string $machine ])', 'int')
call phpapi#function('wincache_fcache_fileinfo(', '[ bool $summaryonly = false ])', 'array')
call phpapi#function('wincache_fcache_meminfo(', 'void)', 'array')
call phpapi#function('wincache_lock(', 'string $key [, bool $isglobal = false ])', 'bool')
call phpapi#function('wincache_ocache_fileinfo(', '[ bool $summaryonly = false ])', 'array')
call phpapi#function('wincache_ocache_meminfo(', 'void)', 'array')
call phpapi#function('wincache_refresh_if_changed(', '[ array $files ])', 'bool')
call phpapi#function('wincache_rplist_fileinfo(', '[ bool $summaryonly = false ])', 'array')
call phpapi#function('wincache_rplist_meminfo(', 'void)', 'array')
call phpapi#function('wincache_scache_info(', '[ bool $summaryonly = false ])', 'array')
call phpapi#function('wincache_scache_meminfo(', 'void)', 'array')
call phpapi#function('wincache_ucache_add(', 'string $key , mixed $value [, int $ttl = 0 ])', 'bool')
call phpapi#function('wincache_ucache_cas(', 'string $key , int $old_value , int $new_value)', 'bool')
call phpapi#function('wincache_ucache_clear(', 'void)', 'bool')
call phpapi#function('wincache_ucache_dec(', 'string $key [, int $dec_by = 1 [, bool &$success ]])', 'mixed')
call phpapi#function('wincache_ucache_delete(', 'mixed $key)', 'bool')
call phpapi#function('wincache_ucache_exists(', 'string $key)', 'bool')
call phpapi#function('wincache_ucache_get(', 'mixed $key [, bool &$success ])', 'mixed')
call phpapi#function('wincache_ucache_inc(', 'string $key [, int $inc_by = 1 [, bool &$success ]])', 'mixed')
call phpapi#function('wincache_ucache_info(', '[ bool $summaryonly = false [, string $key ]])', 'array')
call phpapi#function('wincache_ucache_meminfo(', 'void)', 'array')
call phpapi#function('wincache_ucache_set(', 'mixed $key , mixed $value [, int $ttl = 0 ])', 'bool')
call phpapi#function('wincache_unlock(', 'string $key)', 'bool')
call phpapi#function('wordwrap(', 'string $str [, int $width = 75 [, string $break = "\n" [, bool $cut = false ]]])', 'string')
call phpapi#function('xattr_get(', 'string $filename , string $name [, int $flags = 0 ])', 'string')
call phpapi#function('xattr_list(', 'string $filename [, int $flags = 0 ])', 'array')
call phpapi#function('xattr_remove(', 'string $filename , string $name [, int $flags = 0 ])', 'bool')
call phpapi#function('xattr_set(', 'string $filename , string $name , string $value [, int $flags = 0 ])', 'bool')
call phpapi#function('xattr_supported(', 'string $filename [, int $flags = 0 ])', 'bool')
call phpapi#function('xdiff_file_bdiff_size(', 'string $file)', 'int')
call phpapi#function('xdiff_file_bpatch(', 'string $file , string $patch , string $dest)', 'bool')
call phpapi#function('xdiff_file_diff(', 'string $old_file , string $new_file , string $dest [, int $context = 3 [, bool $minimal = false ]])', 'bool')
call phpapi#function('xdiff_file_diff_binary(', 'string $old_file , string $new_file , string $dest)', 'bool')
call phpapi#function('xdiff_file_merge3(', 'string $old_file , string $new_file1 , string $new_file2 , string $dest)', 'mixed')
call phpapi#function('xdiff_file_patch(', 'string $file , string $patch , string $dest [, int $flags = DIFF_PATCH_NORMAL ])', 'mixed')
call phpapi#function('xdiff_file_patch_binary(', 'string $file , string $patch , string $dest)', 'bool')
call phpapi#function('xdiff_file_rabdiff(', 'string $old_file , string $new_file , string $dest)', 'bool')
call phpapi#function('xdiff_string_bdiff(', 'string $old_data , string $new_data)', 'string')
call phpapi#function('xdiff_string_bdiff(', 'string $old_data , string $new_data)', 'string')
call phpapi#function('xdiff_string_bdiff(', 'string $old_data , string $new_data)', 'string')
call phpapi#function('xdiff_string_bdiff_size(', 'string $patch)', 'int')
call phpapi#function('xdiff_string_bpatch(', 'string $str , string $patch)', 'string')
call phpapi#function('xdiff_string_diff(', 'string $old_data , string $new_data [, int $context = 3 [, bool $minimal = false ]])', 'string')
call phpapi#function('xdiff_string_merge3(', 'string $old_data , string $new_data1 , string $new_data2 [, string &$error ])', 'mixed')
call phpapi#function('xdiff_string_patch(', 'string $str , string $patch [, int $flags [, string &$error ]])', 'string')
call phpapi#function('xdiff_string_patch_binary(', 'string $str , string $patch)', 'string')
call phpapi#function('xhprof_disable(', 'void)', 'array')
call phpapi#function('xhprof_enable(', '[ int $flags = 0 [, array $options ]])', 'void')
call phpapi#function('xhprof_sample_disable(', 'void)', 'NULL')
call phpapi#function('xhprof_sample_enable(', 'void)', 'void')
call phpapi#function('xinclude(', 'void)', 'int')
call phpapi#function('xml_error_string(', 'int $code)', 'string')
call phpapi#function('xml_get_current_byte_index(', 'resource $parser)', 'int')
call phpapi#function('xml_get_current_column_number(', 'resource $parser)', 'int')
call phpapi#function('xml_get_current_line_number(', 'resource $parser)', 'int')
call phpapi#function('xml_get_error_code(', 'resource $parser)', 'int')
call phpapi#function('xml_parse(', 'resource $parser , string $data [, bool $is_final = false ])', 'int')
call phpapi#function('xml_parse_into_struct(', 'resource $parser , string $data , array &$values [, array &$index ])', 'int')
call phpapi#function('xml_parser_create(', '[ string $encoding ])', 'resource')
call phpapi#function('xml_parser_create_ns(', '[ string $encoding [, string $separator = ":" ]])', 'resource')
call phpapi#function('xml_parser_free(', 'resource $parser)', 'bool')
call phpapi#function('xml_parser_get_option(', 'resource $parser , int $option)', 'mixed')
call phpapi#function('xml_parser_set_option(', 'resource $parser , int $option , mixed $value)', 'bool')
call phpapi#function('xml_set_character_data_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xml_set_default_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xml_set_element_handler(', 'resource $parser , callback $start_element_handler , callback $end_element_handler)', 'bool')
call phpapi#function('xml_set_end_namespace_decl_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xml_set_external_entity_ref_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xml_set_notation_decl_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xml_set_object(', 'resource $parser , object &$object)', 'bool')
call phpapi#function('xml_set_processing_instruction_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xml_set_start_namespace_decl_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xml_set_unparsed_entity_decl_handler(', 'resource $parser , callback $handler)', 'bool')
call phpapi#function('xmlrpc_decode(', 'string $xml [, string $encoding = "iso-8859-1" ])', 'mixed')
call phpapi#function('xmlrpc_decode_request(', 'string $xml , string &$method [, string $encoding ])', 'mixed')
call phpapi#function('xmlrpc_encode(', 'mixed $value)', 'string')
call phpapi#function('xmlrpc_encode_request(', 'string $method , mixed $params [, array $output_options ])', 'string')
call phpapi#function('xmlrpc_get_type(', 'mixed $value)', 'string')
call phpapi#function('xmlrpc_is_fault(', 'array $arg)', 'bool')
call phpapi#function('xmlrpc_parse_method_descriptions(', 'string $xml)', 'array')
call phpapi#function('xmlrpc_server_add_introspection_data(', 'resource $server , array $desc)', 'int')
call phpapi#function('xmlrpc_server_call_method(', 'resource $server , string $xml , mixed $user_data [, array $output_options ])', 'string')
call phpapi#function('xmlrpc_server_create(', 'void)', 'resource')
call phpapi#function('xmlrpc_server_destroy(', 'resource $server)', 'int')
call phpapi#function('xmlrpc_server_register_introspection_callback(', 'resource $server , string $function)', 'bool')
call phpapi#function('xmlrpc_server_register_method(', 'resource $server , string $method_name , string $function)', 'bool')
call phpapi#function('xmlrpc_set_type(', 'string &$value , string $type)', 'bool')
call phpapi#function('xpath_new_context(', 'domdocument $dom_document)', 'XPathContext')
call phpapi#function('xpath_register_ns(', 'XPathContext $xpath_context , string $prefix , string $uri)', 'bool')
call phpapi#function('xpath_register_ns_auto(', 'XPathContext $xpath_context [, object $context_node ])', 'bool')
call phpapi#function('xptr_new_context(', 'void)', 'XPathContext')
call phpapi#function('xslt_backend_info(', 'void)', 'string')
call phpapi#function('xslt_backend_name(', 'void)', 'string')
call phpapi#function('xslt_backend_version(', 'void)', 'string')
call phpapi#function('xslt_create(', 'void)', 'resource')
call phpapi#function('xslt_errno(', 'resource $xh)', 'int')
call phpapi#function('xslt_error(', 'resource $xh)', 'string')
call phpapi#function('xslt_free(', 'resource $xh)', 'void')
call phpapi#function('xslt_getopt(', 'resource $processor)', 'int')
call phpapi#function('xslt_process(', 'resource $xh , string $xmlcontainer , string $xslcontainer [, string $resultcontainer [, array $arguments [, array $parameters ]]])', 'mixed')
call phpapi#function('xslt_set_base(', 'resource $xh , string $uri)', 'void')
call phpapi#function('xslt_set_encoding(', 'resource $xh , string $encoding)', 'void')
call phpapi#function('xslt_set_error_handler(', 'resource $xh , mixed $handler)', 'void')
call phpapi#function('xslt_set_log(', 'resource $xh [, mixed $log ])', 'void')
call phpapi#function('xslt_set_object(', 'resource $processor , object &$obj)', 'bool')
call phpapi#function('xslt_set_sax_handler(', 'resource $xh , array $handlers)', 'void')
call phpapi#function('xslt_set_sax_handlers(', 'resource $processor , array $handlers)', 'void')
call phpapi#function('xslt_set_scheme_handler(', 'resource $xh , array $handlers)', 'void')
call phpapi#function('xslt_set_scheme_handlers(', 'resource $xh , array $handlers)', 'void')
call phpapi#function('xslt_setopt(', 'resource $processor , int $newmask)', 'mixed')
call phpapi#function('yaml_emit(', 'mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK ]])', 'string')
call phpapi#function('yaml_emit_file(', 'string $filename , mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK ]])', 'bool')
call phpapi#function('yaml_parse(', 'string $input [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]])', 'mixed')
call phpapi#function('yaml_parse_file(', 'string $filename [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]])', 'mixed')
call phpapi#function('yaml_parse_url(', 'string $url [, int $pos = 0 [, int &$ndocs [, array $callbacks ]]])', 'mixed')
call phpapi#function('yaz_addinfo(', 'resource $id)', 'string')
call phpapi#function('yaz_ccl_conf(', 'resource $id , array $config)', 'void')
call phpapi#function('yaz_ccl_parse(', 'resource $id , string $query , array &$result)', 'bool')
call phpapi#function('yaz_close(', 'resource $id)', 'bool')
call phpapi#function('yaz_connect(', 'string $zurl [, mixed $options ])', 'mixed')
call phpapi#function('yaz_database(', 'resource $id , string $databases)', 'bool')
call phpapi#function('yaz_element(', 'resource $id , string $elementset)', 'bool')
call phpapi#function('yaz_errno(', 'resource $id)', 'int')
call phpapi#function('yaz_error(', 'resource $id)', 'string')
call phpapi#function('yaz_es(', 'resource $id , string $type , array $args)', 'void')
call phpapi#function('yaz_es_result(', 'resource $id)', 'array')
call phpapi#function('yaz_get_option(', 'resource $id , string $name)', 'string')
call phpapi#function('yaz_hits(', 'resource $id [, array &$searchresult ])', 'int')
call phpapi#function('yaz_itemorder(', 'resource $id , array $args)', 'void')
call phpapi#function('yaz_present(', 'resource $id)', 'bool')
call phpapi#function('yaz_range(', 'resource $id , int $start , int $number)', 'void')
call phpapi#function('yaz_record(', 'resource $id , int $pos , string $type)', 'string')
call phpapi#function('yaz_scan(', 'resource $id , string $type , string $startterm [, array $flags ])', 'void')
call phpapi#function('yaz_scan_result(', 'resource $id [, array &$result ])', 'array')
call phpapi#function('yaz_schema(', 'resource $id , string $schema)', 'void')
call phpapi#function('yaz_search(', 'resource $id , string $type , string $query)', 'bool')
call phpapi#function('yaz_set_option(', 'resource $id , string $name , string $value)', 'void')
call phpapi#function('yaz_sort(', 'resource $id , string $criteria)', 'void')
call phpapi#function('yaz_syntax(', 'resource $id , string $syntax)', 'void')
call phpapi#function('yaz_wait(', '[ array &$options ])', 'mixed')
call phpapi#function('yp_all(', 'string $domain , string $map , string $callback)', 'void')
call phpapi#function('yp_cat(', 'string $domain , string $map)', 'array')
call phpapi#function('yp_err_string(', 'int $errorcode)', 'string')
call phpapi#function('yp_errno(', 'void)', 'int')
call phpapi#function('yp_first(', 'string $domain , string $map)', 'array')
call phpapi#function('yp_get_default_domain(', 'void)', 'string')
call phpapi#function('yp_master(', 'string $domain , string $map)', 'string')
call phpapi#function('yp_match(', 'string $domain , string $map , string $key)', 'string')
call phpapi#function('yp_next(', 'string $domain , string $map , string $key)', 'array')
call phpapi#function('yp_order(', 'string $domain , string $map)', 'int')
call phpapi#function('zend_logo_guid(', 'void)', 'string')
call phpapi#function('zend_thread_id(', 'void)', 'int')
call phpapi#function('zend_version(', 'void)', 'string')
call phpapi#function('zip_close(', 'resource $zip)', 'void')
call phpapi#function('zip_entry_close(', 'resource $zip_entry)', 'bool')
call phpapi#function('zip_entry_compressedsize(', 'resource $zip_entry)', 'int')
call phpapi#function('zip_entry_compressionmethod(', 'resource $zip_entry)', 'string')
call phpapi#function('zip_entry_filesize(', 'resource $zip_entry)', 'int')
call phpapi#function('zip_entry_name(', 'resource $zip_entry)', 'string')
call phpapi#function('zip_entry_open(', 'resource $zip , resource $zip_entry [, string $mode ])', 'bool')
call phpapi#function('zip_entry_read(', 'resource $zip_entry [, int $length ])', 'string')
call phpapi#function('zip_open(', 'string $filename)', 'mixed')
call phpapi#function('zip_read(', 'resource $zip)', 'mixed')
call phpapi#function('zlib_get_coding_type(', 'void)', 'string')
